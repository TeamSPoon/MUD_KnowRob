#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2003/03swap/socrates.n3 --query http://eulersharp.sourceforge.net/2003/03swap/socratesF.n3

PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX : <http://www.agfa.com/w3c/euler/socrates#>
PREFIX q: <http://www.w3.org/2004/ql#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:gives { :Socrates a _:Man_1. :Socrates a :Mortal. }].

<#lemma1> a r:Inference; r:gives {:Socrates a _:Man_1}; r:evidence (
  <#lemma3>);
  r:rule <#lemma4>.

<#lemma2> a r:Inference; r:gives {:Socrates a :Mortal}; r:evidence (
  <#lemma5>);
  r:rule <#lemma4>.

<#lemma3> a r:Extraction; r:gives {:Socrates a _:Man_1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>].

<#lemma4> a r:Extraction; r:gives {{?x0 a ?x1} => {?x0 a ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socratesF.n3>].

<#lemma5> a r:Inference; r:gives {:Socrates a :Mortal}; r:evidence (
  <#lemma6>
  <#lemma3>);
  r:rule <#lemma7>.

<#lemma6> a r:Extraction; r:gives {_:Man_1 rdfs:subClassOf :Mortal};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>].

<#lemma7> a r:Extraction; r:gives {{?x0 rdfs:subClassOf ?x1.
  ?x2 a ?x0} => {?x2 a ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>].

#ENDS 0.706 [sec] TC=3 TP=6 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3 http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3 --query http://eulersharp.sourceforge.net/2003/03swap/graph.filter.n3

PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX : <http://www.agfa.com/w3c/euler/graph.axiom#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX ns1: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :paris :path :nantes.
  }].

<#lemma1> a r:Inference; r:gives {:paris :path :nantes}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {:paris :path :nantes}; r:evidence (
  <#lemma4>
  <#lemma5>
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma3> a r:Extraction; r:gives {{:paris :path :nantes} => {:paris :path :nantes}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.filter.n3>].

<#lemma4> a r:Extraction; r:gives {:path a owl:TransitiveProperty};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>].

<#lemma5> a r:Inference; r:gives {:angers :path :nantes}; r:evidence (
  <#lemma8>
  <#lemma9>);
  r:rule <#lemma10>.

<#lemma6> a r:Inference; r:gives {:paris :path :angers}; r:evidence (
  <#lemma4>
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma7>.

<#lemma7> a r:Extraction; r:gives {{?x0 a owl:TransitiveProperty.
  ?x1 ?x0 ?x2.
  ?x3 ?x0 ?x1} => {?x3 ?x0 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma8> a r:Extraction; r:gives {:oneway rdfs:subPropertyOf :path};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>].

<#lemma9> a r:Extraction; r:gives {:angers :oneway :nantes};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>].

<#lemma10> a r:Extraction; r:gives {{?x0 rdfs:subPropertyOf ?x1.
  ?x2 ?x0 ?x3} => {?x2 ?x1 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma11> a r:Inference; r:gives {:lemans :path :angers}; r:evidence (
  <#lemma8>
  <#lemma13>);
  r:rule <#lemma10>.

<#lemma12> a r:Inference; r:gives {:paris :path :lemans}; r:evidence (
  <#lemma4>
  <#lemma14>
  <#lemma15>);
  r:rule <#lemma7>.

<#lemma13> a r:Extraction; r:gives {:lemans :oneway :angers};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>].

<#lemma14> a r:Inference; r:gives {:chartres :path :lemans}; r:evidence (
  <#lemma8>
  <#lemma16>);
  r:rule <#lemma10>.

<#lemma15> a r:Inference; r:gives {:paris :path :chartres}; r:evidence (
  <#lemma8>
  <#lemma17>);
  r:rule <#lemma10>.

<#lemma16> a r:Extraction; r:gives {:chartres :oneway :lemans};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>].

<#lemma17> a r:Extraction; r:gives {:paris :oneway :chartres};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>].

#ENDS 1.586 [sec] TC=24 TP=64 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3 http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3 http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3 --query http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3

PREFIX gc: <http://www.daml.org/2001/01/gedcom/gedcom#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX : <http://www.agfa.com/w3c/euler/gedcom-facts#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX ns1: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:gives {
    :Jos :testRelationship :Bart.
    :Jos :testRelationship :Tom.
    :Geert :testRelationship :Bart.
    :Dirk :testRelationship :Bart.
    :Geert :testRelationship :Tom.
    :Dirk :testRelationship :Tom.
  }].

<#lemma1> a r:Inference; r:gives {:Jos :testRelationship :Bart}; r:evidence (
  <#lemma7>
  <#lemma8>
  <#lemma9>
  <#lemma10>);
  r:rule <#lemma11>.

<#lemma2> a r:Inference; r:gives {:Jos :testRelationship :Tom}; r:evidence (
  <#lemma7>
  <#lemma12>
  <#lemma13>
  <#lemma14>);
  r:rule <#lemma11>.

<#lemma3> a r:Inference; r:gives {:Geert :testRelationship :Bart}; r:evidence (
  <#lemma15>
  <#lemma8>
  <#lemma9>
  <#lemma16>);
  r:rule <#lemma11>.

<#lemma4> a r:Inference; r:gives {:Dirk :testRelationship :Bart}; r:evidence (
  <#lemma17>
  <#lemma8>
  <#lemma9>
  <#lemma18>);
  r:rule <#lemma11>.

<#lemma5> a r:Inference; r:gives {:Geert :testRelationship :Tom}; r:evidence (
  <#lemma15>
  <#lemma12>
  <#lemma13>
  <#lemma19>);
  r:rule <#lemma11>.

<#lemma6> a r:Inference; r:gives {:Dirk :testRelationship :Tom}; r:evidence (
  <#lemma17>
  <#lemma12>
  <#lemma13>
  <#lemma20>);
  r:rule <#lemma11>.

<#lemma7> a r:Inference; r:gives {:Jos gc:mother :Maria}; r:evidence (
  <#lemma21>
  <#lemma22>);
  r:rule <#lemma23>.

<#lemma8> a r:Inference; r:gives {:Maria gc:daughter :Rita}; r:evidence (
  <#lemma24>
  <#lemma25>);
  r:rule <#lemma26>.

<#lemma9> a r:Inference; r:gives {:Rita gc:son :Bart}; r:evidence (
  <#lemma27>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma10> a r:Inference; r:gives {:Bart gc:uncle :Jos}; r:evidence (
  <#lemma27>
  <#lemma30>);
  r:rule <#lemma31>.

<#lemma11> a r:Extraction; r:gives {{?x0 gc:mother ?x1.
  ?x1 gc:daughter ?x2.
  ?x2 gc:son ?x3.
  ?x3 gc:uncle ?x0} => {?x0 :testRelationship ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>].

<#lemma12> a r:Inference; r:gives {:Maria gc:daughter :Greta}; r:evidence (
  <#lemma32>
  <#lemma33>);
  r:rule <#lemma26>.

<#lemma13> a r:Inference; r:gives {:Greta gc:son :Tom}; r:evidence (
  <#lemma34>
  <#lemma35>);
  r:rule <#lemma29>.

<#lemma14> a r:Inference; r:gives {:Tom gc:uncle :Jos}; r:evidence (
  <#lemma34>
  <#lemma36>);
  r:rule <#lemma31>.

<#lemma15> a r:Inference; r:gives {:Geert gc:mother :Maria}; r:evidence (
  <#lemma37>
  <#lemma22>);
  r:rule <#lemma23>.

<#lemma16> a r:Inference; r:gives {:Bart gc:uncle :Geert}; r:evidence (
  <#lemma27>
  <#lemma38>);
  r:rule <#lemma31>.

<#lemma17> a r:Inference; r:gives {:Dirk gc:mother :Maria}; r:evidence (
  <#lemma39>
  <#lemma22>);
  r:rule <#lemma23>.

<#lemma18> a r:Inference; r:gives {:Bart gc:uncle :Dirk}; r:evidence (
  <#lemma27>
  <#lemma40>);
  r:rule <#lemma31>.

<#lemma19> a r:Inference; r:gives {:Tom gc:uncle :Geert}; r:evidence (
  <#lemma34>
  <#lemma41>);
  r:rule <#lemma31>.

<#lemma20> a r:Inference; r:gives {:Tom gc:uncle :Dirk}; r:evidence (
  <#lemma34>
  <#lemma42>);
  r:rule <#lemma31>.

<#lemma21> a r:Inference; r:gives {:Jos gc:parent :Maria}; r:evidence (
  <#lemma43>
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma22> a r:Extraction; r:gives {:Maria gc:sex gc:Female};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma23> a r:Extraction; r:gives {{?x0 gc:parent ?x1.
  ?x1 gc:sex gc:Female} => {?x0 gc:mother ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma24> a r:Inference; r:gives {:Rita gc:parent :Maria}; r:evidence (
  <#lemma46>
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma25> a r:Extraction; r:gives {:Rita gc:sex gc:Female};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma26> a r:Extraction; r:gives {{?x0 gc:parent ?x1.
  ?x0 gc:sex gc:Female} => {?x1 gc:daughter ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma27> a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
  <#lemma47>
  <#lemma48>);
  r:rule <#lemma45>.

<#lemma28> a r:Extraction; r:gives {:Bart gc:sex gc:Male};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma29> a r:Extraction; r:gives {{?x0 gc:parent ?x1.
  ?x0 gc:sex gc:Male} => {?x1 gc:son ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma30> a r:Inference; r:gives {:Rita gc:brother :Jos}; r:evidence (
  <#lemma49>
  <#lemma50>);
  r:rule <#lemma51>.

<#lemma31> a r:Extraction; r:gives {{?x0 gc:parent ?x1.
  ?x1 gc:brother ?x2} => {?x0 gc:uncle ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma32> a r:Inference; r:gives {:Greta gc:parent :Maria}; r:evidence (
  <#lemma52>
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma33> a r:Extraction; r:gives {:Greta gc:sex gc:Female};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma34> a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
  <#lemma53>
  <#lemma54>);
  r:rule <#lemma45>.

<#lemma35> a r:Extraction; r:gives {:Tom gc:sex gc:Male};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma36> a r:Inference; r:gives {:Greta gc:brother :Jos}; r:evidence (
  <#lemma55>
  <#lemma50>);
  r:rule <#lemma51>.

<#lemma37> a r:Inference; r:gives {:Geert gc:parent :Maria}; r:evidence (
  <#lemma56>
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma38> a r:Inference; r:gives {:Rita gc:brother :Geert}; r:evidence (
  <#lemma57>
  <#lemma58>);
  r:rule <#lemma51>.

<#lemma39> a r:Inference; r:gives {:Dirk gc:parent :Maria}; r:evidence (
  <#lemma59>
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma40> a r:Inference; r:gives {:Rita gc:brother :Dirk}; r:evidence (
  <#lemma60>
  <#lemma61>);
  r:rule <#lemma51>.

<#lemma41> a r:Inference; r:gives {:Greta gc:brother :Geert}; r:evidence (
  <#lemma62>
  <#lemma58>);
  r:rule <#lemma51>.

<#lemma42> a r:Inference; r:gives {:Greta gc:brother :Dirk}; r:evidence (
  <#lemma63>
  <#lemma61>);
  r:rule <#lemma51>.

<#lemma43> a r:Extraction; r:gives {:Jos gc:childIn :dp};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma44> a r:Extraction; r:gives {:Maria gc:spouseIn :dp};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma45> a r:Extraction; r:gives {{?x0 gc:childIn ?x1.
  ?x2 gc:spouseIn ?x1} => {?x0 gc:parent ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma46> a r:Extraction; r:gives {:Rita gc:childIn :dp};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma47> a r:Extraction; r:gives {:Bart gc:childIn :gd};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma48> a r:Extraction; r:gives {:Rita gc:spouseIn :gd};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma49> a r:Inference; r:gives {:Rita gc:sibling :Jos}; r:evidence (
  <#lemma64>
  <#lemma65>);
  r:rule <#lemma66>.

<#lemma50> a r:Extraction; r:gives {:Jos gc:sex gc:Male};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma51> a r:Extraction; r:gives {{?x0 gc:sibling ?x1.
  ?x1 gc:sex gc:Male} => {?x0 gc:brother ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma52> a r:Extraction; r:gives {:Greta gc:childIn :dp};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma53> a r:Extraction; r:gives {:Tom gc:childIn :sd};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma54> a r:Extraction; r:gives {:Greta gc:spouseIn :sd};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma55> a r:Inference; r:gives {:Greta gc:sibling :Jos}; r:evidence (
  <#lemma64>
  <#lemma67>);
  r:rule <#lemma66>.

<#lemma56> a r:Extraction; r:gives {:Geert gc:childIn :dp};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma57> a r:Inference; r:gives {:Rita gc:sibling :Geert}; r:evidence (
  <#lemma46>
  <#lemma56>
  <#lemma68>);
  r:rule <#lemma69>.

<#lemma58> a r:Extraction; r:gives {:Geert gc:sex gc:Male};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma59> a r:Extraction; r:gives {:Dirk gc:childIn :dp};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma60> a r:Inference; r:gives {:Rita gc:sibling :Dirk}; r:evidence (
  <#lemma46>
  <#lemma59>
  <#lemma70>);
  r:rule <#lemma69>.

<#lemma61> a r:Extraction; r:gives {:Dirk gc:sex gc:Male};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma62> a r:Inference; r:gives {:Greta gc:sibling :Geert}; r:evidence (
  <#lemma64>
  <#lemma71>);
  r:rule <#lemma66>.

<#lemma63> a r:Inference; r:gives {:Greta gc:sibling :Dirk}; r:evidence (
  <#lemma64>
  <#lemma72>);
  r:rule <#lemma66>.

<#lemma64> a r:Extraction; r:gives {gc:sibling a owl:SymmetricProperty};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma65> a r:Inference; r:gives {:Jos gc:sibling :Rita}; r:evidence (
  <#lemma43>
  <#lemma46>
  <#lemma73>);
  r:rule <#lemma69>.

<#lemma66> a r:Extraction; r:gives {{?x0 a owl:SymmetricProperty.
  ?x1 ?x0 ?x2} => {?x2 ?x0 ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma67> a r:Inference; r:gives {:Jos gc:sibling :Greta}; r:evidence (
  <#lemma43>
  <#lemma52>
  <#lemma74>);
  r:rule <#lemma69>.

<#lemma68> a r:Inference; r:gives {:Rita owl:differentFrom :Geert}; r:evidence (
  <#lemma75>
  <#lemma76>
  [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:first :Rita}]
  [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]
  [ a r:Fact; r:gives {:Geert list:in (:Geert :Caroline :Dirk :Greta)}]);
  r:rule <#lemma77>.

<#lemma69> a r:Extraction; r:gives {{?x0 gc:childIn ?x1.
  ?x2 gc:childIn ?x1.
  ?x0 owl:differentFrom ?x2} => {?x0 gc:sibling ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>].

<#lemma70> a r:Inference; r:gives {:Rita owl:differentFrom :Dirk}; r:evidence (
  <#lemma75>
  <#lemma76>
  [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:first :Rita}]
  [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]
  [ a r:Fact; r:gives {:Dirk list:in (:Geert :Caroline :Dirk :Greta)}]);
  r:rule <#lemma77>.

<#lemma71> a r:Inference; r:gives {:Geert gc:sibling :Greta}; r:evidence (
  <#lemma56>
  <#lemma52>
  <#lemma78>);
  r:rule <#lemma69>.

<#lemma72> a r:Inference; r:gives {:Dirk gc:sibling :Greta}; r:evidence (
  <#lemma59>
  <#lemma52>
  <#lemma79>);
  r:rule <#lemma69>.

<#lemma73> a r:Inference; r:gives {:Jos owl:differentFrom :Rita}; r:evidence (
  <#lemma75>
  <#lemma80>
  [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:first :Jos}]
  [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
  [ a r:Fact; r:gives {:Rita list:in (:Rita :Geert :Caroline :Dirk :Greta)}]);
  r:rule <#lemma77>.

<#lemma74> a r:Inference; r:gives {:Jos owl:differentFrom :Greta}; r:evidence (
  <#lemma75>
  <#lemma80>
  [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:first :Jos}]
  [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
  [ a r:Fact; r:gives {:Greta list:in (:Rita :Geert :Caroline :Dirk :Greta)}]);
  r:rule <#lemma77>.

<#lemma75> a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>].

<#lemma76> a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) ns1:subListOf (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
  [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
  <#lemma81>
  <#lemma82>);
  r:rule <#lemma83>.

<#lemma77> a r:Extraction; r:gives {{?x0 owl:distinctMembers ?x1.
  ?x2 ns1:subListOf ?x1.
  ?x2 rdf:first ?x3.
  ?x2 rdf:rest ?x4.
  ?x5 list:in ?x4} => {?x3 owl:differentFrom ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma78> a r:Inference; r:gives {:Geert owl:differentFrom :Greta}; r:evidence (
  <#lemma84>
  <#lemma85>
  [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:first :Geert}]
  [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:rest (:Caroline :Dirk :Greta)}]
  [ a r:Fact; r:gives {:Greta list:in (:Caroline :Dirk :Greta)}]);
  r:rule <#lemma77>.

<#lemma79> a r:Inference; r:gives {:Dirk owl:differentFrom :Greta}; r:evidence (
  <#lemma86>
  <#lemma87>
  [ a r:Fact; r:gives {(:Dirk :Greta) rdf:first :Dirk}]
  [ a r:Fact; r:gives {(:Dirk :Greta) rdf:rest (:Greta)}]
  [ a r:Fact; r:gives {:Greta list:in (:Greta)}]);
  r:rule <#lemma77>.

<#lemma80> a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) ns1:subListOf (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
  <#lemma81>);
  r:rule <#lemma88>.

<#lemma81> a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
  <#lemma89>
  <#lemma75>);
  r:rule <#lemma90>.

<#lemma82> a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) ns1:subListOf (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
  <#lemma91>);
  r:rule <#lemma88>.

<#lemma83> a r:Extraction; r:gives {{?x0 rdf:rest ?x1.
  ?x0 a rdf:List.
  ?x2 ns1:subListOf ?x1} => {?x2 ns1:subListOf ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma84> a r:Inference; r:gives {:dp owl:distinctMembers (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
  <#lemma75>
  [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]);
  r:rule <#lemma92>.

<#lemma85> a r:Inference; r:gives {(:Geert :Caroline :Dirk :Greta) ns1:subListOf (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
  [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]
  <#lemma91>
  <#lemma93>);
  r:rule <#lemma83>.

<#lemma86> a r:Inference; r:gives {:dp owl:distinctMembers (:Caroline :Dirk :Greta)}; r:evidence (
  <#lemma94>
  [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:rest (:Caroline :Dirk :Greta)}]);
  r:rule <#lemma92>.

<#lemma87> a r:Inference; r:gives {(:Dirk :Greta) ns1:subListOf (:Caroline :Dirk :Greta)}; r:evidence (
  [ a r:Fact; r:gives {(:Caroline :Dirk :Greta) rdf:rest (:Dirk :Greta)}]
  <#lemma95>
  <#lemma96>);
  r:rule <#lemma83>.

<#lemma88> a r:Extraction; r:gives {{?x0 a rdf:List} => {?x0 ns1:subListOf ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma89> a r:Extraction; r:gives {owl:distinctMembers rdfs:range rdf:List};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma90> a r:Extraction; r:gives {{?x0 rdfs:range ?x1.
  ?x2 ?x0 ?x3} => {?x3 a ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma91> a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
  <#lemma89>
  <#lemma84>);
  r:rule <#lemma90>.

<#lemma92> a r:Extraction; r:gives {{?x0 owl:distinctMembers ?x1.
  ?x1 rdf:rest ?x2} => {?x0 owl:distinctMembers ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>].

<#lemma93> a r:Inference; r:gives {(:Geert :Caroline :Dirk :Greta) ns1:subListOf (:Geert :Caroline :Dirk :Greta)}; r:evidence (
  <#lemma97>);
  r:rule <#lemma88>.

<#lemma94> a r:Inference; r:gives {:dp owl:distinctMembers (:Geert :Caroline :Dirk :Greta)}; r:evidence (
  <#lemma84>
  [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]);
  r:rule <#lemma92>.

<#lemma95> a r:Inference; r:gives {(:Caroline :Dirk :Greta) a rdf:List}; r:evidence (
  <#lemma89>
  <#lemma86>);
  r:rule <#lemma90>.

<#lemma96> a r:Inference; r:gives {(:Dirk :Greta) ns1:subListOf (:Dirk :Greta)}; r:evidence (
  <#lemma98>);
  r:rule <#lemma88>.

<#lemma97> a r:Inference; r:gives {(:Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
  <#lemma89>
  <#lemma94>);
  r:rule <#lemma90>.

<#lemma98> a r:Inference; r:gives {(:Dirk :Greta) a rdf:List}; r:evidence (
  <#lemma89>
  <#lemma99>);
  r:rule <#lemma90>.

<#lemma99> a r:Inference; r:gives {:dp owl:distinctMembers (:Dirk :Greta)}; r:evidence (
  <#lemma86>
  [ a r:Fact; r:gives {(:Caroline :Dirk :Greta) rdf:rest (:Dirk :Greta)}]);
  r:rule <#lemma92>.

#ENDS 1.784 [sec] TC=1591 TP=20787 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2004/04test/easterP.n3 --query http://eulersharp.sourceforge.net/2004/04test/easterF.n3

PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX string: <http://www.w3.org/2000/10/swap/string#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX : <http://www.agfa.com/w3c/euler/easterP#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:gives {
    2011 :hasEasterOnDay 24 .
    2011 :hasEasterOnMonth 4 .
    2012 :hasEasterOnDay 8 .
    2012 :hasEasterOnMonth 4 .
    2013 :hasEasterOnDay 31 .
    2013 :hasEasterOnMonth 3 .
    2014 :hasEasterOnDay 20 .
    2014 :hasEasterOnMonth 4 .
    2015 :hasEasterOnDay 5 .
    2015 :hasEasterOnMonth 4 .
    2016 :hasEasterOnDay 27 .
    2016 :hasEasterOnMonth 3 .
    2017 :hasEasterOnDay 16 .
    2017 :hasEasterOnMonth 4 .
    2018 :hasEasterOnDay 1 .
    2018 :hasEasterOnMonth 4 .
    2019 :hasEasterOnDay 21 .
    2019 :hasEasterOnMonth 4 .
    2020 :hasEasterOnDay 12 .
    2020 :hasEasterOnMonth 4 .
  }].

<#lemma1> a r:Inference; r:gives {2011 :hasEasterOnDay 24 .
  2011 :hasEasterOnMonth 4}; r:evidence (
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma2> a r:Inference; r:gives {2012 :hasEasterOnDay 8 .
  2012 :hasEasterOnMonth 4}; r:evidence (
  <#lemma14>
  <#lemma15>);
  r:rule <#lemma13>.

<#lemma3> a r:Inference; r:gives {2013 :hasEasterOnDay 31 .
  2013 :hasEasterOnMonth 3}; r:evidence (
  <#lemma16>
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma4> a r:Inference; r:gives {2014 :hasEasterOnDay 20 .
  2014 :hasEasterOnMonth 4}; r:evidence (
  <#lemma18>
  <#lemma19>);
  r:rule <#lemma13>.

<#lemma5> a r:Inference; r:gives {2015 :hasEasterOnDay 5 .
  2015 :hasEasterOnMonth 4}; r:evidence (
  <#lemma20>
  <#lemma21>);
  r:rule <#lemma13>.

<#lemma6> a r:Inference; r:gives {2016 :hasEasterOnDay 27 .
  2016 :hasEasterOnMonth 3}; r:evidence (
  <#lemma22>
  <#lemma23>);
  r:rule <#lemma13>.

<#lemma7> a r:Inference; r:gives {2017 :hasEasterOnDay 16 .
  2017 :hasEasterOnMonth 4}; r:evidence (
  <#lemma24>
  <#lemma25>);
  r:rule <#lemma13>.

<#lemma8> a r:Inference; r:gives {2018 :hasEasterOnDay 1 .
  2018 :hasEasterOnMonth 4}; r:evidence (
  <#lemma26>
  <#lemma27>);
  r:rule <#lemma13>.

<#lemma9> a r:Inference; r:gives {2019 :hasEasterOnDay 21 .
  2019 :hasEasterOnMonth 4}; r:evidence (
  <#lemma28>
  <#lemma29>);
  r:rule <#lemma13>.

<#lemma10> a r:Inference; r:gives {2020 :hasEasterOnDay 12 .
  2020 :hasEasterOnMonth 4}; r:evidence (
  <#lemma30>
  <#lemma31>);
  r:rule <#lemma13>.

<#lemma11> a r:Extraction; r:gives {2011 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma12> a r:Inference; r:gives {2011 :hasEasterOnDay 24 .
  2011 :hasEasterOnMonth 4}; r:evidence (
  <#lemma11>
  [ a r:Fact; r:gives {(2011 19) math:remainder 16}]
  [ a r:Fact; r:gives {(2011 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2011 100) math:remainder 11}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 16) math:product 304}]
  [ a r:Fact; r:gives {(304 20) math:sum 324}]
  [ a r:Fact; r:gives {(324 5) math:difference 319}]
  [ a r:Fact; r:gives {(319 6) math:difference 313}]
  [ a r:Fact; r:gives {(313 15) math:sum 328}]
  [ a r:Fact; r:gives {(328 30) math:remainder 28}]
  [ a r:Fact; r:gives {(11 4) math:integerQuotient 2}]
  [ a r:Fact; r:gives {(11 4) math:remainder 3}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 2) math:product 4}]
  [ a r:Fact; r:gives {28 math:negation -28}]
  [ a r:Fact; r:gives {3 math:negation -3}]
  [ a r:Fact; r:gives {(32 0 4 -28 -3) math:sum 5}]
  [ a r:Fact; r:gives {(5 7) math:remainder 5}]
  [ a r:Fact; r:gives {(11 28) math:product 308}]
  [ a r:Fact; r:gives {(22 5) math:product 110}]
  [ a r:Fact; r:gives {(16 308 110) math:sum 434}]
  [ a r:Fact; r:gives {(434 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(28 5 0 114) math:sum 147}]
  [ a r:Fact; r:gives {(147 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(147 31) math:remainder 23}]
  [ a r:Fact; r:gives {(23 1) math:sum 24}]);
  r:rule <#lemma32>.

<#lemma13> a r:Extraction; r:gives {{?x0 a :Year.
  ?x0 :hasEasterOnDay ?x1.
  ?x0 :hasEasterOnMonth ?x2} => {?x0 :hasEasterOnDay ?x1.
  ?x0 :hasEasterOnMonth ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterF.n3>].

<#lemma14> a r:Extraction; r:gives {2012 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma15> a r:Inference; r:gives {2012 :hasEasterOnDay 8 .
  2012 :hasEasterOnMonth 4}; r:evidence (
  <#lemma14>
  [ a r:Fact; r:gives {(2012 19) math:remainder 17}]
  [ a r:Fact; r:gives {(2012 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2012 100) math:remainder 12}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 17) math:product 323}]
  [ a r:Fact; r:gives {(323 20) math:sum 343}]
  [ a r:Fact; r:gives {(343 5) math:difference 338}]
  [ a r:Fact; r:gives {(338 6) math:difference 332}]
  [ a r:Fact; r:gives {(332 15) math:sum 347}]
  [ a r:Fact; r:gives {(347 30) math:remainder 17}]
  [ a r:Fact; r:gives {(12 4) math:integerQuotient 3}]
  [ a r:Fact; r:gives {(12 4) math:remainder 0}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 3) math:product 6}]
  [ a r:Fact; r:gives {17 math:negation -17}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(32 0 6 -17 0) math:sum 21}]
  [ a r:Fact; r:gives {(21 7) math:remainder 0}]
  [ a r:Fact; r:gives {(11 17) math:product 187}]
  [ a r:Fact; r:gives {(22 0) math:product 0}]
  [ a r:Fact; r:gives {(17 187 0) math:sum 204}]
  [ a r:Fact; r:gives {(204 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(17 0 0 114) math:sum 131}]
  [ a r:Fact; r:gives {(131 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(131 31) math:remainder 7}]
  [ a r:Fact; r:gives {(7 1) math:sum 8}]);
  r:rule <#lemma32>.

<#lemma16> a r:Extraction; r:gives {2013 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma17> a r:Inference; r:gives {2013 :hasEasterOnDay 31 .
  2013 :hasEasterOnMonth 3}; r:evidence (
  <#lemma16>
  [ a r:Fact; r:gives {(2013 19) math:remainder 18}]
  [ a r:Fact; r:gives {(2013 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2013 100) math:remainder 13}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 18) math:product 342}]
  [ a r:Fact; r:gives {(342 20) math:sum 362}]
  [ a r:Fact; r:gives {(362 5) math:difference 357}]
  [ a r:Fact; r:gives {(357 6) math:difference 351}]
  [ a r:Fact; r:gives {(351 15) math:sum 366}]
  [ a r:Fact; r:gives {(366 30) math:remainder 6}]
  [ a r:Fact; r:gives {(13 4) math:integerQuotient 3}]
  [ a r:Fact; r:gives {(13 4) math:remainder 1}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 3) math:product 6}]
  [ a r:Fact; r:gives {6 math:negation -6}]
  [ a r:Fact; r:gives {1 math:negation -1}]
  [ a r:Fact; r:gives {(32 0 6 -6 -1) math:sum 31}]
  [ a r:Fact; r:gives {(31 7) math:remainder 3}]
  [ a r:Fact; r:gives {(11 6) math:product 66}]
  [ a r:Fact; r:gives {(22 3) math:product 66}]
  [ a r:Fact; r:gives {(18 66 66) math:sum 150}]
  [ a r:Fact; r:gives {(150 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(6 3 0 114) math:sum 123}]
  [ a r:Fact; r:gives {(123 31) math:integerQuotient 3}]
  [ a r:Fact; r:gives {(123 31) math:remainder 30}]
  [ a r:Fact; r:gives {(30 1) math:sum 31}]);
  r:rule <#lemma32>.

<#lemma18> a r:Extraction; r:gives {2014 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma19> a r:Inference; r:gives {2014 :hasEasterOnDay 20 .
  2014 :hasEasterOnMonth 4}; r:evidence (
  <#lemma18>
  [ a r:Fact; r:gives {(2014 19) math:remainder 0}]
  [ a r:Fact; r:gives {(2014 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2014 100) math:remainder 14}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 0) math:product 0}]
  [ a r:Fact; r:gives {(0 20) math:sum 20}]
  [ a r:Fact; r:gives {(20 5) math:difference 15}]
  [ a r:Fact; r:gives {(15 6) math:difference 9}]
  [ a r:Fact; r:gives {(9 15) math:sum 24}]
  [ a r:Fact; r:gives {(24 30) math:remainder 24}]
  [ a r:Fact; r:gives {(14 4) math:integerQuotient 3}]
  [ a r:Fact; r:gives {(14 4) math:remainder 2}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 3) math:product 6}]
  [ a r:Fact; r:gives {24 math:negation -24}]
  [ a r:Fact; r:gives {2 math:negation -2}]
  [ a r:Fact; r:gives {(32 0 6 -24 -2) math:sum 12}]
  [ a r:Fact; r:gives {(12 7) math:remainder 5}]
  [ a r:Fact; r:gives {(11 24) math:product 264}]
  [ a r:Fact; r:gives {(22 5) math:product 110}]
  [ a r:Fact; r:gives {(0 264 110) math:sum 374}]
  [ a r:Fact; r:gives {(374 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(24 5 0 114) math:sum 143}]
  [ a r:Fact; r:gives {(143 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(143 31) math:remainder 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]);
  r:rule <#lemma32>.

<#lemma20> a r:Extraction; r:gives {2015 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma21> a r:Inference; r:gives {2015 :hasEasterOnDay 5 .
  2015 :hasEasterOnMonth 4}; r:evidence (
  <#lemma20>
  [ a r:Fact; r:gives {(2015 19) math:remainder 1}]
  [ a r:Fact; r:gives {(2015 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2015 100) math:remainder 15}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 1) math:product 19}]
  [ a r:Fact; r:gives {(19 20) math:sum 39}]
  [ a r:Fact; r:gives {(39 5) math:difference 34}]
  [ a r:Fact; r:gives {(34 6) math:difference 28}]
  [ a r:Fact; r:gives {(28 15) math:sum 43}]
  [ a r:Fact; r:gives {(43 30) math:remainder 13}]
  [ a r:Fact; r:gives {(15 4) math:integerQuotient 3}]
  [ a r:Fact; r:gives {(15 4) math:remainder 3}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 3) math:product 6}]
  [ a r:Fact; r:gives {13 math:negation -13}]
  [ a r:Fact; r:gives {3 math:negation -3}]
  [ a r:Fact; r:gives {(32 0 6 -13 -3) math:sum 22}]
  [ a r:Fact; r:gives {(22 7) math:remainder 1}]
  [ a r:Fact; r:gives {(11 13) math:product 143}]
  [ a r:Fact; r:gives {(22 1) math:product 22}]
  [ a r:Fact; r:gives {(1 143 22) math:sum 166}]
  [ a r:Fact; r:gives {(166 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(13 1 0 114) math:sum 128}]
  [ a r:Fact; r:gives {(128 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(128 31) math:remainder 4}]
  [ a r:Fact; r:gives {(4 1) math:sum 5}]);
  r:rule <#lemma32>.

<#lemma22> a r:Extraction; r:gives {2016 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma23> a r:Inference; r:gives {2016 :hasEasterOnDay 27 .
  2016 :hasEasterOnMonth 3}; r:evidence (
  <#lemma22>
  [ a r:Fact; r:gives {(2016 19) math:remainder 2}]
  [ a r:Fact; r:gives {(2016 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2016 100) math:remainder 16}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 2) math:product 38}]
  [ a r:Fact; r:gives {(38 20) math:sum 58}]
  [ a r:Fact; r:gives {(58 5) math:difference 53}]
  [ a r:Fact; r:gives {(53 6) math:difference 47}]
  [ a r:Fact; r:gives {(47 15) math:sum 62}]
  [ a r:Fact; r:gives {(62 30) math:remainder 2}]
  [ a r:Fact; r:gives {(16 4) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(16 4) math:remainder 0}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 4) math:product 8}]
  [ a r:Fact; r:gives {2 math:negation -2}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(32 0 8 -2 0) math:sum 38}]
  [ a r:Fact; r:gives {(38 7) math:remainder 3}]
  [ a r:Fact; r:gives {(11 2) math:product 22}]
  [ a r:Fact; r:gives {(22 3) math:product 66}]
  [ a r:Fact; r:gives {(2 22 66) math:sum 90}]
  [ a r:Fact; r:gives {(90 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(2 3 0 114) math:sum 119}]
  [ a r:Fact; r:gives {(119 31) math:integerQuotient 3}]
  [ a r:Fact; r:gives {(119 31) math:remainder 26}]
  [ a r:Fact; r:gives {(26 1) math:sum 27}]);
  r:rule <#lemma32>.

<#lemma24> a r:Extraction; r:gives {2017 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma25> a r:Inference; r:gives {2017 :hasEasterOnDay 16 .
  2017 :hasEasterOnMonth 4}; r:evidence (
  <#lemma24>
  [ a r:Fact; r:gives {(2017 19) math:remainder 3}]
  [ a r:Fact; r:gives {(2017 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2017 100) math:remainder 17}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 3) math:product 57}]
  [ a r:Fact; r:gives {(57 20) math:sum 77}]
  [ a r:Fact; r:gives {(77 5) math:difference 72}]
  [ a r:Fact; r:gives {(72 6) math:difference 66}]
  [ a r:Fact; r:gives {(66 15) math:sum 81}]
  [ a r:Fact; r:gives {(81 30) math:remainder 21}]
  [ a r:Fact; r:gives {(17 4) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(17 4) math:remainder 1}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 4) math:product 8}]
  [ a r:Fact; r:gives {21 math:negation -21}]
  [ a r:Fact; r:gives {1 math:negation -1}]
  [ a r:Fact; r:gives {(32 0 8 -21 -1) math:sum 18}]
  [ a r:Fact; r:gives {(18 7) math:remainder 4}]
  [ a r:Fact; r:gives {(11 21) math:product 231}]
  [ a r:Fact; r:gives {(22 4) math:product 88}]
  [ a r:Fact; r:gives {(3 231 88) math:sum 322}]
  [ a r:Fact; r:gives {(322 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(21 4 0 114) math:sum 139}]
  [ a r:Fact; r:gives {(139 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(139 31) math:remainder 15}]
  [ a r:Fact; r:gives {(15 1) math:sum 16}]);
  r:rule <#lemma32>.

<#lemma26> a r:Extraction; r:gives {2018 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma27> a r:Inference; r:gives {2018 :hasEasterOnDay 1 .
  2018 :hasEasterOnMonth 4}; r:evidence (
  <#lemma26>
  [ a r:Fact; r:gives {(2018 19) math:remainder 4}]
  [ a r:Fact; r:gives {(2018 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2018 100) math:remainder 18}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 4) math:product 76}]
  [ a r:Fact; r:gives {(76 20) math:sum 96}]
  [ a r:Fact; r:gives {(96 5) math:difference 91}]
  [ a r:Fact; r:gives {(91 6) math:difference 85}]
  [ a r:Fact; r:gives {(85 15) math:sum 100}]
  [ a r:Fact; r:gives {(100 30) math:remainder 10}]
  [ a r:Fact; r:gives {(18 4) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(18 4) math:remainder 2}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 4) math:product 8}]
  [ a r:Fact; r:gives {10 math:negation -10}]
  [ a r:Fact; r:gives {2 math:negation -2}]
  [ a r:Fact; r:gives {(32 0 8 -10 -2) math:sum 28}]
  [ a r:Fact; r:gives {(28 7) math:remainder 0}]
  [ a r:Fact; r:gives {(11 10) math:product 110}]
  [ a r:Fact; r:gives {(22 0) math:product 0}]
  [ a r:Fact; r:gives {(4 110 0) math:sum 114}]
  [ a r:Fact; r:gives {(114 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(10 0 0 114) math:sum 124}]
  [ a r:Fact; r:gives {(124 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(124 31) math:remainder 0}]
  [ a r:Fact; r:gives {(0 1) math:sum 1}]);
  r:rule <#lemma32>.

<#lemma28> a r:Extraction; r:gives {2019 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma29> a r:Inference; r:gives {2019 :hasEasterOnDay 21 .
  2019 :hasEasterOnMonth 4}; r:evidence (
  <#lemma28>
  [ a r:Fact; r:gives {(2019 19) math:remainder 5}]
  [ a r:Fact; r:gives {(2019 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2019 100) math:remainder 19}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 5) math:product 95}]
  [ a r:Fact; r:gives {(95 20) math:sum 115}]
  [ a r:Fact; r:gives {(115 5) math:difference 110}]
  [ a r:Fact; r:gives {(110 6) math:difference 104}]
  [ a r:Fact; r:gives {(104 15) math:sum 119}]
  [ a r:Fact; r:gives {(119 30) math:remainder 29}]
  [ a r:Fact; r:gives {(19 4) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(19 4) math:remainder 3}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 4) math:product 8}]
  [ a r:Fact; r:gives {29 math:negation -29}]
  [ a r:Fact; r:gives {3 math:negation -3}]
  [ a r:Fact; r:gives {(32 0 8 -29 -3) math:sum 8}]
  [ a r:Fact; r:gives {(8 7) math:remainder 1}]
  [ a r:Fact; r:gives {(11 29) math:product 319}]
  [ a r:Fact; r:gives {(22 1) math:product 22}]
  [ a r:Fact; r:gives {(5 319 22) math:sum 346}]
  [ a r:Fact; r:gives {(346 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(29 1 0 114) math:sum 144}]
  [ a r:Fact; r:gives {(144 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(144 31) math:remainder 20}]
  [ a r:Fact; r:gives {(20 1) math:sum 21}]);
  r:rule <#lemma32>.

<#lemma30> a r:Extraction; r:gives {2020 a :Year};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

<#lemma31> a r:Inference; r:gives {2020 :hasEasterOnDay 12 .
  2020 :hasEasterOnMonth 4}; r:evidence (
  <#lemma30>
  [ a r:Fact; r:gives {(2020 19) math:remainder 6}]
  [ a r:Fact; r:gives {(2020 100) math:integerQuotient 20}]
  [ a r:Fact; r:gives {(2020 100) math:remainder 20}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(20 8) math:sum 28}]
  [ a r:Fact; r:gives {(28 25) math:integerQuotient 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(19 1) math:sum 20}]
  [ a r:Fact; r:gives {(20 3) math:integerQuotient 6}]
  [ a r:Fact; r:gives {(19 6) math:product 114}]
  [ a r:Fact; r:gives {(114 20) math:sum 134}]
  [ a r:Fact; r:gives {(134 5) math:difference 129}]
  [ a r:Fact; r:gives {(129 6) math:difference 123}]
  [ a r:Fact; r:gives {(123 15) math:sum 138}]
  [ a r:Fact; r:gives {(138 30) math:remainder 18}]
  [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
  [ a r:Fact; r:gives {(20 4) math:remainder 0}]
  [ a r:Fact; r:gives {(2 0) math:product 0}]
  [ a r:Fact; r:gives {(2 5) math:product 10}]
  [ a r:Fact; r:gives {18 math:negation -18}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(32 0 10 -18 0) math:sum 24}]
  [ a r:Fact; r:gives {(24 7) math:remainder 3}]
  [ a r:Fact; r:gives {(11 18) math:product 198}]
  [ a r:Fact; r:gives {(22 3) math:product 66}]
  [ a r:Fact; r:gives {(6 198 66) math:sum 270}]
  [ a r:Fact; r:gives {(270 451) math:integerQuotient 0}]
  [ a r:Fact; r:gives {(7 0) math:product 0}]
  [ a r:Fact; r:gives {0 math:negation 0}]
  [ a r:Fact; r:gives {(18 3 0 114) math:sum 135}]
  [ a r:Fact; r:gives {(135 31) math:integerQuotient 4}]
  [ a r:Fact; r:gives {(135 31) math:remainder 11}]
  [ a r:Fact; r:gives {(11 1) math:sum 12}]);
  r:rule <#lemma32>.

<#lemma32> a r:Extraction; r:gives {{?x0 a :Year.
  (?x0 19) math:remainder ?x1.
  (?x0 100) math:integerQuotient ?x2.
  (?x0 100) math:remainder ?x3.
  (?x2 4) math:integerQuotient ?x4.
  (?x2 4) math:remainder ?x5.
  (?x2 8) math:sum ?x6.
  (?x6 25) math:integerQuotient ?x7.
  (?x2 ?x7) math:difference ?x8.
  (?x8 1) math:sum ?x9.
  (?x9 3) math:integerQuotient ?x10.
  (19 ?x1) math:product ?x11.
  (?x11 ?x2) math:sum ?x12.
  (?x12 ?x4) math:difference ?x13.
  (?x13 ?x10) math:difference ?x14.
  (?x14 15) math:sum ?x15.
  (?x15 30) math:remainder ?x16.
  (?x3 4) math:integerQuotient ?x17.
  (?x3 4) math:remainder ?x18.
  (2 ?x5) math:product ?x19.
  (2 ?x17) math:product ?x20.
  ?x16 math:negation ?x21.
  ?x18 math:negation ?x22.
  (32 ?x19 ?x20 ?x21 ?x22) math:sum ?x23.
  (?x23 7) math:remainder ?x24.
  (11 ?x16) math:product ?x25.
  (22 ?x24) math:product ?x26.
  (?x1 ?x25 ?x26) math:sum ?x27.
  (?x27 451) math:integerQuotient ?x28.
  (7 ?x28) math:product ?x29.
  ?x29 math:negation ?x30.
  (?x16 ?x24 ?x30 114) math:sum ?x31.
  (?x31 31) math:integerQuotient ?x32.
  (?x31 31) math:remainder ?x33.
  (?x33 1) math:sum ?x34} => {?x0 :hasEasterOnDay ?x34.
  ?x0 :hasEasterOnMonth ?x32}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>].

#ENDS 1.177 [sec] TC=20 TP=40 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2004/04test/danP.n3 --query http://eulersharp.sourceforge.net/2004/04test/danC.n3

PREFIX : <http://eulersharp.sourceforge.net/2004/04test/danP#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX q: <http://www.w3.org/2004/ql#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:gives {
    q:result q:is ("Cambridge" 42.3 -71.1).
    q:result q:is ("Boston" 42.19 -71.05).
  }].

<#lemma1> a r:Inference; r:gives {q:result q:is ("Cambridge" 42.3 -71.1)}; r:evidence (
  <#lemma3>
  <#lemma4>
  <#lemma5>
  [ a r:Fact; r:gives {(42.3 42.3) math:difference 0.0}]
  [ a r:Fact; r:gives {(0.0 2) math:exponentiation 0.0}]
  [ a r:Fact; r:gives {(-71.1 -71.1) math:difference 0.0}]
  [ a r:Fact; r:gives {(0.0 2) math:exponentiation 0.0}]
  [ a r:Fact; r:gives {(0.0 0.0) math:sum 0.0}]
  [ a r:Fact; r:gives {(0.0 0.5) math:exponentiation 0.0}]
  [ a r:Fact; r:gives {0.0 math:lessThan 0.5}]);
  r:rule <#lemma6>.

<#lemma2> a r:Inference; r:gives {q:result q:is ("Boston" 42.19 -71.05)}; r:evidence (
  <#lemma7>
  <#lemma8>
  <#lemma9>
  [ a r:Fact; r:gives {(42.19 42.3) math:difference -0.10999999999999943}]
  [ a r:Fact; r:gives {(-0.10999999999999943 2) math:exponentiation 0.012099999999999875}]
  [ a r:Fact; r:gives {(-71.05 -71.1) math:difference 0.04999999999999716}]
  [ a r:Fact; r:gives {(0.04999999999999716 2) math:exponentiation 0.002499999999999716}]
  [ a r:Fact; r:gives {(0.012099999999999875 0.002499999999999716) math:sum 0.01459999999999959}]
  [ a r:Fact; r:gives {(0.01459999999999959 0.5) math:exponentiation 0.12083045973594403}]
  [ a r:Fact; r:gives {0.12083045973594403 math:lessThan 0.5}]);
  r:rule <#lemma6>.

<#lemma3> a r:Extraction; r:gives {_:e1 :latitude 42.3};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>].

<#lemma4> a r:Extraction; r:gives {_:e1 :longitude -71.1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>].

<#lemma5> a r:Extraction; r:gives {_:e1 :cityName "Cambridge"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>].

<#lemma6> a r:Extraction; r:gives {{?x0 :latitude ?x1.
  ?x0 :longitude ?x2.
  ?x0 :cityName ?x3.
  (?x1 42.3) math:difference ?x4.
  (?x4 2) math:exponentiation ?x5.
  (?x2 -71.1) math:difference ?x6.
  (?x6 2) math:exponentiation ?x7.
  (?x5 ?x7) math:sum ?x8.
  (?x8 0.5) math:exponentiation ?x9.
  ?x9 math:lessThan 0.5} => {q:result q:is (?x3 ?x1 ?x2)}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danC.n3>].

<#lemma7> a r:Extraction; r:gives {_:e3 :latitude 42.19};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>].

<#lemma8> a r:Extraction; r:gives {_:e3 :longitude -71.05};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>].

<#lemma9> a r:Extraction; r:gives {_:e3 :cityName "Boston"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>].

#ENDS 0.682 [sec] TC=2 TP=4 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3 http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3 --query http://eulersharp.sourceforge.net/2003/03swap/lldmF.n3

PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX : <http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :meas47 a :LLDAlarm.
  }].

<#lemma1> a r:Inference; r:gives {:meas47 a :LLDAlarm}; r:evidence (
  <#lemma2>
  <#lemma3>);
  r:rule <#lemma4>.

<#lemma2> a r:Extraction; r:gives {:meas47 a :Measurement};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma3> a r:Inference; r:gives {:meas47 a :LLDAlarm}; r:evidence (
  <#lemma2>
  <#lemma5>
  [ a r:Fact; r:gives {-1.9082339805374957 math:lessThan -1.25}]);
  r:rule <#lemma6>.

<#lemma4> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 a :LLDAlarm} => {?x0 a :LLDAlarm}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmF.n3>].

<#lemma5> a r:Inference; r:gives {:meas47 :dCm -1.9082339805374957}; r:evidence (
  <#lemma2>
  <#lemma7>
  <#lemma8>
  [ a r:Fact; r:gives {(21.548900464617255 23.45713444515475) math:difference -1.9082339805374957}]);
  r:rule <#lemma9>.

<#lemma6> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dCm ?x1.
  ?x1 math:lessThan -1.25} => {?x0 a :LLDAlarm}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma7> a r:Inference; r:gives {:meas47 :d53Cm 21.548900464617255}; r:evidence (
  <#lemma2>
  <#lemma10>
  [ a r:Fact; r:gives {(464.35511123398175 0.5) math:exponentiation 21.548900464617255}]);
  r:rule <#lemma11>.

<#lemma8> a r:Inference; r:gives {:meas47 :d64Cm 23.45713444515475}; r:evidence (
  <#lemma2>
  <#lemma12>
  [ a r:Fact; r:gives {(550.2371563780655 0.5) math:exponentiation 23.45713444515475}]);
  r:rule <#lemma13>.

<#lemma9> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :d53Cm ?x1.
  ?x0 :d64Cm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dCm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma10> a r:Inference; r:gives {:meas47 :ssd53Cm2 464.35511123398175}; r:evidence (
  <#lemma2>
  <#lemma14>
  <#lemma15>
  [ a r:Fact; r:gives {(1.8274562043619251 462.52765502961984) math:sum 464.35511123398175}]);
  r:rule <#lemma16>.

<#lemma11> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :ssd53Cm2 ?x1.
  (?x1 0.5) math:exponentiation ?x2} => {?x0 :d53Cm ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma12> a r:Inference; r:gives {:meas47 :ssd64Cm2 550.2371563780655}; r:evidence (
  <#lemma2>
  <#lemma17>
  <#lemma18>
  [ a r:Fact; r:gives {(2.1654425265642967 548.0717138515012) math:sum 550.2371563780655}]);
  r:rule <#lemma19>.

<#lemma13> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :ssd64Cm2 ?x1.
  (?x1 0.5) math:exponentiation ?x2} => {?x0 :d64Cm ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma14> a r:Inference; r:gives {:meas47 :sdx53Cm2 1.8274562043619251}; r:evidence (
  <#lemma2>
  <#lemma20>
  [ a r:Fact; r:gives {(-1.351834384960645 2) math:exponentiation 1.8274562043619251}]);
  r:rule <#lemma21>.

<#lemma15> a r:Inference; r:gives {:meas47 :sdy53Cm2 462.52765502961984}; r:evidence (
  <#lemma2>
  <#lemma22>
  [ a r:Fact; r:gives {(-21.506456124373905 2) math:exponentiation 462.52765502961984}]);
  r:rule <#lemma23>.

<#lemma16> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :sdx53Cm2 ?x1.
  ?x0 :sdy53Cm2 ?x2.
  (?x1 ?x2) math:sum ?x3} => {?x0 :ssd53Cm2 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma17> a r:Inference; r:gives {:meas47 :sdx64Cm2 2.1654425265642967}; r:evidence (
  <#lemma2>
  <#lemma24>
  [ a r:Fact; r:gives {(-1.4715442659207696 2) math:exponentiation 2.1654425265642967}]);
  r:rule <#lemma25>.

<#lemma18> a r:Inference; r:gives {:meas47 :sdy64Cm2 548.0717138515012}; r:evidence (
  <#lemma2>
  <#lemma26>
  [ a r:Fact; r:gives {(-23.41093150328498 2) math:exponentiation 548.0717138515012}]);
  r:rule <#lemma27>.

<#lemma19> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :sdx64Cm2 ?x1.
  ?x0 :sdy64Cm2 ?x2.
  (?x1 ?x2) math:sum ?x3} => {?x0 :ssd64Cm2 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma20> a r:Inference; r:gives {:meas47 :dx53Cm -1.351834384960645}; r:evidence (
  <#lemma2>
  <#lemma28>
  <#lemma29>
  [ a r:Fact; r:gives {(2.248165615039355 3.6) math:difference -1.351834384960645}]);
  r:rule <#lemma30>.

<#lemma21> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dx53Cm ?x1.
  (?x1 2) math:exponentiation ?x2} => {?x0 :sdx53Cm2 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma22> a r:Inference; r:gives {:meas47 :dy53Cm -21.506456124373905}; r:evidence (
  <#lemma2>
  <#lemma31>
  <#lemma32>
  [ a r:Fact; r:gives {(8.293543875626098 29.8) math:difference -21.506456124373905}]);
  r:rule <#lemma33>.

<#lemma23> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dy53Cm ?x1.
  (?x1 2) math:exponentiation ?x2} => {?x0 :sdy53Cm2 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma24> a r:Inference; r:gives {:meas47 :dx64Cm -1.4715442659207696}; r:evidence (
  <#lemma2>
  <#lemma34>
  <#lemma35>
  [ a r:Fact; r:gives {(53.22845573407923 54.7) math:difference -1.4715442659207696}]);
  r:rule <#lemma36>.

<#lemma25> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dx64Cm ?x1.
  (?x1 2) math:exponentiation ?x2} => {?x0 :sdx64Cm2 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma26> a r:Inference; r:gives {:meas47 :dy64Cm -23.41093150328498}; r:evidence (
  <#lemma2>
  <#lemma37>
  <#lemma38>
  [ a r:Fact; r:gives {(5.0890684967150195 28.5) math:difference -23.41093150328498}]);
  r:rule <#lemma39>.

<#lemma27> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dy64Cm ?x1.
  (?x1 2) math:exponentiation ?x2} => {?x0 :sdy64Cm2 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma28> a r:Inference; r:gives {:meas47 :p5xCm 2.248165615039355}; r:evidence (
  <#lemma2>
  <#lemma40>
  <#lemma41>
  [ a r:Fact; r:gives {(-35.90758441558442 -15.97194805194805) math:quotient 2.248165615039355}]);
  r:rule <#lemma42>.

<#lemma29> a r:Extraction; r:gives {:meas47 :p3xCm 3.6};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma30> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p5xCm ?x1.
  ?x0 :p3xCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dx53Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma31> a r:Inference; r:gives {:meas47 :p5yCm 8.293543875626098}; r:evidence (
  <#lemma2>
  <#lemma43>
  <#lemma44>
  [ a r:Fact; r:gives {(0.4935438756260977 7.8) math:sum 8.293543875626098}]);
  r:rule <#lemma45>.

<#lemma32> a r:Extraction; r:gives {:meas47 :p3yCm 29.8};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma33> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p5yCm ?x1.
  ?x0 :p3yCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dy53Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma34> a r:Inference; r:gives {:meas47 :p6xCm 53.22845573407923}; r:evidence (
  <#lemma2>
  <#lemma46>
  <#lemma41>
  [ a r:Fact; r:gives {(-850.1621298701299 -15.97194805194805) math:quotient 53.22845573407923}]);
  r:rule <#lemma47>.

<#lemma35> a r:Extraction; r:gives {:meas47 :p4xCm 54.7};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma36> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p6xCm ?x1.
  ?x0 :p4xCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dx64Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma37> a r:Inference; r:gives {:meas47 :p6yCm 5.0890684967150195}; r:evidence (
  <#lemma2>
  <#lemma48>
  <#lemma49>
  [ a r:Fact; r:gives {(-0.5109315032849803 5.6) math:sum 5.0890684967150195}]);
  r:rule <#lemma50>.

<#lemma38> a r:Extraction; r:gives {:meas47 :p4yCm 28.5};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma39> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p6yCm ?x1.
  ?x0 :p4yCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dy64Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma40> a r:Inference; r:gives {:meas47 :ddy13Cm -35.90758441558442}; r:evidence (
  <#lemma2>
  <#lemma51>
  <#lemma52>
  [ a r:Fact; r:gives {(-57.90758441558442 -22.0) math:difference -35.90758441558442}]);
  r:rule <#lemma53>.

<#lemma41> a r:Inference; r:gives {:meas47 :ddL13 -15.97194805194805}; r:evidence (
  <#lemma2>
  <#lemma54>
  <#lemma55>
  [ a r:Fact; r:gives {(-0.06285714285714286 15.909090909090908) math:difference -15.97194805194805}]);
  r:rule <#lemma56>.

<#lemma42> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :ddy13Cm ?x1.
  ?x0 :ddL13 ?x2.
  (?x1 ?x2) math:quotient ?x3} => {?x0 :p5xCm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma43> a r:Inference; r:gives {:meas47 :pL1dx51Cm 0.4935438756260977}; r:evidence (
  <#lemma2>
  <#lemma54>
  <#lemma57>
  [ a r:Fact; r:gives {(-0.06285714285714286 -7.851834384960645) math:product 0.4935438756260977}]);
  r:rule <#lemma58>.

<#lemma44> a r:Extraction; r:gives {:meas47 :p1yCm 7.8};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma45> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :pL1dx51Cm ?x1.
  ?x0 :p1yCm ?x2.
  (?x1 ?x2) math:sum ?x3} => {?x0 :p5yCm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma46> a r:Inference; r:gives {:meas47 :ddy24Cm -850.1621298701299}; r:evidence (
  <#lemma2>
  <#lemma59>
  <#lemma60>
  [ a r:Fact; r:gives {(-873.0621298701299 -22.9) math:difference -850.1621298701299}]);
  r:rule <#lemma61>.

<#lemma47> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :ddy24Cm ?x1.
  ?x0 :ddL13 ?x2.
  (?x1 ?x2) math:quotient ?x3} => {?x0 :p6xCm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma48> a r:Inference; r:gives {:meas47 :pL1dx62Cm -0.5109315032849803}; r:evidence (
  <#lemma2>
  <#lemma54>
  <#lemma62>
  [ a r:Fact; r:gives {(-0.06285714285714286 8.128455734079232) math:product -0.5109315032849803}]);
  r:rule <#lemma63>.

<#lemma49> a r:Extraction; r:gives {:meas47 :p2yCm 5.6};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma50> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :pL1dx62Cm ?x1.
  ?x0 :p2yCm ?x2.
  (?x1 ?x2) math:sum ?x3} => {?x0 :p6yCm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma51> a r:Inference; r:gives {:meas47 :dd13Cm -57.90758441558442}; r:evidence (
  <#lemma2>
  <#lemma64>
  <#lemma65>
  [ a r:Fact; r:gives {(-0.6348571428571429 57.27272727272727) math:difference -57.90758441558442}]);
  r:rule <#lemma66>.

<#lemma52> a r:Inference; r:gives {:meas47 :dy13Cm -22.0}; r:evidence (
  <#lemma2>
  <#lemma44>
  <#lemma32>
  [ a r:Fact; r:gives {(7.8 29.8) math:difference -22.0}]);
  r:rule <#lemma67>.

<#lemma53> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dd13Cm ?x1.
  ?x0 :dy13Cm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :ddy13Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma54> a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
  <#lemma2>
  <#lemma68>
  <#lemma69>
  [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
  r:rule <#lemma70>.

<#lemma55> a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
  <#lemma2>
  <#lemma71>
  [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
  r:rule <#lemma72>.

<#lemma56> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL1 ?x1.
  ?x0 :cL3 ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :ddL13 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma57> a r:Inference; r:gives {:meas47 :dx51Cm -7.851834384960645}; r:evidence (
  <#lemma2>
  <#lemma28>
  <#lemma73>
  [ a r:Fact; r:gives {(2.248165615039355 10.1) math:difference -7.851834384960645}]);
  r:rule <#lemma74>.

<#lemma58> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL1 ?x1.
  ?x0 :dx51Cm ?x2.
  (?x1 ?x2) math:product ?x3} => {?x0 :pL1dx51Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma59> a r:Inference; r:gives {:meas47 :dd24Cm -873.0621298701299}; r:evidence (
  <#lemma2>
  <#lemma75>
  <#lemma76>
  [ a r:Fact; r:gives {(-2.834857142857143 870.2272727272727) math:difference -873.0621298701299}]);
  r:rule <#lemma77>.

<#lemma60> a r:Inference; r:gives {:meas47 :dy24Cm -22.9}; r:evidence (
  <#lemma2>
  <#lemma49>
  <#lemma38>
  [ a r:Fact; r:gives {(5.6 28.5) math:difference -22.9}]);
  r:rule <#lemma78>.

<#lemma61> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dd24Cm ?x1.
  ?x0 :dy24Cm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :ddy24Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma62> a r:Inference; r:gives {:meas47 :dx62Cm 8.128455734079232}; r:evidence (
  <#lemma2>
  <#lemma34>
  <#lemma79>
  [ a r:Fact; r:gives {(53.22845573407923 45.1) math:difference 8.128455734079232}]);
  r:rule <#lemma80>.

<#lemma63> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL1 ?x1.
  ?x0 :dx62Cm ?x2.
  (?x1 ?x2) math:product ?x3} => {?x0 :pL1dx62Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma64> a r:Inference; r:gives {:meas47 :pL1x1Cm -0.6348571428571429}; r:evidence (
  <#lemma2>
  <#lemma54>
  <#lemma73>
  [ a r:Fact; r:gives {(-0.06285714285714286 10.1) math:product -0.6348571428571429}]);
  r:rule <#lemma81>.

<#lemma65> a r:Inference; r:gives {:meas47 :pL3x3Cm 57.27272727272727}; r:evidence (
  <#lemma2>
  <#lemma55>
  <#lemma29>
  [ a r:Fact; r:gives {(15.909090909090908 3.6) math:product 57.27272727272727}]);
  r:rule <#lemma82>.

<#lemma66> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :pL1x1Cm ?x1.
  ?x0 :pL3x3Cm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dd13Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma67> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p1yCm ?x1.
  ?x0 :p3yCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dy13Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma68> a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
  <#lemma2>
  <#lemma44>
  <#lemma49>
  [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
  r:rule <#lemma83>.

<#lemma69> a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
  <#lemma2>
  <#lemma73>
  <#lemma79>
  [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
  r:rule <#lemma84>.

<#lemma70> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dy12Cm ?x1.
  ?x0 :dx12Cm ?x2.
  (?x1 ?x2) math:quotient ?x3} => {?x0 :cL1 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma71> a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
  <#lemma2>
  <#lemma54>
  [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
  r:rule <#lemma85>.

<#lemma72> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :dL3m ?x1.
  (0 ?x1) math:difference ?x2} => {?x0 :cL3 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma73> a r:Extraction; r:gives {:meas47 :p1xCm 10.1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma74> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p5xCm ?x1.
  ?x0 :p1xCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dx51Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma75> a r:Inference; r:gives {:meas47 :pL1x2Cm -2.834857142857143}; r:evidence (
  <#lemma2>
  <#lemma54>
  <#lemma79>
  [ a r:Fact; r:gives {(-0.06285714285714286 45.1) math:product -2.834857142857143}]);
  r:rule <#lemma86>.

<#lemma76> a r:Inference; r:gives {:meas47 :pL3x4Cm 870.2272727272727}; r:evidence (
  <#lemma2>
  <#lemma55>
  <#lemma35>
  [ a r:Fact; r:gives {(15.909090909090908 54.7) math:product 870.2272727272727}]);
  r:rule <#lemma87>.

<#lemma77> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :pL1x2Cm ?x1.
  ?x0 :pL3x4Cm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dd24Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma78> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p2yCm ?x1.
  ?x0 :p4yCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dy24Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma79> a r:Extraction; r:gives {:meas47 :p2xCm 45.1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>].

<#lemma80> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p6xCm ?x1.
  ?x0 :p2xCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dx62Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma81> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL1 ?x1.
  ?x0 :p1xCm ?x2.
  (?x1 ?x2) math:product ?x3} => {?x0 :pL1x1Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma82> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL3 ?x1.
  ?x0 :p3xCm ?x2.
  (?x1 ?x2) math:product ?x3} => {?x0 :pL3x3Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma83> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p1yCm ?x1.
  ?x0 :p2yCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dy12Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma84> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :p1xCm ?x1.
  ?x0 :p2xCm ?x2.
  (?x1 ?x2) math:difference ?x3} => {?x0 :dx12Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma85> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL1 ?x1.
  (1 ?x1) math:quotient ?x2} => {?x0 :dL3m ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma86> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL1 ?x1.
  ?x0 :p2xCm ?x2.
  (?x1 ?x2) math:product ?x3} => {?x0 :pL1x2Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

<#lemma87> a r:Extraction; r:gives {{?x0 a :Measurement.
  ?x0 :cL3 ?x1.
  ?x0 :p4xCm ?x2.
  (?x1 ?x2) math:product ?x3} => {?x0 :pL3x4Cm ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>].

#ENDS 1.182 [sec] TC=39 TP=124 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3 http://eulersharp.sourceforge.net/2003/03swap/example001P.n3 http://eulersharp.sourceforge.net/2003/03swap/example002P.n3 http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3 --query http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3

PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX fl: <http://eulersharp.sourceforge.net/2003/03swap/fl-rules#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>
PREFIX fcm: <http://eulersharp.sourceforge.net/2006/02swap/fcm#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX : <http://www.agfa.com/w3c/euler/case001#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:component <#lemma11>;
  r:component <#lemma12>;
  r:gives {
    (:Ann :ChildAge) fl:pi 0.4167000000000005 .
    (:Ann :AdultAge) fl:pi 0.5832999999999995 .
    (:Ann owl:Thing) fl:pi 1.0 .
    (:Ann owl:Nothing) fl:pi 0.0 .
    (:Ann :NormalIntraocularPressure) fl:pi 0.42055693693538665 .
    (:Ann :IncreasedIntraocularPressure) fl:pi 0.5762688313443307 .
    (:Ann :NonNormalIntraocularPressure) fl:pi 0.5794430630646134 .
    (:Ann :NonIncreasedIntraocularPressure) fl:pi 0.4237311686556693 .
    (:Ann _:sk0) fl:pi 0.42055693693538665 .
    (:Ann _:sk1) fl:pi 0.5762688313443307 .
    (:Ann :ChildAgeAndNormalIntraocularPressure) fl:pi 0.0 .
    (:Ann :AdultAgeOrIncreasedIntraocularPressure) fl:pi 1.0 .
  }].

<#lemma1> a r:Inference; r:gives {(:Ann :ChildAge) fl:pi 0.4167000000000005}; r:evidence (
  <#lemma13>);
  r:rule <#lemma14>.

<#lemma2> a r:Inference; r:gives {(:Ann :AdultAge) fl:pi 0.5832999999999995}; r:evidence (
  <#lemma15>);
  r:rule <#lemma14>.

<#lemma3> a r:Inference; r:gives {(:Ann owl:Thing) fl:pi 1.0}; r:evidence (
  <#lemma16>);
  r:rule <#lemma14>.

<#lemma4> a r:Inference; r:gives {(:Ann owl:Nothing) fl:pi 0.0}; r:evidence (
  <#lemma17>);
  r:rule <#lemma14>.

<#lemma5> a r:Inference; r:gives {(:Ann :NormalIntraocularPressure) fl:pi 0.42055693693538665}; r:evidence (
  <#lemma18>);
  r:rule <#lemma14>.

<#lemma6> a r:Inference; r:gives {(:Ann :IncreasedIntraocularPressure) fl:pi 0.5762688313443307}; r:evidence (
  <#lemma19>);
  r:rule <#lemma14>.

<#lemma7> a r:Inference; r:gives {(:Ann :NonNormalIntraocularPressure) fl:pi 0.5794430630646134}; r:evidence (
  <#lemma20>);
  r:rule <#lemma14>.

<#lemma8> a r:Inference; r:gives {(:Ann :NonIncreasedIntraocularPressure) fl:pi 0.4237311686556693}; r:evidence (
  <#lemma21>);
  r:rule <#lemma14>.

<#lemma9> a r:Inference; r:gives {(:Ann _:sk0) fl:pi 0.42055693693538665}; r:evidence (
  <#lemma22>);
  r:rule <#lemma14>.

<#lemma10> a r:Inference; r:gives {(:Ann _:sk1) fl:pi 0.5762688313443307}; r:evidence (
  <#lemma23>);
  r:rule <#lemma14>.

<#lemma11> a r:Inference; r:gives {(:Ann :ChildAgeAndNormalIntraocularPressure) fl:pi 0.0}; r:evidence (
  <#lemma24>);
  r:rule <#lemma14>.

<#lemma12> a r:Inference; r:gives {(:Ann :AdultAgeOrIncreasedIntraocularPressure) fl:pi 1.0}; r:evidence (
  <#lemma25>);
  r:rule <#lemma14>.

<#lemma13> a r:Inference; r:gives {(:Ann :ChildAge) fl:pi 0.4167000000000005}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(_:sk2 _:sk3) fl:mu _:sk4} {({(_:sk2) fcm:fm true} true {({(_:sk2) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (_:sk5 (fcm:pi _:sk2 _:sk3 _:sk4)) prolog:univ true.
          (_:sk5) prolog:assertz true}) prolog:forall true.
        ({(_:sk2 _:sk3) fl:sigma _:sk6} {({(_:sk2) fcm:fs true} true {({(_:sk2) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(_:sk3) fcm:fs true} true {({(_:sk3) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 _:sk7) prolog:between true.
        (_:sk2) fcm:fm true.
        (_:sk3) fcm:fs true.
        (_:sk8 {(_:sk9 _:sk3) fl:sigma _:sk10.
          (_:sk11 (fcm:pi _:sk2 _:sk9 _:sk12)) prolog:univ true.
          (_:sk11) prolog:call true.
          (2 _:sk12) prolog:product _:sk13.
          (_:sk13 1) prolog:minus _:sk14.
          (2 _:sk10) prolog:product _:sk15.
          (_:sk15 1) prolog:minus _:sk16.
          (_:sk14 _:sk16) prolog:product _:sk8} _:sk17) prolog:findall true.
        ({_:sk17 log:equalTo ()} true {_:sk17 math:sum _:sk18.
          (_:sk18) prolog:minus _:sk19.
          (_:sk19) prolog:exp _:sk20.
          (1 _:sk20) prolog:plus _:sk21.
          (1 _:sk21) prolog:quotient _:sk4.
          (_:sk22 (fcm:pi _:sk2 _:sk3 _:sk23)) prolog:univ true.
          (_:sk22) prolog:retractall true.
          (_:sk24 (fcm:pi _:sk2 _:sk3 _:sk4)) prolog:univ true.
          (_:sk24) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    ({(:Ann :ChildAge 0.4167000000000005) fcm:pi true} (fcm:pi :Ann :ChildAge 0.4167000000000005)) prolog:univ true.
    ({(:Ann :ChildAge 0.4167000000000005) fcm:pi true}) prolog:call true.
    ({((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:closure {(:Ann :ChildAge) fl:pi _:sk25}} {0.4167000000000005 log:equalTo _:sk25} {0.4167000000000005 log:equalTo 0.4167000000000005}) prolog:if_then_else true}}]);
  r:rule <#lemma26>.

<#lemma14> a r:Extraction; r:gives {{(?x0 ?x1) fl:pi ?x2} => {(?x0 ?x1) fl:pi ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>].

<#lemma15> a r:Inference; r:gives {(:Ann :AdultAge) fl:pi 0.5832999999999995}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(_:sk26 _:sk27) fl:mu _:sk28} {({(_:sk26) fcm:fm true} true {({(_:sk26) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (_:sk29 (fcm:pi _:sk26 _:sk27 _:sk28)) prolog:univ true.
          (_:sk29) prolog:assertz true}) prolog:forall true.
        ({(_:sk26 _:sk27) fl:sigma _:sk30} {({(_:sk26) fcm:fs true} true {({(_:sk26) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(_:sk27) fcm:fs true} true {({(_:sk27) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 _:sk31) prolog:between true.
        (_:sk26) fcm:fm true.
        (_:sk27) fcm:fs true.
        (_:sk32 {(_:sk33 _:sk27) fl:sigma _:sk34.
          (_:sk35 (fcm:pi _:sk26 _:sk33 _:sk36)) prolog:univ true.
          (_:sk35) prolog:call true.
          (2 _:sk36) prolog:product _:sk37.
          (_:sk37 1) prolog:minus _:sk38.
          (2 _:sk34) prolog:product _:sk39.
          (_:sk39 1) prolog:minus _:sk40.
          (_:sk38 _:sk40) prolog:product _:sk32} _:sk41) prolog:findall true.
        ({_:sk41 log:equalTo ()} true {_:sk41 math:sum _:sk42.
          (_:sk42) prolog:minus _:sk43.
          (_:sk43) prolog:exp _:sk44.
          (1 _:sk44) prolog:plus _:sk45.
          (1 _:sk45) prolog:quotient _:sk28.
          (_:sk46 (fcm:pi _:sk26 _:sk27 _:sk47)) prolog:univ true.
          (_:sk46) prolog:retractall true.
          (_:sk48 (fcm:pi _:sk26 _:sk27 _:sk28)) prolog:univ true.
          (_:sk48) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    ({(:Ann :AdultAge 0.5832999999999995) fcm:pi true} (fcm:pi :Ann :AdultAge 0.5832999999999995)) prolog:univ true.
    ({(:Ann :AdultAge 0.5832999999999995) fcm:pi true}) prolog:call true.
    ({((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:closure {(:Ann :AdultAge) fl:pi _:sk49}} {0.5832999999999995 log:equalTo _:sk49} {0.5832999999999995 log:equalTo 0.5832999999999995}) prolog:if_then_else true}}]);
  r:rule <#lemma26>.

<#lemma16> a r:Inference; r:gives {(:Ann owl:Thing) fl:pi 1.0}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(_:sk50 _:sk51) fl:mu _:sk52} {({(_:sk50) fcm:fm true} true {({(_:sk50) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (_:sk53 (fcm:pi _:sk50 _:sk51 _:sk52)) prolog:univ true.
          (_:sk53) prolog:assertz true}) prolog:forall true.
        ({(_:sk50 _:sk51) fl:sigma _:sk54} {({(_:sk50) fcm:fs true} true {({(_:sk50) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(_:sk51) fcm:fs true} true {({(_:sk51) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 _:sk55) prolog:between true.
        (_:sk50) fcm:fm true.
        (_:sk51) fcm:fs true.
        (_:sk56 {(_:sk57 _:sk51) fl:sigma _:sk58.
          (_:sk59 (fcm:pi _:sk50 _:sk57 _:sk60)) prolog:univ true.
          (_:sk59) prolog:call true.
          (2 _:sk60) prolog:product _:sk61.
          (_:sk61 1) prolog:minus _:sk62.
          (2 _:sk58) prolog:product _:sk63.
          (_:sk63 1) prolog:minus _:sk64.
          (_:sk62 _:sk64) prolog:product _:sk56} _:sk65) prolog:findall true.
        ({_:sk65 log:equalTo ()} true {_:sk65 math:sum _:sk66.
          (_:sk66) prolog:minus _:sk67.
          (_:sk67) prolog:exp _:sk68.
          (1 _:sk68) prolog:plus _:sk69.
          (1 _:sk69) prolog:quotient _:sk52.
          (_:sk70 (fcm:pi _:sk50 _:sk51 _:sk71)) prolog:univ true.
          (_:sk70) prolog:retractall true.
          (_:sk72 (fcm:pi _:sk50 _:sk51 _:sk52)) prolog:univ true.
          (_:sk72) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    ({(:Ann owl:Thing 1.0) fcm:pi true} (fcm:pi :Ann owl:Thing 1.0)) prolog:univ true.
    ({(:Ann owl:Thing 1.0) fcm:pi true}) prolog:call true.
    ({((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:closure {(:Ann owl:Thing) fl:pi _:sk73}} {1.0 log:equalTo _:sk73} {1.0 log:equalTo 1.0}) prolog:if_then_else true}}]);
  r:rule <#lemma26>.

<#lemma17> a r:Inference; r:gives {(:Ann owl:Nothing) fl:pi 0.0}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(_:sk74 _:sk75) fl:mu _:sk76} {({(_:sk74) fcm:fm true} true {({(_:sk74) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (_:sk77 (fcm:pi _:sk74 _:sk75 _:sk76)) prolog:univ true.
          (_:sk77) prolog:assertz true}) prolog:forall true.
        ({(_:sk74 _:sk75) fl:sigma _:sk78} {({(_:sk74) fcm:fs true} true {({(_:sk74) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(_:sk75) fcm:fs true} true {({(_:sk75) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 _:sk79) prolog:between true.
        (_:sk74) fcm:fm true.
        (_:sk75) fcm:fs true.
        (_:sk80 {(_:sk81 _:sk75) fl:sigma _:sk82.
          (_:sk83 (fcm:pi _:sk74 _:sk81 _:sk84)) prolog:univ true.
          (_:sk83) prolog:call true.
          (2 _:sk84) prolog:product _:sk85.
          (_:sk85 1) prolog:minus _:sk86.
          (2 _:sk82) prolog:product _:sk87.
          (_:sk87 1) prolog:minus _:sk88.
          (_:sk86 _:sk88) prolog:product _:sk80} _:sk89) prolog:findall true.
        ({_:sk89 log:equalTo ()} true {_:sk89 math:sum _:sk90.
          (_:sk90) prolog:minus _:sk91.
          (_:sk91) prolog:exp _:sk92.
          (1 _:sk92) prolog:plus _:sk93.
          (1 _:sk93) prolog:quotient _:sk76.
          (_:sk94 (fcm:pi _:sk74 _:sk75 _:sk95)) prolog:univ true.
          (_:sk94) prolog:retractall true.
          (_:sk96 (fcm:pi _:sk74 _:sk75 _:sk76)) prolog:univ true.
          (_:sk96) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    ({(:Ann owl:Nothing 0.0) fcm:pi true} (fcm:pi :Ann owl:Nothing 0.0)) prolog:univ true.
    ({(:Ann owl:Nothing 0.0) fcm:pi true}) prolog:call true.
    ({((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:closure {(:Ann owl:Nothing) fl:pi _:sk97}} {0.0 log:equalTo _:sk97} {0.0 log:equalTo 0.0}) prolog:if_then_else true}}]);
  r:rule <#lemma26>.

<#lemma18> a r:Inference; r:gives {(:Ann :NormalIntraocularPressure) fl:pi 0.42055693693538665}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(_:sk98 _:sk99) fl:mu _:sk100} {({(_:sk98) fcm:fm true} true {({(_:sk98) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (_:sk101 (fcm:pi _:sk98 _:sk99 _:sk100)) prolog:univ true.
          (_:sk101) prolog:assertz true}) prolog:forall true.
        ({(_:sk98 _:sk99) fl:sigma _:sk102} {({(_:sk98) fcm:fs true} true {({(_:sk98) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(_:sk99) fcm:fs true} true {({(_:sk99) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 _:sk103) prolog:between true.
        (_:sk98) fcm:fm true.
        (_:sk99) fcm:fs true.
        (_:sk104 {(_:sk105 _:sk99) fl:sigma _:sk106.
          (_:sk107 (fcm:pi _:sk98 _:sk105 _:sk108)) prolog:univ true.
          (_:sk107) prolog:call true.
          (2 _:sk108) prolog:product _:sk109.
          (_:sk109 1) prolog:minus _:sk110.
          (2 _:sk106) prolog:product _:sk111.
          (_:sk111 1) prolog:minus _:sk112.
          (_:sk110 _:sk112) prolog:product _:sk104} _:sk113) prolog:findall true.
        ({_:sk113 log:equalTo ()} true {_:sk113 math:sum _:sk114.
          (_:sk114) prolog:minus _:sk115.
          (_:sk115) prolog:exp _:sk116.
          (1 _:sk116) prolog:plus _:sk117.
          (1 _:sk117) prolog:quotient _:sk100.
          (_:sk118 (fcm:pi _:sk98 _:sk99 _:sk119)) prolog:univ true.
          (_:sk118) prolog:retractall true.
          (_:sk120 (fcm:pi _:sk98 _:sk99 _:sk100)) prolog:univ true.
          (_:sk120) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    ({(:Ann :NormalIntraocularPressure 0.42055693693538665) fcm:pi true} (fcm:pi :Ann :NormalIntraocularPressure 0.42055693693538665)) prolog:univ true.
    ({(:Ann :NormalIntraocularPressure 0.42055693693538665) fcm:pi true}) prolog:call true.
    ({((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:closure {(:Ann :NormalIntraocularPressure) fl:pi _:sk121}} {0.42055693693538665 log:equalTo _:sk121} {0.42055693693538665 log:equalTo 0.42055693693538665}) prolog:if_then_else true}}]);
  r:rule <#lemma26>.

<#lemma19> a r:Inference; r:gives {(:Ann :IncreasedIntraocularPressure) fl:pi 0.5762688313443307}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(_:sk122 _:sk123) fl:mu _:sk124} {({(_:sk122) fcm:fm true} true {({(_:sk122) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (_:sk125 (fcm:pi _:sk122 _:sk123 _:sk124)) prolog:univ true.
          (_:sk125) prolog:assertz true}) prolog:forall true.
        ({(_:sk122 _:sk123) fl:sigma _:sk126} {({(_:sk122) fcm:fs true} true {({(_:sk122) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(_:sk123) fcm:fs true} true {({(_:sk123) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 _:sk127) prolog:between true.
        (_:sk122) fcm:fm true.
        (_:sk123) fcm:fs true.
        (_:sk128 {(_:sk129 _:sk123) fl:sigma _:sk130.
          (_:sk131 (fcm:pi _:sk122 _:sk129 _:sk132)) prolog:univ true.
          (_:sk131) prolog:call true.
          (2 _:sk132) prolog:product _:sk133.
          (_:sk133 1) prolog:minus _:sk134.
          (2 _:sk130) prolog:product _:sk135.
          (_:sk135 1) prolog:minus _:sk136.
          (_:sk134 _:sk136) prolog:product _:sk128} _:sk137) prolog:findall true.
        ({_:sk137 log:equalTo ()} true {_:sk137 math:sum _:sk138.
          (_:sk138) prolog:minus _:sk139.
          (_:sk139) prolog:exp _:sk140.
          (1 _:sk140) prolog:plus _:sk141.
          (1 _:sk141) prolog:quotient _:sk124.
          (_:sk142 (fcm:pi _:sk122 _:sk123 _:sk143)) prolog:univ true.
          (_:sk142) prolog:retractall true.
          (_:sk144 (fcm:pi _:sk122 _:sk123 _:sk124)) prolog:univ true.
          (_:sk144) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    ({(:Ann :IncreasedIntraocularPressure 0.5762688313443307) fcm:pi true} (fcm:pi :Ann :IncreasedIntraocularPressure 0.5762688313443307)) prolog:univ true.
    ({(:Ann :IncreasedIntraocularPressure 0.5762688313443307) fcm:pi true}) prolog:call true.
    ({((<http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3> <http://eulersharp.sourceforge.net/2003/03swap/example001P.n3> <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3> <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>) 1) e:closure {(:Ann :IncreasedIntraocularPressure) fl:pi _:sk145}} {0.5762688313443307 log:equalTo _:sk145} {0.5762688313443307 log:equalTo 0.5762688313443307}) prolog:if_then_else true}}]);
  r:rule <#lemma26>.

<#lemma20> a r:Inference; r:gives {(:Ann :NonNormalIntraocularPressure) fl:pi 0.5794430630646134}; r:evidence (
  <#lemma27>
  <#lemma18>
  [ a r:Fact; r:gives {(1.0 0.42055693693538665) math:difference 0.5794430630646134}]);
  r:rule <#lemma28>.

<#lemma21> a r:Inference; r:gives {(:Ann :NonIncreasedIntraocularPressure) fl:pi 0.4237311686556693}; r:evidence (
  <#lemma29>
  <#lemma19>
  [ a r:Fact; r:gives {(1.0 0.5762688313443307) math:difference 0.4237311686556693}]);
  r:rule <#lemma28>.

<#lemma22> a r:Inference; r:gives {(:Ann _:sk0) fl:pi 0.42055693693538665}; r:evidence (
  <#lemma30>
  [ a r:Fact; r:gives {(:NormalIntraocularPressure) e:distinct (:NormalIntraocularPressure)}]
  [ a r:Fact; r:gives {(:NormalIntraocularPressure) list:first :NormalIntraocularPressure}]
  [ a r:Fact; r:gives {(:NormalIntraocularPressure) list:rest ()}]
  <#lemma18>
  <#lemma31>
  <#lemma16>
  [ a r:Fact; r:gives {(0.42055693693538665 1.0 -1.0) math:sum 0.42055693693538665}]
  [ a r:Fact; r:gives {(0.0 0.42055693693538665) e:max 0.42055693693538665}]);
  r:rule <#lemma32>.

<#lemma23> a r:Inference; r:gives {(:Ann _:sk1) fl:pi 0.5762688313443307}; r:evidence (
  <#lemma33>
  [ a r:Fact; r:gives {(:IncreasedIntraocularPressure) e:distinct (:IncreasedIntraocularPressure)}]
  [ a r:Fact; r:gives {(:IncreasedIntraocularPressure) list:first :IncreasedIntraocularPressure}]
  [ a r:Fact; r:gives {(:IncreasedIntraocularPressure) list:rest ()}]
  <#lemma19>
  <#lemma34>
  <#lemma17>
  [ a r:Fact; r:gives {(0.5762688313443307 0.0) math:sum 0.5762688313443307}]
  [ a r:Fact; r:gives {(1.0 0.5762688313443307) e:min 0.5762688313443307}]);
  r:rule <#lemma35>.

<#lemma24> a r:Inference; r:gives {(:Ann :ChildAgeAndNormalIntraocularPressure) fl:pi 0.0}; r:evidence (
  <#lemma36>
  [ a r:Fact; r:gives {(:ChildAge :NormalIntraocularPressure) e:distinct (:ChildAge :NormalIntraocularPressure)}]
  [ a r:Fact; r:gives {(:ChildAge :NormalIntraocularPressure) list:first :ChildAge}]
  [ a r:Fact; r:gives {(:ChildAge :NormalIntraocularPressure) list:rest (:NormalIntraocularPressure)}]
  <#lemma13>
  <#lemma30>
  <#lemma22>
  [ a r:Fact; r:gives {(0.4167000000000005 0.42055693693538665 -1.0) math:sum -0.16274306306461284}]
  [ a r:Fact; r:gives {(0.0 -0.16274306306461284) e:max 0.0}]);
  r:rule <#lemma32>.

<#lemma25> a r:Inference; r:gives {(:Ann :AdultAgeOrIncreasedIntraocularPressure) fl:pi 1.0}; r:evidence (
  <#lemma37>
  [ a r:Fact; r:gives {(:AdultAge :IncreasedIntraocularPressure) e:distinct (:AdultAge :IncreasedIntraocularPressure)}]
  [ a r:Fact; r:gives {(:AdultAge :IncreasedIntraocularPressure) list:first :AdultAge}]
  [ a r:Fact; r:gives {(:AdultAge :IncreasedIntraocularPressure) list:rest (:IncreasedIntraocularPressure)}]
  <#lemma15>
  <#lemma33>
  <#lemma23>
  [ a r:Fact; r:gives {(0.5832999999999995 0.5762688313443307) math:sum 1.1595688313443302}]
  [ a r:Fact; r:gives {(1.0 1.1595688313443302) e:min 1.0}]);
  r:rule <#lemma35>.

<#lemma26> a r:Extraction; r:gives {{(?x25 ?x26) fl:pi ?x29} <= {?x0 e:call {({("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_getval true} true {({({(?x1 ?x2) fl:mu ?x3} {({(?x1) fcm:fm true} true {({(?x1) fcm:fm true}) prolog:assertz true}) prolog:if_then_else true.
          (?x4 (fcm:pi ?x1 ?x2 ?x3)) prolog:univ true.
          (?x4) prolog:assertz true}) prolog:forall true.
        ({(?x1 ?x2) fl:sigma ?x5} {({(?x1) fcm:fs true} true {({(?x1) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true.
          ({(?x2) fcm:fs true} true {({(?x2) fcm:fs true}) prolog:assertz true}) prolog:if_then_else true}) prolog:forall true.
        (1 20 ?x6) prolog:between true.
        (?x1) fcm:fm true.
        (?x2) fcm:fs true.
        (?x7 {(?x8 ?x2) fl:sigma ?x9.
          (?x10 (fcm:pi ?x1 ?x8 ?x11)) prolog:univ true.
          (?x10) prolog:call true.
          (2 ?x11) prolog:product ?x12.
          (?x12 1) prolog:minus ?x13.
          (2 ?x9) prolog:product ?x14.
          (?x14 1) prolog:minus ?x15.
          (?x13 ?x15) prolog:product ?x7} ?x16) prolog:findall true.
        ({?x16 log:equalTo ()} true {?x16 math:sum ?x17.
          (?x17) prolog:minus ?x18.
          (?x18) prolog:exp ?x19.
          (1 ?x19) prolog:plus ?x20.
          (1 ?x20) prolog:quotient ?x3.
          (?x21 (fcm:pi ?x1 ?x2 ?x22)) prolog:univ true.
          (?x21) prolog:retractall true.
          (?x23 (fcm:pi ?x1 ?x2 ?x3)) prolog:univ true.
          (?x23) prolog:assertz true}) prolog:if_then_else true.
        "fail"^^prolog:atom} {("fnet"^^prolog:atom "done"^^prolog:atom) prolog:nb_setval true}) prolog:disjunction true}) prolog:if_then_else true.
    (?x24 (fcm:pi ?x25 ?x26 ?x27)) prolog:univ true.
    (?x24) prolog:call true.
    ({?x0 e:closure {(?x25 ?x26) fl:pi ?x28}} {?x29 log:equalTo ?x28} {?x29 log:equalTo ?x27}) prolog:if_then_else true}}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2006/02swap/fcm-plugin.n3>].

<#lemma27> a r:Extraction; r:gives {:NonNormalIntraocularPressure owl:complementOf :NormalIntraocularPressure};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3>].

<#lemma28> a r:Extraction; r:gives {{?x0 owl:complementOf ?x1.
  (?x2 ?x1) fl:pi ?x3.
  (1.0 ?x3) math:difference ?x4} => {(?x2 ?x0) fl:pi ?x4}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

<#lemma29> a r:Extraction; r:gives {:NonIncreasedIntraocularPressure owl:complementOf :IncreasedIntraocularPressure};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3>].

<#lemma30> a r:Inference; r:gives {_:sk0 owl:intersectionOf (:NormalIntraocularPressure)}; r:evidence (
  <#lemma36>
  [ a r:Fact; r:gives {(:ChildAge :NormalIntraocularPressure) list:rest (:NormalIntraocularPressure)}]);
  r:rule <#lemma38>.

<#lemma31> a r:Extraction; r:gives {owl:Thing owl:intersectionOf ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

<#lemma32> a r:Extraction; r:gives {{?x0 owl:intersectionOf ?x1.
  ?x1 e:distinct ?x2.
  ?x2 list:first ?x3.
  ?x2 list:rest ?x4.
  (?x5 ?x3) fl:pi ?x6.
  ?x7 owl:intersectionOf ?x4.
  (?x5 ?x7) fl:pi ?x8.
  (?x6 ?x8 -1.0) math:sum ?x9.
  (0.0 ?x9) e:max ?x10} => {(?x5 ?x0) fl:pi ?x10}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

<#lemma33> a r:Inference; r:gives {_:sk1 owl:unionOf (:IncreasedIntraocularPressure)}; r:evidence (
  <#lemma37>
  [ a r:Fact; r:gives {(:AdultAge :IncreasedIntraocularPressure) list:rest (:IncreasedIntraocularPressure)}]);
  r:rule <#lemma39>.

<#lemma34> a r:Extraction; r:gives {owl:Nothing owl:unionOf ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

<#lemma35> a r:Extraction; r:gives {{?x0 owl:unionOf ?x1.
  ?x1 e:distinct ?x2.
  ?x2 list:first ?x3.
  ?x2 list:rest ?x4.
  (?x5 ?x3) fl:pi ?x6.
  ?x7 owl:unionOf ?x4.
  (?x5 ?x7) fl:pi ?x8.
  (?x6 ?x8) math:sum ?x9.
  (1.0 ?x9) e:min ?x10} => {(?x5 ?x0) fl:pi ?x10}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

<#lemma36> a r:Extraction; r:gives {:ChildAgeAndNormalIntraocularPressure owl:intersectionOf (:ChildAge :NormalIntraocularPressure)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3>].

<#lemma37> a r:Extraction; r:gives {:AdultAgeOrIncreasedIntraocularPressure owl:unionOf (:AdultAge :IncreasedIntraocularPressure)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example002P.n3>].

<#lemma38> a r:Extraction; r:gives {{?x0 owl:intersectionOf ?x1.
  ?x1 list:rest ?x2} => {_:x3 owl:intersectionOf ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

<#lemma39> a r:Extraction; r:gives {{?x0 owl:unionOf ?x1.
  ?x1 list:rest ?x2} => {_:x3 owl:unionOf ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/fl-rules.n3>].

#ENDS 1.923 [sec] TC=34 TP=245 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2004/04test/radlex.n3 --query http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3

PREFIX : <http://eulersharp.sourceforge.net/2004/04test/RadLex#>
PREFIX ACR: <http://eulersharp.sourceforge.net/2004/04test/ACR#>
PREFIX UMLS: <http://eulersharp.sourceforge.net/2004/04test/UMLS#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX q: <http://www.w3.org/2004/ql#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:gives {
    :RL433 :name "rotator cuff muscles".
    :RL438 :name "teres major muscle".
    :RL439 :name "deltoid muscle".
    :RL440 :name "trapezius muscle".
    :RL441 :name "pectoralis major muscle".
    :RL442 :name "pectoralis minor muscle".
  }].

<#lemma1> a r:Inference; r:gives {:RL433 :name "rotator cuff muscles"}; r:evidence (
  <#lemma7>
  <#lemma8>
  <#lemma9>
  <#lemma10>);
  r:rule <#lemma11>.

<#lemma2> a r:Inference; r:gives {:RL438 :name "teres major muscle"}; r:evidence (
  <#lemma7>
  <#lemma12>
  <#lemma13>
  <#lemma14>);
  r:rule <#lemma11>.

<#lemma3> a r:Inference; r:gives {:RL439 :name "deltoid muscle"}; r:evidence (
  <#lemma7>
  <#lemma15>
  <#lemma16>
  <#lemma17>);
  r:rule <#lemma11>.

<#lemma4> a r:Inference; r:gives {:RL440 :name "trapezius muscle"}; r:evidence (
  <#lemma7>
  <#lemma18>
  <#lemma19>
  <#lemma20>);
  r:rule <#lemma11>.

<#lemma5> a r:Inference; r:gives {:RL441 :name "pectoralis major muscle"}; r:evidence (
  <#lemma7>
  <#lemma21>
  <#lemma22>
  <#lemma23>);
  r:rule <#lemma11>.

<#lemma6> a r:Inference; r:gives {:RL442 :name "pectoralis minor muscle"}; r:evidence (
  <#lemma7>
  <#lemma24>
  <#lemma25>
  <#lemma26>);
  r:rule <#lemma11>.

<#lemma7> a r:Extraction; r:gives {_:e429 :rl-term :RL432};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma8> a r:Extraction; r:gives {_:e429 :axis-term _:e430};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma9> a r:Extraction; r:gives {_:e430 :rl-term :RL433};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma10> a r:Extraction; r:gives {:RL433 :name "rotator cuff muscles"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma11> a r:Extraction; r:gives {{?x0 :rl-term :RL432.
  ?x0 :axis-term ?x1.
  ?x1 :rl-term ?x2.
  ?x2 :name ?x3} => {?x2 :name ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>].

<#lemma12> a r:Extraction; r:gives {_:e429 :axis-term _:e435};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma13> a r:Extraction; r:gives {_:e435 :rl-term :RL438};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma14> a r:Extraction; r:gives {:RL438 :name "teres major muscle"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma15> a r:Extraction; r:gives {_:e429 :axis-term _:e436};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma16> a r:Extraction; r:gives {_:e436 :rl-term :RL439};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma17> a r:Extraction; r:gives {:RL439 :name "deltoid muscle"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma18> a r:Extraction; r:gives {_:e429 :axis-term _:e437};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma19> a r:Extraction; r:gives {_:e437 :rl-term :RL440};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma20> a r:Extraction; r:gives {:RL440 :name "trapezius muscle"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma21> a r:Extraction; r:gives {_:e429 :axis-term _:e438};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma22> a r:Extraction; r:gives {_:e438 :rl-term :RL441};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma23> a r:Extraction; r:gives {:RL441 :name "pectoralis major muscle"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma24> a r:Extraction; r:gives {_:e429 :axis-term _:e439};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma25> a r:Extraction; r:gives {_:e439 :rl-term :RL442};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

<#lemma26> a r:Extraction; r:gives {:RL442 :name "pectoralis minor muscle"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>].

#ENDS 2.695 [sec] TC=6 TP=12 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3 http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3 --query http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3

PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX : <http://idm.univ-rennes1.fr/~obierlai/anatomy#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:gives {
    :MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2.
    :MAE2 :isMaterialAnatomicalEntityConnectedTo :MAE1.
    :MAE2 :hasNoCommonPart :MAE3.
    :MAE4 :hasNoCommonPart :MAE3.
    :MAE5 :hasNoCommonPart :MAE3.
    :MAE6 :hasNoCommonPart :MAE3.
    :MAE8 :hasNoCommonPart :MAE3.
    :MAE9 :hasNoCommonPart :MAE3.
    :MAE7 :hasNoCommonPart :MAE3.
  }].

<#lemma1> a r:Inference; r:gives {:MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2}; r:evidence (
  <#lemma10>
  <#lemma11>);
  r:rule <#lemma12>.

<#lemma2> a r:Inference; r:gives {:MAE2 :isMaterialAnatomicalEntityConnectedTo :MAE1}; r:evidence (
  <#lemma13>
  <#lemma14>);
  r:rule <#lemma12>.

<#lemma3> a r:Inference; r:gives {:MAE2 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma15>);
  r:rule <#lemma16>.

<#lemma4> a r:Inference; r:gives {:MAE4 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma17>);
  r:rule <#lemma16>.

<#lemma5> a r:Inference; r:gives {:MAE5 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma18>);
  r:rule <#lemma16>.

<#lemma6> a r:Inference; r:gives {:MAE6 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma19>);
  r:rule <#lemma16>.

<#lemma7> a r:Inference; r:gives {:MAE8 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma20>);
  r:rule <#lemma16>.

<#lemma8> a r:Inference; r:gives {:MAE9 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma21>);
  r:rule <#lemma16>.

<#lemma9> a r:Inference; r:gives {:MAE7 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma22>);
  r:rule <#lemma16>.

<#lemma10> a r:Extraction; r:gives {:MAE1 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma11> a r:Extraction; r:gives {:MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma12> a r:Extraction; r:gives {{?x0 a :MaterialAnatomicalEntity.
  ?x0 :isMaterialAnatomicalEntityConnectedTo ?x1} => {?x0 :isMaterialAnatomicalEntityConnectedTo ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>].

<#lemma13> a r:Extraction; r:gives {:MAE2 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma14> a r:Inference; r:gives {:MAE2 :isMaterialAnatomicalEntityConnectedTo :MAE1}; r:evidence (
  <#lemma23>
  <#lemma11>);
  r:rule <#lemma24>.

<#lemma15> a r:Inference; r:gives {:MAE2 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma25>
  <#lemma26>
  <#lemma27>
  <#lemma13>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma16> a r:Extraction; r:gives {{?x0 :hasNoCommonPart :MAE3} => {?x0 :hasNoCommonPart :MAE3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>].

<#lemma17> a r:Inference; r:gives {:MAE4 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma30>
  <#lemma26>
  <#lemma27>
  <#lemma31>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma18> a r:Inference; r:gives {:MAE5 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma32>
  <#lemma26>
  <#lemma27>
  <#lemma33>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma19> a r:Inference; r:gives {:MAE6 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma34>
  <#lemma26>
  <#lemma27>
  <#lemma35>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma20> a r:Inference; r:gives {:MAE8 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma36>
  <#lemma26>
  <#lemma27>
  <#lemma37>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma21> a r:Inference; r:gives {:MAE9 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma38>
  <#lemma26>
  <#lemma27>
  <#lemma39>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma22> a r:Inference; r:gives {:MAE7 :hasNoCommonPart :MAE3}; r:evidence (
  <#lemma40>
  <#lemma26>
  <#lemma41>
  <#lemma42>
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma23> a r:Extraction; r:gives {:isMaterialAnatomicalEntityConnectedTo a owl:SymmetricProperty};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma24> a r:Extraction; r:gives {{?x0 a owl:SymmetricProperty.
  ?x1 ?x0 ?x2} => {?x2 ?x0 ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma25> a r:Extraction; r:gives {:MAE2 :hasAnatomicalPartList ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma26> a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma27> a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
  <#lemma43>);
  r:rule <#lemma44>.

<#lemma28> a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma29> a r:Extraction; r:gives {{?x0 :hasAnatomicalPartList ?x1.
  ?x2 :hasAnatomicalPartList ?x3.
  ?x1 :hasNoAnatomicalPartInList ?x3.
  ?x0 a :MaterialAnatomicalEntity.
  ?x2 a :MaterialAnatomicalEntity} => {?x0 :hasNoCommonPart ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma30> a r:Extraction; r:gives {:MAE4 :hasAnatomicalPartList ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma31> a r:Extraction; r:gives {:MAE4 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma32> a r:Extraction; r:gives {:MAE5 :hasAnatomicalPartList ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma33> a r:Extraction; r:gives {:MAE5 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma34> a r:Extraction; r:gives {:MAE6 :hasAnatomicalPartList ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma35> a r:Extraction; r:gives {:MAE6 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma36> a r:Extraction; r:gives {:MAE8 :hasAnatomicalPartList ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma37> a r:Extraction; r:gives {:MAE8 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma38> a r:Extraction; r:gives {:MAE9 :hasAnatomicalPartList ()};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma39> a r:Extraction; r:gives {:MAE9 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma40> a r:Extraction; r:gives {:MAE7 :hasAnatomicalPartList (:MAE8 :MAE9)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma41> a r:Inference; r:gives {(:MAE8 :MAE9) :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
  [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:first :MAE8}]
  <#lemma45>
  <#lemma36>
  <#lemma27>
  <#lemma46>
  [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:rest (:MAE9)}]
  <#lemma47>);
  r:rule <#lemma48>.

<#lemma42> a r:Extraction; r:gives {:MAE7 a :MaterialAnatomicalEntity};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma43> a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
  <#lemma26>);
  r:rule <#lemma49>.

<#lemma44> a r:Extraction; r:gives {{?x0 a rdf:List} => {() :hasNoAnatomicalPartInList ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma45> a r:Inference; r:gives {(:MAE8 :MAE9) a rdf:List}; r:evidence (
  <#lemma40>);
  r:rule <#lemma49>.

<#lemma46> a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) :hasNoAnatomicalPart :MAE8}; r:evidence (
  [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:first :MAE5}]
  <#lemma43>
  <#lemma32>
  <#lemma50>
  <#lemma51>
  [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
  <#lemma52>);
  r:rule <#lemma53>.

<#lemma47> a r:Inference; r:gives {(:MAE9) :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
  [ a r:Fact; r:gives {(:MAE9) rdf:first :MAE9}]
  <#lemma54>
  <#lemma38>
  <#lemma27>
  <#lemma55>
  [ a r:Fact; r:gives {(:MAE9) rdf:rest ()}]);
  r:rule <#lemma48>.

<#lemma48> a r:Extraction; r:gives {{?x0 rdf:first ?x1.
  ?x0 a rdf:List.
  ?x1 :hasAnatomicalPartList ?x2.
  ?x2 :hasNoAnatomicalPartInList ?x3.
  ?x3 :hasNoAnatomicalPart ?x1.
  ?x0 rdf:rest ?x4.
  ?x4 :hasNoAnatomicalPartInList ?x3} => {?x0 :hasNoAnatomicalPartInList ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma49> a r:Extraction; r:gives {{?x0 :hasAnatomicalPartList ?x1} => {?x1 a rdf:List}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma50> a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE8}; r:evidence (
  <#lemma37>);
  r:rule <#lemma56>.

<#lemma51> a r:Extraction; r:gives {:MAE5 owl:differentFrom :MAE8};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma52> a r:Inference; r:gives {(:MAE6 :MAE4) :hasNoAnatomicalPart :MAE8}; r:evidence (
  [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:first :MAE6}]
  <#lemma57>
  <#lemma34>
  <#lemma50>
  <#lemma58>
  [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:rest (:MAE4)}]
  <#lemma59>);
  r:rule <#lemma53>.

<#lemma53> a r:Extraction; r:gives {{?x0 rdf:first ?x1.
  ?x0 a rdf:List.
  ?x1 :hasAnatomicalPartList ?x2.
  ?x2 :hasNoAnatomicalPart ?x3.
  ?x1 owl:differentFrom ?x3.
  ?x0 rdf:rest ?x4.
  ?x4 :hasNoAnatomicalPart ?x3} => {?x0 :hasNoAnatomicalPart ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma54> a r:Inference; r:gives {(:MAE9) a rdf:List}; r:evidence (
  [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:rest (:MAE9)}]
  <#lemma45>);
  r:rule <#lemma60>.

<#lemma55> a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) :hasNoAnatomicalPart :MAE9}; r:evidence (
  [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:first :MAE5}]
  <#lemma43>
  <#lemma32>
  <#lemma61>
  <#lemma62>
  [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
  <#lemma63>);
  r:rule <#lemma53>.

<#lemma56> a r:Extraction; r:gives {{?x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma57> a r:Inference; r:gives {(:MAE6 :MAE4) a rdf:List}; r:evidence (
  [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
  <#lemma43>);
  r:rule <#lemma60>.

<#lemma58> a r:Extraction; r:gives {:MAE6 owl:differentFrom :MAE8};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma59> a r:Inference; r:gives {(:MAE4) :hasNoAnatomicalPart :MAE8}; r:evidence (
  [ a r:Fact; r:gives {(:MAE4) rdf:first :MAE4}]
  <#lemma64>
  <#lemma30>
  <#lemma50>
  <#lemma65>
  [ a r:Fact; r:gives {(:MAE4) rdf:rest ()}]);
  r:rule <#lemma53>.

<#lemma60> a r:Extraction; r:gives {{?x0 rdf:rest ?x1.
  ?x0 a rdf:List} => {?x1 a rdf:List}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>].

<#lemma61> a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE9}; r:evidence (
  <#lemma39>);
  r:rule <#lemma56>.

<#lemma62> a r:Extraction; r:gives {:MAE5 owl:differentFrom :MAE9};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma63> a r:Inference; r:gives {(:MAE6 :MAE4) :hasNoAnatomicalPart :MAE9}; r:evidence (
  [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:first :MAE6}]
  <#lemma57>
  <#lemma34>
  <#lemma61>
  <#lemma66>
  [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:rest (:MAE4)}]
  <#lemma67>);
  r:rule <#lemma53>.

<#lemma64> a r:Inference; r:gives {(:MAE4) a rdf:List}; r:evidence (
  [ a r:Fact; r:gives {(:MAE3 :MAE4) rdf:rest (:MAE4)}]
  <#lemma68>);
  r:rule <#lemma60>.

<#lemma65> a r:Extraction; r:gives {:MAE4 owl:differentFrom :MAE8};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma66> a r:Extraction; r:gives {:MAE6 owl:differentFrom :MAE9};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma67> a r:Inference; r:gives {(:MAE4) :hasNoAnatomicalPart :MAE9}; r:evidence (
  [ a r:Fact; r:gives {(:MAE4) rdf:first :MAE4}]
  <#lemma64>
  <#lemma30>
  <#lemma61>
  <#lemma69>
  [ a r:Fact; r:gives {(:MAE4) rdf:rest ()}]);
  r:rule <#lemma53>.

<#lemma68> a r:Inference; r:gives {(:MAE3 :MAE4) a rdf:List}; r:evidence (
  [ a r:Fact; r:gives {(:MAE2 :MAE3 :MAE4) rdf:rest (:MAE3 :MAE4)}]
  <#lemma70>);
  r:rule <#lemma60>.

<#lemma69> a r:Extraction; r:gives {:MAE4 owl:differentFrom :MAE9};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

<#lemma70> a r:Inference; r:gives {(:MAE2 :MAE3 :MAE4) a rdf:List}; r:evidence (
  <#lemma71>);
  r:rule <#lemma49>.

<#lemma71> a r:Extraction; r:gives {:MAE1 :hasAnatomicalPartList (:MAE2 :MAE3 :MAE4)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>].

#ENDS 1.229 [sec] TC=349 TP=3496 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2003/03swap/medic.n3 --query http://eulersharp.sourceforge.net/2003/03swap/medicF.n3

PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX fl: <http://eulersharp.sourceforge.net/2003/03swap/fl-rules#>
PREFIX : <http://eulersharp.sourceforge.net/2006/02swap/med#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:gives {
    :Joe :isPrescribed :aspirinLowDose.
    :Joe :isPrescribed :betaBlocker.
  }].

<#lemma1> a r:Inference; r:gives {:Joe :isPrescribed :aspirinLowDose}; r:evidence (
  <#lemma3>);
  r:rule <#lemma4>.

<#lemma2> a r:Inference; r:gives {:Joe :isPrescribed :betaBlocker}; r:evidence (
  <#lemma5>);
  r:rule <#lemma4>.

<#lemma3> a r:Inference; r:gives {:Joe :isPrescribed :aspirinLowDose}; r:evidence (
  <#lemma6>
  <#lemma7>
  [ a r:Fact; r:gives {0.9 math:greaterThan 0.7}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk0 {:aspirinLowDose :excludedFor _:sk0} (:ActivePepticUlcerDisease :AllergyForAspirin))}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk0 {:aspirinLowDose :excludedFor _:sk0.
    (:Joe _:sk0) fl:mu _:sk1.
    _:sk1 math:notGreaterThan 0.01} (:ActivePepticUlcerDisease :AllergyForAspirin))}]);
  r:rule <#lemma8>.

<#lemma4> a r:Extraction; r:gives {{?x0 :isPrescribed ?x1} => {?x0 :isPrescribed ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medicF.n3>].

<#lemma5> a r:Inference; r:gives {:Joe :isPrescribed :betaBlocker}; r:evidence (
  <#lemma9>
  <#lemma7>
  [ a r:Fact; r:gives {0.9 math:greaterThan 0.7}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk2 {:betaBlocker :excludedFor _:sk2} (:SevereAsthma :ChronicObstructivePumonaryDisease))}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk2 {:betaBlocker :excludedFor _:sk2.
    (:Joe _:sk2) fl:mu _:sk3.
    _:sk3 math:notGreaterThan 0.01} (:SevereAsthma :ChronicObstructivePumonaryDisease))}]);
  r:rule <#lemma8>.

<#lemma6> a r:Extraction; r:gives {:aspirinLowDose :prescribedFor :AcuteMyocardialInfarction};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>].

<#lemma7> a r:Extraction; r:gives {(:Joe :AcuteMyocardialInfarction) fl:mu 0.9};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>].

<#lemma8> a r:Extraction; r:gives {{?x0 :prescribedFor ?x1.
  (?x2 ?x1) fl:mu ?x3.
  ?x3 math:greaterThan 0.7 .
  ?x4 e:findall (?x5 {?x0 :excludedFor ?x5} ?x6).
  ?x4 e:findall (?x5 {?x0 :excludedFor ?x5.
    (?x2 ?x5) fl:mu ?x7.
    ?x7 math:notGreaterThan 0.01} ?x6)} => {?x2 :isPrescribed ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>].

<#lemma9> a r:Extraction; r:gives {:betaBlocker :prescribedFor :AcuteMyocardialInfarction};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>].

#ENDS 0.604 [sec] TC=4 TP=8 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3 --query http://eulersharp.sourceforge.net/2004/04test/metastaticQ001.n3

PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX : <http://eulersharp.sourceforge.net/2004/04test/metastatic#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :test :answer 0.09727626459143966 .
  }].

<#lemma1> a r:Inference; r:gives {:test :answer 0.09727626459143966}; r:evidence (
  [ a r:Fact; r:gives {({:MetastaticCancer e:boolean e:T} {:Coma e:boolean e:F} {:HeadAche e:boolean e:T}) e:biconditional 0.09727626459143966}]);
  r:rule <#lemma2>.

<#lemma2> a r:Extraction; r:gives {{({:MetastaticCancer e:boolean e:T} {:Coma e:boolean e:F} {:HeadAche e:boolean e:T}) e:biconditional ?x0} => {:test :answer ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticQ001.n3>].

#ENDS 0.640 [sec] TC=1 TP=2 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://www.w3.org/2000/10/swap/test/reason/witch.n3 --query http://www.w3.org/2000/10/swap/test/reason/witch-goal.n3

PREFIX : <http://www.w3.org/2000/10/swap/test/reason/witch#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :GIRL a :WITCH.
  }].

<#lemma1> a r:Inference; r:gives {:GIRL a :WITCH}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {:GIRL a :WITCH}; r:evidence (
  <#lemma4>
  <#lemma5>);
  r:rule <#lemma6>.

<#lemma3> a r:Extraction; r:gives {{:GIRL a :WITCH} => {:GIRL a :WITCH}};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch-goal.n3>].

<#lemma4> a r:Inference; r:gives {:GIRL a :BURNS}; r:evidence (
  <#lemma7>);
  r:rule <#lemma8>.

<#lemma5> a r:Extraction; r:gives {:GIRL a :WOMAN};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

<#lemma6> a r:Extraction; r:gives {{?x0 a :BURNS.
  ?x0 a :WOMAN} => {?x0 a :WITCH}};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

<#lemma7> a r:Inference; r:gives {:GIRL a :ISMADEOFWOOD}; r:evidence (
  <#lemma9>);
  r:rule <#lemma10>.

<#lemma8> a r:Extraction; r:gives {{?x0 a :ISMADEOFWOOD} => {?x0 a :BURNS}};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

<#lemma9> a r:Inference; r:gives {:GIRL a :FLOATS}; r:evidence (
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma10> a r:Extraction; r:gives {{?x0 a :FLOATS} => {?x0 a :ISMADEOFWOOD}};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

<#lemma11> a r:Extraction; r:gives {:DUCK a :FLOATS};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

<#lemma12> a r:Extraction; r:gives {:DUCK :SAMEWEIGHT :GIRL};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

<#lemma13> a r:Extraction; r:gives {{?x0 a :FLOATS.
  ?x0 :SAMEWEIGHT ?x1} => {?x1 a :FLOATS}};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>].

#ENDS 0.492 [sec] TC=7 TP=25 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2003/03swap/einstein.n3 --query http://eulersharp.sourceforge.net/2003/03swap/einsteinQ.n3

PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX : <http://eulersharp.sourceforge.net/2005/11swap/einstein#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :german :eats :fish.
  }].

<#lemma1> a r:Inference; r:gives {:german :eats :fish}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {:german :eats :fish}; r:evidence (
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) log:equalTo ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}]
  <#lemma4>
  <#lemma5>
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:red :brit :birds :milk :pallmall)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:white :swede :dogs :beer :bluemasters)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:blue :dane :horse :tea :blends)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:red :brit :birds :milk :pallmall)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:yellow :norwegian :cats :water :dunhill)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:white :swede :dogs :beer :bluemasters)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:green :german :fish :coffee :prince)}]
  [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:green :german :fish :coffee :prince)}]);
  r:rule <#lemma6>.

<#lemma3> a r:Extraction; r:gives {{?x0 :eats :fish} => {?x0 :eats :fish}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/einsteinQ.n3>].

<#lemma4> a r:Inference; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) :pair ((:blue :dane :horse :tea :blends) (:yellow :norwegian :cats :water :dunhill))}; r:evidence (
  <#lemma7>);
  r:rule <#lemma8>.

<#lemma5> a r:Inference; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) :sublist ((:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}; r:evidence (
  [ a r:Fact; r:gives {(((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) ()) list:append ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}]
  [ a r:Fact; r:gives {(((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall)) ((:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))) list:append ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}]);
  r:rule <#lemma9>.

<#lemma6> a r:Extraction; r:gives {{?x0 log:equalTo ((?x1 :norwegian ?x2 ?x3 ?x4) (:blue ?x5 ?x6 ?x7 ?x8) (?x9 ?x10 ?x11 :milk ?x12) ?x13 ?x14).
  ?x0 :pair ((?x15 ?x16 ?x17 ?x18 :blends) (?x19 ?x20 :cats ?x21 ?x22)).
  ?x0 :pair ((?x23 ?x24 :horse ?x25 ?x26) (?x27 ?x28 ?x29 ?x30 :dunhill)).
  ?x0 :sublist ((:green ?x31 ?x32 :coffee ?x33) (:white ?x34 ?x35 ?x36 ?x37)).
  ?x0 :pair ((?x38 ?x39 ?x40 ?x41 :blends) (?x42 ?x43 ?x44 :water ?x45)).
  ?x0 list:member (:red :brit ?x46 ?x47 ?x48).
  ?x0 list:member (?x49 :swede :dogs ?x50 ?x51).
  ?x0 list:member (?x52 :dane ?x53 :tea ?x54).
  ?x0 list:member (?x55 ?x56 :birds ?x57 :pallmall).
  ?x0 list:member (:yellow ?x58 ?x59 ?x60 :dunhill).
  ?x0 list:member (?x61 ?x62 ?x63 :beer :bluemasters).
  ?x0 list:member (?x64 :german ?x65 ?x66 :prince).
  ?x0 list:member (?x67 ?x68 :fish ?x69 ?x70)} => {?x68 :eats :fish}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/einstein.n3>].

<#lemma7> a r:Inference; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) :sublist ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends))}; r:evidence (
  [ a r:Fact; r:gives {(((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends)) ((:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))) list:append ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}]
  [ a r:Fact; r:gives {(() ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends))) list:append ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends))}]);
  r:rule <#lemma9>.

<#lemma8> a r:Extraction; r:gives {{?x0 :pair (?x2 ?x1)} <= {?x0 :sublist (?x1 ?x2)}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/einstein.n3>].

<#lemma9> a r:Extraction; r:gives {{?x2 :sublist ?x4} <= {(?x0 ?x1) list:append ?x2.
  (?x3 ?x4) list:append ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/einstein.n3>].

#ENDS 0.770 [sec] TC=2 TP=4 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2004/04test/xanthippe.n3 --query http://eulersharp.sourceforge.net/2004/04test/xanthippeQ.n3

PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX : <http://eulersharp.sourceforge.net/2004/04test/xanthippe#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :Xanthippe a :MortalWoman.
  }].

<#lemma1> a r:Inference; r:gives {:Xanthippe a :MortalWoman}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {:Xanthippe a :MortalWoman}; r:evidence (
  <#lemma4>
  [ a r:Fact; r:gives {{:Socrates a :Man.
    :Xanthippe a :Woman} log:includes {:Xanthippe a :Woman}}]);
  r:rule <#lemma5>.

<#lemma3> a r:Extraction; r:gives {{?x0 a ?x1} => {?x0 a ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/xanthippeQ.n3>].

<#lemma4> a r:Extraction; r:gives {:he :says {:Socrates a :Man.
  :Xanthippe a :Woman}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/xanthippe.n3>].

<#lemma5> a r:Extraction; r:gives {{?x0 :says ?x1.
  ?x1 log:includes {?x2 a :Woman}} => {?x2 a :MortalWoman}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/xanthippe.n3>].

#ENDS 0.628 [sec] TC=2 TP=4 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3 --query http://www.w3.org/2000/10/swap/test/EricNeumann/exquery.n3

PREFIX : <http://example.com/exon/#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:gives {
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :RESULT.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :RESULT.
  }].

<#lemma1> a r:Inference; r:gives {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :RESULT}; r:evidence (
  [ a r:Fact; r:gives {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> a :Gene.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :chr "chrX".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e5.
    _:e5 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e6.
    _:e6 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :strand "+".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :startsAt "23897840".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :stopsAt "23897903".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :stopsAt "23902334".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :stopsAt "23902346".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :startsAt "23906218".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :stopsAt "23906347".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasCds _:e7.
    _:e7 :startsAt "23897840".
    _:e7 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :weThink {:life a :Great}.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasCds _:e8.
    _:e8 :startsAt "23897840".
    _:e8 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>}}]
  [ a r:Fact; r:gives {{<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> a :Gene.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :chr "chrX".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e5.
    _:e5 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e6.
    _:e6 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :strand "+".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :startsAt "23897840".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :stopsAt "23897903".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :stopsAt "23902334".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :stopsAt "23902346".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :startsAt "23906218".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :stopsAt "23906347".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasCds _:e7.
    _:e7 :startsAt "23897840".
    _:e7 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :weThink {:life a :Great}.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasCds _:e8.
    _:e8 :startsAt "23897840".
    _:e8 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>} log:includes {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript}}]
  [ a r:Fact; r:gives {{<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> a :Gene.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :chr "chrX".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e5.
    _:e5 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e6.
    _:e6 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :strand "+".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :startsAt "23897840".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :stopsAt "23897903".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :stopsAt "23902334".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :stopsAt "23902346".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :startsAt "23906218".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :stopsAt "23906347".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasCds _:e7.
    _:e7 :startsAt "23897840".
    _:e7 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :weThink {:life a :Great}.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasCds _:e8.
    _:e8 :startsAt "23897840".
    _:e8 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>} log:notIncludes {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>}}]);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :RESULT}; r:evidence (
  [ a r:Fact; r:gives {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> a :Gene.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :chr "chrX".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e5.
    _:e5 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e6.
    _:e6 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :strand "+".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :startsAt "23897840".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :stopsAt "23897903".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :stopsAt "23902334".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :stopsAt "23902346".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :startsAt "23906218".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :stopsAt "23906347".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasCds _:e7.
    _:e7 :startsAt "23897840".
    _:e7 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :weThink {:life a :Great}.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasCds _:e8.
    _:e8 :startsAt "23897840".
    _:e8 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>}}]
  [ a r:Fact; r:gives {{<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> a :Gene.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :chr "chrX".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e5.
    _:e5 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e6.
    _:e6 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :strand "+".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :startsAt "23897840".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :stopsAt "23897903".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :stopsAt "23902334".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :stopsAt "23902346".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :startsAt "23906218".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :stopsAt "23906347".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasCds _:e7.
    _:e7 :startsAt "23897840".
    _:e7 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :weThink {:life a :Great}.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasCds _:e8.
    _:e8 :startsAt "23897840".
    _:e8 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>} log:includes {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript}}]
  [ a r:Fact; r:gives {{<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> a :Gene.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :chr "chrX".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e5.
    _:e5 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :hasTxVariant _:e6.
    _:e6 :representedBy <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4> :strand "+".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :startsAt "23897840".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1> :stopsAt "23897903".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2> :stopsAt "23902334".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :startsAt "23902084".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3> :stopsAt "23902346".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> a :Exon.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :startsAt "23906218".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4> :stopsAt "23906347".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasCds _:e7.
    _:e7 :startsAt "23897840".
    _:e7 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :weThink {:life a :Great}.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> a :Transcript.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasCds _:e8.
    _:e8 :startsAt "23897840".
    _:e8 :stopsAt "23915296".
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e1>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>.
    <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e4>} log:notIncludes {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662> :hasExon <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2>}}]);
  r:rule <#lemma3>.

<#lemma3> a r:Extraction; r:gives {{<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics ?x0.
  ?x0 log:includes {?x1 a :Transcript.
    ?x1 :hasExon ?x2.
    ?x3 a :Transcript}.
  ?x0 log:notIncludes {?x3 :hasExon ?x2}} => {?x2 a :RESULT}};
  r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/EricNeumann/exquery.n3>].

#ENDS 0.756 [sec] TC=2 TP=4 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3 http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3 http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3 --query http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rulesQ.n3

PREFIX : <http://www.w3.org/2003/11/swrl#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX ns1: <http://owldl.com/ontologies/dl-safe.owl#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX var: <http://localhost/var#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX pred: <http://www.w3.org/2007/rif-builtin-predicate#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX swrlb: <http://www.w3.org/2003/11/swrlb#>
PREFIX string: <http://www.w3.org/2000/10/swap/string#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX fn: <http://www.w3.org/2005/xpath-functions#>
PREFIX func: <http://www.w3.org/2007/rif-builtin-function#>
PREFIX or: <http://eulergui.sf.net/owl-rule#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    {?t0 ns1:hates ?t1.
      ?t0 ns1:sibling ?t1.
      ?t0 a ns1:Grandchild} => {?t0 a ns1:BadChild}.
  }].

<#lemma1> a r:Inference; r:gives {{?t0 ns1:hates ?t1.
    ?t0 ns1:sibling ?t1.
    ?t0 a ns1:Grandchild} => {?t0 a ns1:BadChild}}; r:evidence (
  <#lemma2>
  <#lemma3>);
  r:rule <#lemma4>.

<#lemma2> a r:Inference; r:gives {ns1:BadChildRule ns1:ruleAntecedent {_:t0 ns1:hates _:t1.
    _:t0 ns1:sibling _:t1.
    _:t0 a ns1:Grandchild}}; r:evidence (
  <#lemma5>
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma3> a r:Inference; r:gives {ns1:BadChildRule ns1:ruleConsequent {_:t0 a ns1:BadChild}}; r:evidence (
  <#lemma8>
  <#lemma9>);
  r:rule <#lemma10>.

<#lemma4> a r:Extraction; r:gives {{?x0 ns1:ruleAntecedent ?x1.
  ?x0 ns1:ruleConsequent ?x2} => {?x1 => ?x2}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rulesQ.n3>].

<#lemma5> a r:Inference; r:gives {ns1:BadChildRule ns1:ruleAntecedent_tmp {ns1:x ns1:hates ns1:y.
    ns1:x ns1:sibling ns1:y.
    ns1:x a ns1:Grandchild}.
  {ns1:x ns1:hates ns1:y.
    ns1:x ns1:sibling ns1:y.
    ns1:x a ns1:Grandchild} ns1:substituteVariablesInFormula ((ns1:x _:t0) (ns1:y _:t1))}; r:evidence (
  <#lemma11>
  [ a r:Fact; r:gives {((<http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>) 2) e:findall (_:sk0 {ns1:BadChildRule ns1:n3_antecedent_has _:sk0} ({ns1:x ns1:sibling ns1:y} {ns1:x ns1:hates ns1:y} {ns1:x a ns1:Grandchild}))}]
  [ a r:Fact; r:gives {({ns1:x ns1:sibling ns1:y} {ns1:x ns1:hates ns1:y} {ns1:x a ns1:Grandchild}) log:conjunction {ns1:x ns1:hates ns1:y.
    ns1:x ns1:sibling ns1:y.
    ns1:x a ns1:Grandchild}}]
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma6> a r:Inference; r:gives {({ns1:x ns1:hates ns1:y.
    ns1:x ns1:sibling ns1:y.
    ns1:x a ns1:Grandchild} ((ns1:x _:t0) (ns1:y _:t1))) ns1:substitutedFormula {_:t0 ns1:hates _:t1.
    _:t0 ns1:sibling _:t1.
    _:t0 a ns1:Grandchild}}; r:evidence (
  <#lemma5>
  [ a r:Fact; r:gives {((<http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>) 1) e:findall (_:sk1 {({ns1:x ns1:hates ns1:y.
      ns1:x ns1:sibling ns1:y.
      ns1:x a ns1:Grandchild} ((ns1:x _:t0) (ns1:y _:t1))) ns1:substitutedTriplesInFormula _:sk1} ({_:t0 ns1:hates _:t1} {_:t0 ns1:sibling _:t1} {_:t0 a ns1:Grandchild}))}]
  [ a r:Fact; r:gives {({_:t0 ns1:hates _:t1} {_:t0 ns1:sibling _:t1} {_:t0 a ns1:Grandchild}) log:notEqualTo ()}]
  [ a r:Fact; r:gives {({_:t0 ns1:hates _:t1} {_:t0 ns1:sibling _:t1} {_:t0 a ns1:Grandchild}) log:conjunction {_:t0 ns1:hates _:t1.
    _:t0 ns1:sibling _:t1.
    _:t0 a ns1:Grandchild}}]);
  r:rule <#lemma14>.

<#lemma7> a r:Extraction; r:gives {{?x0 ns1:ruleAntecedent_tmp ?x1.
  (?x1 ?x2) ns1:substitutedFormula ?x3} => {?x0 ns1:ruleAntecedent ?x3}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>].

<#lemma8> a r:Inference; r:gives {ns1:BadChildRule ns1:ruleConsequent_tmp {ns1:x a ns1:BadChild}.
  {ns1:x a ns1:BadChild} ns1:substituteVariablesInFormula ((ns1:x _:t0) (ns1:y _:t1))}; r:evidence (
  <#lemma11>
  [ a r:Fact; r:gives {((<http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>) 1) e:findall (_:sk2 {ns1:BadChildRule ns1:n3_consequent_has _:sk2} ({ns1:x a ns1:BadChild}))}]
  [ a r:Fact; r:gives {({ns1:x a ns1:BadChild}) log:conjunction {ns1:x a ns1:BadChild}}]
  <#lemma12>);
  r:rule <#lemma15>.

<#lemma9> a r:Inference; r:gives {({ns1:x a ns1:BadChild} ((ns1:x _:t0) (ns1:y _:t1))) ns1:substitutedFormula {_:t0 a ns1:BadChild}}; r:evidence (
  <#lemma8>
  [ a r:Fact; r:gives {((<http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>) 1) e:findall (_:sk3 {({ns1:x a ns1:BadChild} ((ns1:x _:t0) (ns1:y _:t1))) ns1:substitutedTriplesInFormula _:sk3} ({_:t0 a ns1:BadChild}))}]
  [ a r:Fact; r:gives {({_:t0 a ns1:BadChild}) log:notEqualTo ()}]
  [ a r:Fact; r:gives {({_:t0 a ns1:BadChild}) log:conjunction {_:t0 a ns1:BadChild}}]);
  r:rule <#lemma14>.

<#lemma10> a r:Extraction; r:gives {{?x0 ns1:ruleConsequent_tmp ?x1.
  (?x1 ?x2) ns1:substitutedFormula ?x3} => {?x0 ns1:ruleConsequent ?x3}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>].

<#lemma11> a r:Extraction; r:gives {ns1:BadChildRule a :Imp};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3>].

<#lemma12> a r:Inference; r:gives {ns1:BadChildRule ns1:swrlToN3VariableSubtitution ((ns1:x _:t0) (ns1:y _:t1))}; r:evidence (
  <#lemma16>
  [ a r:Fact; r:gives {((<http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>) 1) e:findall ((_:sk4 _:sk5) {_:sk4 list:in (ns1:x ns1:y).
    _:sk5 e:tuple _:sk4} ((ns1:x _:t0) (ns1:y _:t1)))}]);
  r:rule <#lemma17>.

<#lemma13> a r:Extraction; r:gives {{?x0 a :Imp.
  (?x1 2) e:findall (?x2 {?x0 ns1:n3_antecedent_has ?x2} ?x3).
  ?x3 log:conjunction ?x4.
  ?x0 ns1:swrlToN3VariableSubtitution ?x5} => {?x0 ns1:ruleAntecedent_tmp ?x4.
  ?x4 ns1:substituteVariablesInFormula ?x5}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>].

<#lemma14> a r:Extraction; r:gives {{?x0 ns1:substituteVariablesInFormula ?x1.
  ?x2 e:findall (?x3 {(?x0 ?x1) ns1:substitutedTriplesInFormula ?x3} ?x4).
  ?x4 log:notEqualTo ().
  ?x4 log:conjunction ?x5} => {(?x0 ?x1) ns1:substitutedFormula ?x5}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3>].

<#lemma15> a r:Extraction; r:gives {{?x0 a :Imp.
  ?x1 e:findall (?x2 {?x0 ns1:n3_consequent_has ?x2} ?x3).
  ?x3 log:conjunction ?x4.
  ?x0 ns1:swrlToN3VariableSubtitution ?x5} => {?x0 ns1:ruleConsequent_tmp ?x4.
  ?x4 ns1:substituteVariablesInFormula ?x5}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>].

<#lemma16> a r:Inference; r:gives {ns1:BadChildRule ns1:distinctVariables (ns1:x ns1:y)}; r:evidence (
  <#lemma11>
  [ a r:Fact; r:gives {((<http://svn.code.sf.net/p/deductions/code/n3_new/test/dl-safe_small.owl.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/variableSubstitution.n3> <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>) 1) e:findall (_:sk6 {ns1:BadChildRule ns1:hasVariable _:sk6} (ns1:x ns1:y))}]
  [ a r:Fact; r:gives {(ns1:x ns1:y) e:distinct (ns1:x ns1:y)}]);
  r:rule <#lemma18>.

<#lemma17> a r:Extraction; r:gives {{?x0 ns1:distinctVariables ?x1.
  ?x2 e:findall ((?x3 ?x4) {?x3 list:in ?x1.
    ?x4 e:tuple ?x3} ?x5)} => {?x0 ns1:swrlToN3VariableSubtitution ?x5}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>].

<#lemma18> a r:Extraction; r:gives {{?x0 a :Imp.
  ?x1 e:findall (?x2 {?x0 ns1:hasVariable ?x2} ?x3).
  ?x3 e:distinct ?x4} => {?x0 ns1:distinctVariables ?x4}};
  r:because [ a r:Parsing; r:source <http://svn.code.sf.net/p/deductions/code/n3_new/swrl-n3-rules.n3>].

#ENDS 1.463 [sec] TC=57 TP=554 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/biP.n3 --query http://eulersharp.sourceforge.net/2007/07test/biQ.n3

PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX string: <http://www.w3.org/2000/10/swap/string#>
PREFIX time: <http://www.w3.org/2000/10/swap/time#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX med: <http://eulersharp.sourceforge.net/2006/02swap/med#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>
PREFIX : <http://eulersharp.sourceforge.net/2007/07test#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>
PREFIX fl: <http://eulersharp.sourceforge.net/2003/03swap/fl-rules#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:component <#lemma11>;
  r:component <#lemma12>;
  r:component <#lemma13>;
  r:component <#lemma14>;
  r:component <#lemma15>;
  r:component <#lemma16>;
  r:component <#lemma17>;
  r:component <#lemma18>;
  r:component <#lemma19>;
  r:component <#lemma20>;
  r:component <#lemma21>;
  r:component <#lemma22>;
  r:component <#lemma23>;
  r:component <#lemma24>;
  r:component <#lemma25>;
  r:component <#lemma26>;
  r:component <#lemma27>;
  r:component <#lemma28>;
  r:component <#lemma29>;
  r:component <#lemma30>;
  r:component <#lemma31>;
  r:component <#lemma32>;
  r:component <#lemma33>;
  r:component <#lemma34>;
  r:component <#lemma35>;
  r:component <#lemma36>;
  r:component <#lemma37>;
  r:component <#lemma38>;
  r:component <#lemma39>;
  r:component <#lemma40>;
  r:component <#lemma41>;
  r:component <#lemma42>;
  r:component <#lemma43>;
  r:component <#lemma44>;
  r:component <#lemma45>;
  r:component <#lemma46>;
  r:component <#lemma47>;
  r:component <#lemma48>;
  r:component <#lemma49>;
  r:component <#lemma50>;
  r:component <#lemma51>;
  r:component <#lemma52>;
  r:component <#lemma53>;
  r:component <#lemma54>;
  r:component <#lemma55>;
  r:component <#lemma56>;
  r:component <#lemma57>;
  r:component <#lemma58>;
  r:component <#lemma59>;
  r:component <#lemma60>;
  r:component <#lemma61>;
  r:component <#lemma62>;
  r:component <#lemma63>;
  r:component <#lemma64>;
  r:component <#lemma65>;
  r:component <#lemma66>;
  r:component <#lemma67>;
  r:component <#lemma68>;
  r:component <#lemma69>;
  r:component <#lemma70>;
  r:component <#lemma71>;
  r:component <#lemma72>;
  r:component <#lemma73>;
  r:component <#lemma74>;
  r:component <#lemma75>;
  r:component <#lemma76>;
  r:component <#lemma77>;
  r:component <#lemma78>;
  r:component <#lemma79>;
  r:component <#lemma80>;
  r:component <#lemma81>;
  r:component <#lemma82>;
  r:component <#lemma83>;
  r:component <#lemma84>;
  r:component <#lemma85>;
  r:component <#lemma86>;
  r:component <#lemma87>;
  r:component <#lemma88>;
  r:component <#lemma89>;
  r:component <#lemma90>;
  r:component <#lemma91>;
  r:component <#lemma92>;
  r:component <#lemma93>;
  r:component <#lemma94>;
  r:component <#lemma95>;
  r:component <#lemma96>;
  r:component <#lemma97>;
  r:component <#lemma98>;
  r:component <#lemma99>;
  r:component <#lemma100>;
  r:component <#lemma101>;
  r:component <#lemma102>;
  r:component <#lemma103>;
  r:component <#lemma104>;
  r:component <#lemma105>;
  r:component <#lemma106>;
  r:component <#lemma107>;
  r:component <#lemma108>;
  r:component <#lemma109>;
  r:component <#lemma110>;
  r:component <#lemma111>;
  r:component <#lemma112>;
  r:component <#lemma113>;
  r:component <#lemma114>;
  r:component <#lemma115>;
  r:component <#lemma116>;
  r:component <#lemma117>;
  r:component <#lemma118>;
  r:component <#lemma119>;
  r:component <#lemma120>;
  r:component <#lemma121>;
  r:component <#lemma122>;
  r:component <#lemma123>;
  r:component <#lemma124>;
  r:gives {
    {{3 :circleArea ?U0.
        ?U0 math:greaterThan 28.27 .
        ?U0 math:lessThan 28.28} => {:ca1 :result true}} a :PASS.
    {{5 :whenGreater ?U1.
        ?U1 log:equalTo 3} => {:wg1 :result true}} a :PASS.
    {{("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"} => {:ef4 :result true}} a :PASS.
    {{({:a :b :c.
          :d :e :f} true) e:graphDifference {:a :b :c.
          :d :e :f}} => {:egd1 :result true}} a :PASS.
    {{(true {:d :e :f}) e:graphDifference true} => {:egd2 :result true}} a :PASS.
    {{({:a :b :c.
          :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} => {:egd3 :result true}} a :PASS.
    {{({:a :b :c.
          :d :e :f.
          :g :h :i} {?U2 :e :f}) e:graphDifference {:a :b :c.
          :g :h :i}} => {:egd4 :result true}} a :PASS.
    {{({:a :b :c} {:a :b :c.
          :u :v :w.
          :x :y :z}) e:graphDifference true} => {:egd5 :result true}} a :PASS.
    {{(true) e:graphIntersection true} => {:egi1 :result true}} a :PASS.
    {{(true {:d :e :f}) e:graphIntersection true} => {:egi2 :result true}} a :PASS.
    {{({:a :b :c.
          :d :e :f.
          :g :h :i} true) e:graphIntersection true} => {:egi3 :result true}} a :PASS.
    {{({:a :b :c.
          :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} => {:egi4 :result true}} a :PASS.
    {{({:a :b :c.
          :d :e :f.
          :g :h :i} {:g :h :i.
          ?U3 :e :f} {?U3 :e :f.
          :g :h :i}) e:graphIntersection {?U3 :e :f.
          :g :h :i}} => {:egi5 :result true}} a :PASS.
    {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} => {:el1 :result true}} a :PASS.
    {{(8 5 6 7 9 4) e:max 9} => {:em1 :result true}} a :PASS.
    {{(8 5 6 7 9 4) e:min 4} => {:em2 :result true}} a :PASS.
    {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} => {:er1 :result true}} a :PASS.
    {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} => {:es1 :result true}} a :PASS.
    {{(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)} => {:es2 :result true}} a :PASS.
    {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} => {:ew1 :result true}} a :PASS.
    {{"Hello World!" e:wwwFormEncode "Hello+World%21"} => {:ew2 :result true}} a :PASS.
    {{(-4) prolog:abs 4} => {:prologa2 :result true}} a :PASS.
    {{((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true} => {:prologa1 :result true}} a :PASS.
    {{(6 8) prolog:arithmetic_less_than_or_equal true} => {:prologaltoe1 :result true}} a :PASS.
    {{({:s :q :o}) prolog:assertz true.
        :s :q :o} => {:prologaz1 :result true}} a :PASS.
    {{("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true} => {:prologac1 :result true}} a :PASS.
    {{("123"^^prolog:atom 123) prolog:atom_number true} => {:prologan1 :result true}} a :PASS.
    {{(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true} => {:prologalc1 :result true}} a :PASS.
    {{((:a :b :c) :a (:b :c)) prolog:C true} => {:prologC1 :result true}} a :PASS.
    {{({:prologaltoe1 :result true}) prolog:call true} => {:prologc1 :result true}} a :PASS.
    {{({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true} => {:prologc2 :result true}} a :PASS.
    {{() prolog:cut true} => {:prologc3 :result true}} a :PASS.
    {{(?U4 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
        ?U5 math:equalTo 0 .
        (?U4 ?U5) prolog:date_time_stamp true} => {:prologdts1 :result true}} a :PASS.
    {{({"fail"^^prolog:atom}) prolog:not_provable true} => {:prologf1 :result true}} a :PASS.
    {{(9 4) prolog:integer_quotient 2} => {:prologiq1 :result true}} a :PASS.
    {{(8 4) prolog:max 8} => {:prologm1 :result true}} a :PASS.
    {{(8 4) prolog:min 4} => {:prologm2 :result true}} a :PASS.
    {{(1) prolog:minus -1} => {:prologm3 :result true}} a :PASS.
    {{(:a :b) prolog:not_unifiable true} => {:prolognu1 :result true}} a :PASS.
    {{(1) prolog:plus 1} => {:prologp1 :result true}} a :PASS.
    {{(1 1) prolog:plus 2} => {:prologp2 :result true}} a :PASS.
    {{(9 4) prolog:product 36} => {:prologp3 :result true}} a :PASS.
    {{({:s :q :o}) prolog:retract true.
        ({({:s :q :o}) prolog:call true}) prolog:not_provable true} => {:prologr1 :result true}} a :PASS.
    {{((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true} => {:prologs1 :result true}} a :PASS.
    {{(?U6 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
        (0.0 ?U6 "UTC"^^prolog:atom) prolog:stamp_date_time true} => {:prologsdt1 :result true}} a :PASS.
    {{("uv" 55) prolog:term_greater_than true} => {:prologtgt1 :result true}} a :PASS.
    {{true.
        :a :b :d} => {:prologt1 :result true}} a :PASS.
    {{(:b :b) prolog:unify true} => {:prologu1 :result true}} a :PASS.
    {{({:s :p :o} (:p :s :o)) prolog:univ true} => {:prologu2 :result true}} a :PASS.
    {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} => {:lista1 :result true}} a :PASS.
    {{(:a :b :c) list:first :a} => {:listf1 :result true}} a :PASS.
    {{:c list:in (:a :b :c)} => {:listi1 :result true}} a :PASS.
    {{(:a :b :c) list:last :c} => {:listl1 :result true}} a :PASS.
    {{(:a :b :c :d) list:member :b} => {:listm1 :result true}} a :PASS.
    {{(:a :b :c) list:rest (:b :c)} => {:listr1 :result true}} a :PASS.
    {{(true) log:conjunction true} => {:logc1 :result true}} a :PASS.
    {{(true {:u :v :w} {:j :k :l.
          :x :y :z}) log:conjunction {:j :k :l.
          :u :v :w.
          :x :y :z}} => {:logc2 :result true}} a :PASS.
    {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} => {:logc3 :result true}} a :PASS.
    {{(:a ?U7) log:equalTo (?U8 :b)} => {:loge1 :result true}} a :PASS.
    {{($ :u :v $) log:equalTo ($ :u :v $)} => {:loge2 :result true}} a :PASS.
    {{{:a :b :c} log:equalTo {:a :b :c}} => {:loged0 :result true}} a :PASS.
    {{{:a :b _:qe1} log:equalTo {:a :b ?U9}} => {:loged3 :result true}} a :PASS.
    {{:abc :graph ?U10.
        ?U10 log:equalTo {:a :b :c}} => {:logeg0 :result true}} a :PASS.
    {{:ab_c :graph ?U11.
        ?U11 log:equalTo {:a :b ?U12}} => {:logeg3 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U13.
        ?U13 log:equalTo {:a :b :c}} => {:loges0 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U14.
        ?U14 log:equalTo {:a :b ?U15}} => {:loges3 :result true}} a :PASS.
    {{{:b :a :c.
          :e :d :f.
          :h :g :i.
          :k :j :l} log:includes {:k :j :l.
          ?U16 :d ?U17}} => {:logi1 :result true}} a :PASS.
    {{:ng1 :namedGraph ?U18.
        ?U18 log:includes {:k :j :l.
          ?U19 :d ?U20}} => {:logi2 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?U21.
        ?U21 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} => {:logi3 :result true}} a :PASS.
    {{{:a :b :c} log:includes {:a :b :c}} => {:logid0 :result true}} a :PASS.
    {{{:a :b :c} log:includes {:a :b :c}} => {:logid1 :result true}} a :PASS.
    {{{:a :b _:qe1} log:includes {:a :b ?U22}} => {:logid3 :result true}} a :PASS.
    {{:abc :graph ?U23.
        ?U23 log:includes {:a :b :c}} => {:logig0 :result true}} a :PASS.
    {{:abc :graph ?U23.
        ?U23 log:includes {:a :b :c}} => {:logig1 :result true}} a :PASS.
    {{:ab_c :graph ?U24.
        ?U24 log:includes {:a :b ?U25}} => {:logig3 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U26.
        ?U26 log:includes {:a :b :c}} => {:logis0 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U26.
        ?U26 log:includes {:a :b :c}} => {:logis1 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U27.
        ?U27 log:includes {:a :b ?U28}} => {:logis3 :result true}} a :PASS.
    {{:a log:notEqualTo :b} => {:logne1 :result true}} a :PASS.
    {{{:a :b :c} log:notEqualTo {:a :b _:qe1}} => {:logned1 :result true}} a :PASS.
    {{{:a :b _:qe1} log:notEqualTo {:a :b :c}} => {:logned2 :result true}} a :PASS.
    {{:abc :graph ?U29.
        ?U29 log:notEqualTo {:a :b _:qe1}} => {:logneg1 :result true}} a :PASS.
    {{:ab_c :graph ?U30.
        ?U30 log:notEqualTo {:a :b :c}} => {:logneg2 :result true}} a :PASS.
    {{{:b :a :c.
          :e :d :f.
          :h :g :i} log:notIncludes {:e :d :f.
          :b :e :c}} => {:logni1 :result true}} a :PASS.
    {{:ng2 :namedGraph ?U31.
        ?U31 log:notIncludes {:e :d :f.
          :b :e :c}} => {:logni2 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?U32.
        ?U32 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} => {:logni3 :result true}} a :PASS.
    {{{:a :b _:qe1} log:notIncludes {:a :b :c}} => {:lognid2 :result true}} a :PASS.
    {{:ab_c :graph ?U33.
        ?U33 log:notIncludes {:a :b :c}} => {:lognig2 :result true}} a :PASS.
    {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U34.
        ?U34 log:notIncludes {:a :b :c}} => {:lognis2 :result true}} a :PASS.
    {{med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} => {:logu1 :result true}} a :PASS.
    {{:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} => {:logu2 :result true}} a :PASS.
    {{(1 1) math:difference 0} => {:mathd1 :result true}} a :PASS.
    {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0} => {:mathd2 :result true}} a :PASS.
    {{(2 ?U35) math:exponentiation 8.0 .
        (4.0 ?U35) math:product 12.0} => {:mathe1 :result true}} a :PASS.
    {{2 math:greaterThan 1} => {:mathg1 :result true}} a :PASS.
    {{"02" math:greaterThan "1"} => {:mathg2 :result true}} a :PASS.
    {{(:u :v :u) math:memberCount 3} => {:mathm1 :result true}} a :PASS.
    {{{:s :p :o1.
          :s :p :o2} math:memberCount 2} => {:mathm2 :result true}} a :PASS.
    {{($ :u :v $) math:memberCount 2} => {:mathm3 :result true}} a :PASS.
    {{7 math:notLessThan 5} => {:mathnl1 :result true}} a :PASS.
    {{(1 1) math:sum 2} => {:maths1 :result true}} a :PASS.
    {{("1" "1") math:sum 2} => {:maths2 :result true}} a :PASS.
    {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} => {:maths3 :result true}} a :PASS.
    {{("P1D"^^xsd:duration) math:sum 86400.0} => {:maths4 :result true}} a :PASS.
    {{(:f :g) rdf:first :f} => {:rdff1 :result true}} a :PASS.
    {{(:f :g) rdf:rest (:g)} => {:rdfr1 :result true}} a :PASS.
    {{("eul" "er") string:concatenation "euler"} => {:strc1 :result true}} a :PASS.
    {{("€" "Ø"@en-us) string:concatenation "€Ø"} => {:strc2 :result true}} a :PASS.
    {{("test " "is \"ok\"") string:concatenation "test is \"ok\""} => {:strc3 :result true}} a :PASS.
    {{("test " "is \"ok\"") string:concatenation ?U36.
        (?U36 " again") string:concatenation "test is \"ok\" again"} => {:strc4 :result true}} a :PASS.
    {{"Rob Smith" string:contains "Smith"} => {:strcn1 :result true}} a :PASS.
    {{"Rob Smith"@en string:contains "Smith"@fr} => {:strcn2 :result true}} a :PASS.
    {{"Tim" string:containsIgnoringCase "IM"} => {:strci1 :result true}} a :PASS.
    {{"abracadabra" string:matches "(a|b|r|c|d)+"} => {:strm1 :result true}} a :PASS.
    {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"} => {:strs1 :result true}} a :PASS.
    {{("{x" "{(.)") string:scrape "x"} => {:strs2 :result true}} a :PASS.
    {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")} => {:strs3 :result true}} a :PASS.
    {{"euler" string:startsWith "eu"} => {:strs4 :result true}} a :PASS.
    {{"2006-12-14"^^xsd:date time:day "14"} => {:timed1 :result true}} a :PASS.
    {{"2006-12-14"^^xsd:date time:month "12"} => {:timem1 :result true}} a :PASS.
    {{"2006-12-14"^^xsd:date time:year "2006"} => {:timey1 :result true}} a :PASS.
    {{?U37 e:findall (?U38 {:s :p ?U38} ({:s1 :p1 :o1} {:s2 :p2 :o2.
          :s3 :p3 :o3}))} => {:ef1 :result true}} a :PASS.
    {{?U39 e:findall (?U40 {?U40 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) ?U41).
        ?U39 e:findall (?U40 {?U40 a :Female} ?U41 ?U42).
        ?U39 e:findall (?U40 {?U40 a :Human} ?U42 (:Dan :Tim))} => {:ef3 :result true}} a :PASS.
    {{:a :b :d.
        ?U43 e:optional {:g :h :i}} => {:eo1 :result true}} a :PASS.
  }].

<#lemma1> a r:Inference; r:gives {{{3 :circleArea ?U0.
      ?U0 math:greaterThan 28.27 .
      ?U0 math:lessThan 28.28} => {:ca1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{3 :circleArea ?U0.
    ?U0 math:greaterThan 28.27 .
    ?U0 math:lessThan 28.28} => {:ca1 :result true}}]
  <#lemma125>
  [ a r:Fact; r:gives {{3 :circleArea _:sk0.
    _:sk0 math:greaterThan 28.27 .
    _:sk0 math:lessThan 28.28} e:labelvars {3 :circleArea _:sk0.
    _:sk0 math:greaterThan 28.27 .
    _:sk0 math:lessThan 28.28}}]);
  r:rule <#lemma126>.

<#lemma2> a r:Inference; r:gives {{{5 :whenGreater ?U1.
      ?U1 log:equalTo 3} => {:wg1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{5 :whenGreater ?U1.
    ?U1 log:equalTo 3} => {:wg1 :result true}}]
  <#lemma127>
  [ a r:Fact; r:gives {{5 :whenGreater _:sk1.
    _:sk1 log:equalTo 3} e:labelvars {5 :whenGreater _:sk1.
    _:sk1 log:equalTo 3}}]);
  r:rule <#lemma126>.

<#lemma3> a r:Inference; r:gives {{{("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"} => {:ef4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"} => {:ef4 :result true}}]
  <#lemma128>
  [ a r:Fact; r:gives {{("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"} e:labelvars {("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"}}]);
  r:rule <#lemma126>.

<#lemma4> a r:Inference; r:gives {{{({:a :b :c.
        :d :e :f} true) e:graphDifference {:a :b :c.
        :d :e :f}} => {:egd1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f} true) e:graphDifference {:a :b :c.
      :d :e :f}} => {:egd1 :result true}}]
  <#lemma129>
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f} true) e:graphDifference {:a :b :c.
      :d :e :f}} e:labelvars {({:a :b :c.
      :d :e :f} true) e:graphDifference {:a :b :c.
      :d :e :f}}}]);
  r:rule <#lemma126>.

<#lemma5> a r:Inference; r:gives {{{(true {:d :e :f}) e:graphDifference true} => {:egd2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true {:d :e :f}) e:graphDifference true} => {:egd2 :result true}}]
  <#lemma130>
  [ a r:Fact; r:gives {{(true {:d :e :f}) e:graphDifference true} e:labelvars {(true {:d :e :f}) e:graphDifference true}}]);
  r:rule <#lemma126>.

<#lemma6> a r:Inference; r:gives {{{({:a :b :c.
        :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} => {:egd3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} => {:egd3 :result true}}]
  <#lemma131>
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} e:labelvars {({:a :b :c.
      :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma7> a r:Inference; r:gives {{{({:a :b :c.
        :d :e :f.
        :g :h :i} {?U2 :e :f}) e:graphDifference {:a :b :c.
        :g :h :i}} => {:egd4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f.
      :g :h :i} {?U2 :e :f}) e:graphDifference {:a :b :c.
      :g :h :i}} => {:egd4 :result true}}]
  <#lemma132>
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f.
      :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c.
      :g :h :i}} e:labelvars {({:a :b :c.
      :d :e :f.
      :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c.
      :g :h :i}}}]);
  r:rule <#lemma126>.

<#lemma8> a r:Inference; r:gives {{{({:a :b :c} {:a :b :c.
        :u :v :w.
        :x :y :z}) e:graphDifference true} => {:egd5 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c} {:a :b :c.
      :u :v :w.
      :x :y :z}) e:graphDifference true} => {:egd5 :result true}}]
  <#lemma133>
  [ a r:Fact; r:gives {{({:a :b :c} {:a :b :c.
      :u :v :w.
      :x :y :z}) e:graphDifference true} e:labelvars {({:a :b :c} {:a :b :c.
      :u :v :w.
      :x :y :z}) e:graphDifference true}}]);
  r:rule <#lemma126>.

<#lemma9> a r:Inference; r:gives {{{(true) e:graphIntersection true} => {:egi1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true) e:graphIntersection true} => {:egi1 :result true}}]
  <#lemma134>
  [ a r:Fact; r:gives {{(true) e:graphIntersection true} e:labelvars {(true) e:graphIntersection true}}]);
  r:rule <#lemma126>.

<#lemma10> a r:Inference; r:gives {{{(true {:d :e :f}) e:graphIntersection true} => {:egi2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true {:d :e :f}) e:graphIntersection true} => {:egi2 :result true}}]
  <#lemma135>
  [ a r:Fact; r:gives {{(true {:d :e :f}) e:graphIntersection true} e:labelvars {(true {:d :e :f}) e:graphIntersection true}}]);
  r:rule <#lemma126>.

<#lemma11> a r:Inference; r:gives {{{({:a :b :c.
        :d :e :f.
        :g :h :i} true) e:graphIntersection true} => {:egi3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f.
      :g :h :i} true) e:graphIntersection true} => {:egi3 :result true}}]
  <#lemma136>
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f.
      :g :h :i} true) e:graphIntersection true} e:labelvars {({:a :b :c.
      :d :e :f.
      :g :h :i} true) e:graphIntersection true}}]);
  r:rule <#lemma126>.

<#lemma12> a r:Inference; r:gives {{{({:a :b :c.
        :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} => {:egi4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} => {:egi4 :result true}}]
  <#lemma137>
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} e:labelvars {({:a :b :c.
      :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}}}]);
  r:rule <#lemma126>.

<#lemma13> a r:Inference; r:gives {{{({:a :b :c.
        :d :e :f.
        :g :h :i} {:g :h :i.
        ?U3 :e :f} {?U3 :e :f.
        :g :h :i}) e:graphIntersection {?U3 :e :f.
        :g :h :i}} => {:egi5 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f.
      :g :h :i} {:g :h :i.
      ?U3 :e :f} {?U3 :e :f.
      :g :h :i}) e:graphIntersection {?U3 :e :f.
      :g :h :i}} => {:egi5 :result true}}]
  <#lemma138>
  [ a r:Fact; r:gives {{({:a :b :c.
      :d :e :f.
      :g :h :i} {:g :h :i.
      _:sk3 :e :f} {_:sk3 :e :f.
      :g :h :i}) e:graphIntersection {_:sk3 :e :f.
      :g :h :i}} e:labelvars {({:a :b :c.
      :d :e :f.
      :g :h :i} {:g :h :i.
      _:sk3 :e :f} {_:sk3 :e :f.
      :g :h :i}) e:graphIntersection {_:sk3 :e :f.
      :g :h :i}}}]);
  r:rule <#lemma126>.

<#lemma14> a r:Inference; r:gives {{{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} => {:el1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} => {:el1 :result true}}]
  <#lemma139>
  [ a r:Fact; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} e:labelvars {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6}}]);
  r:rule <#lemma126>.

<#lemma15> a r:Inference; r:gives {{{(8 5 6 7 9 4) e:max 9} => {:em1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(8 5 6 7 9 4) e:max 9} => {:em1 :result true}}]
  <#lemma140>
  [ a r:Fact; r:gives {{(8 5 6 7 9 4) e:max 9} e:labelvars {(8 5 6 7 9 4) e:max 9}}]);
  r:rule <#lemma126>.

<#lemma16> a r:Inference; r:gives {{{(8 5 6 7 9 4) e:min 4} => {:em2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(8 5 6 7 9 4) e:min 4} => {:em2 :result true}}]
  <#lemma141>
  [ a r:Fact; r:gives {{(8 5 6 7 9 4) e:min 4} e:labelvars {(8 5 6 7 9 4) e:min 4}}]);
  r:rule <#lemma126>.

<#lemma17> a r:Inference; r:gives {{{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} => {:er1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} => {:er1 :result true}}]
  <#lemma142>
  [ a r:Fact; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} e:labelvars {((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))}}]);
  r:rule <#lemma126>.

<#lemma18> a r:Inference; r:gives {{{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} => {:es1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} => {:es1 :result true}}]
  <#lemma143>
  [ a r:Fact; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} e:labelvars {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))}}]);
  r:rule <#lemma126>.

<#lemma19> a r:Inference; r:gives {{{(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)} => {:es2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)} => {:es2 :result true}}]
  <#lemma144>
  [ a r:Fact; r:gives {{(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)} e:labelvars {(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)}}]);
  r:rule <#lemma126>.

<#lemma20> a r:Inference; r:gives {{{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} => {:ew1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} => {:ew1 :result true}}]
  <#lemma145>
  [ a r:Fact; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} e:labelvars {"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"}}]);
  r:rule <#lemma126>.

<#lemma21> a r:Inference; r:gives {{{"Hello World!" e:wwwFormEncode "Hello+World%21"} => {:ew2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"Hello World!" e:wwwFormEncode "Hello+World%21"} => {:ew2 :result true}}]
  <#lemma146>
  [ a r:Fact; r:gives {{"Hello World!" e:wwwFormEncode "Hello+World%21"} e:labelvars {"Hello World!" e:wwwFormEncode "Hello+World%21"}}]);
  r:rule <#lemma126>.

<#lemma22> a r:Inference; r:gives {{{(-4) prolog:abs 4} => {:prologa2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(-4) prolog:abs 4} => {:prologa2 :result true}}]
  <#lemma147>
  [ a r:Fact; r:gives {{(-4) prolog:abs 4} e:labelvars {(-4) prolog:abs 4}}]);
  r:rule <#lemma126>.

<#lemma23> a r:Inference; r:gives {{{((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true} => {:prologa1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true} => {:prologa1 :result true}}]
  <#lemma148>
  [ a r:Fact; r:gives {{((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true} e:labelvars {((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true}}]);
  r:rule <#lemma126>.

<#lemma24> a r:Inference; r:gives {{{(6 8) prolog:arithmetic_less_than_or_equal true} => {:prologaltoe1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(6 8) prolog:arithmetic_less_than_or_equal true} => {:prologaltoe1 :result true}}]
  <#lemma149>
  [ a r:Fact; r:gives {{(6 8) prolog:arithmetic_less_than_or_equal true} e:labelvars {(6 8) prolog:arithmetic_less_than_or_equal true}}]);
  r:rule <#lemma126>.

<#lemma25> a r:Inference; r:gives {{{({:s :q :o}) prolog:assertz true.
      :s :q :o} => {:prologaz1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:s :q :o}) prolog:assertz true.
    :s :q :o} => {:prologaz1 :result true}}]
  <#lemma150>
  [ a r:Fact; r:gives {{({:s :q :o}) prolog:assertz true.
    :s :q :o} e:labelvars {({:s :q :o}) prolog:assertz true.
    :s :q :o}}]);
  r:rule <#lemma126>.

<#lemma26> a r:Inference; r:gives {{{("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true} => {:prologac1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true} => {:prologac1 :result true}}]
  <#lemma151>
  [ a r:Fact; r:gives {{("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true} e:labelvars {("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true}}]);
  r:rule <#lemma126>.

<#lemma27> a r:Inference; r:gives {{{("123"^^prolog:atom 123) prolog:atom_number true} => {:prologan1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("123"^^prolog:atom 123) prolog:atom_number true} => {:prologan1 :result true}}]
  <#lemma152>
  [ a r:Fact; r:gives {{("123"^^prolog:atom 123) prolog:atom_number true} e:labelvars {("123"^^prolog:atom 123) prolog:atom_number true}}]);
  r:rule <#lemma126>.

<#lemma28> a r:Inference; r:gives {{{(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true} => {:prologalc1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true} => {:prologalc1 :result true}}]
  <#lemma153>
  [ a r:Fact; r:gives {{(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true} e:labelvars {(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true}}]);
  r:rule <#lemma126>.

<#lemma29> a r:Inference; r:gives {{{((:a :b :c) :a (:b :c)) prolog:C true} => {:prologC1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c) :a (:b :c)) prolog:C true} => {:prologC1 :result true}}]
  <#lemma154>
  [ a r:Fact; r:gives {{((:a :b :c) :a (:b :c)) prolog:C true} e:labelvars {((:a :b :c) :a (:b :c)) prolog:C true}}]);
  r:rule <#lemma126>.

<#lemma30> a r:Inference; r:gives {{{({:prologaltoe1 :result true}) prolog:call true} => {:prologc1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:prologaltoe1 :result true}) prolog:call true} => {:prologc1 :result true}}]
  <#lemma155>
  [ a r:Fact; r:gives {{({:prologaltoe1 :result true}) prolog:call true} e:labelvars {({:prologaltoe1 :result true}) prolog:call true}}]);
  r:rule <#lemma126>.

<#lemma31> a r:Inference; r:gives {{{({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true} => {:prologc2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true} => {:prologc2 :result true}}]
  <#lemma156>
  [ a r:Fact; r:gives {{({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true} e:labelvars {({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true}}]);
  r:rule <#lemma126>.

<#lemma32> a r:Inference; r:gives {{{() prolog:cut true} => {:prologc3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{() prolog:cut true} => {:prologc3 :result true}}]
  <#lemma157>
  [ a r:Fact; r:gives {{() prolog:cut true} e:labelvars {() prolog:cut true}}]);
  r:rule <#lemma126>.

<#lemma33> a r:Inference; r:gives {{{(?U4 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
      ?U5 math:equalTo 0 .
      (?U4 ?U5) prolog:date_time_stamp true} => {:prologdts1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(?U4 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
    ?U5 math:equalTo 0 .
    (?U4 ?U5) prolog:date_time_stamp true} => {:prologdts1 :result true}}]
  <#lemma158>
  [ a r:Fact; r:gives {{(_:sk4 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
    _:sk5 math:equalTo 0 .
    (_:sk4 _:sk5) prolog:date_time_stamp true} e:labelvars {(_:sk4 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
    _:sk5 math:equalTo 0 .
    (_:sk4 _:sk5) prolog:date_time_stamp true}}]);
  r:rule <#lemma126>.

<#lemma34> a r:Inference; r:gives {{{({"fail"^^prolog:atom}) prolog:not_provable true} => {:prologf1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({"fail"^^prolog:atom}) prolog:not_provable true} => {:prologf1 :result true}}]
  <#lemma159>
  [ a r:Fact; r:gives {{({"fail"^^prolog:atom}) prolog:not_provable true} e:labelvars {({"fail"^^prolog:atom}) prolog:not_provable true}}]);
  r:rule <#lemma126>.

<#lemma35> a r:Inference; r:gives {{{(9 4) prolog:integer_quotient 2} => {:prologiq1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(9 4) prolog:integer_quotient 2} => {:prologiq1 :result true}}]
  <#lemma160>
  [ a r:Fact; r:gives {{(9 4) prolog:integer_quotient 2} e:labelvars {(9 4) prolog:integer_quotient 2}}]);
  r:rule <#lemma126>.

<#lemma36> a r:Inference; r:gives {{{(8 4) prolog:max 8} => {:prologm1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(8 4) prolog:max 8} => {:prologm1 :result true}}]
  <#lemma161>
  [ a r:Fact; r:gives {{(8 4) prolog:max 8} e:labelvars {(8 4) prolog:max 8}}]);
  r:rule <#lemma126>.

<#lemma37> a r:Inference; r:gives {{{(8 4) prolog:min 4} => {:prologm2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(8 4) prolog:min 4} => {:prologm2 :result true}}]
  <#lemma162>
  [ a r:Fact; r:gives {{(8 4) prolog:min 4} e:labelvars {(8 4) prolog:min 4}}]);
  r:rule <#lemma126>.

<#lemma38> a r:Inference; r:gives {{{(1) prolog:minus -1} => {:prologm3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1) prolog:minus -1} => {:prologm3 :result true}}]
  <#lemma163>
  [ a r:Fact; r:gives {{(1) prolog:minus -1} e:labelvars {(1) prolog:minus -1}}]);
  r:rule <#lemma126>.

<#lemma39> a r:Inference; r:gives {{{(:a :b) prolog:not_unifiable true} => {:prolognu1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a :b) prolog:not_unifiable true} => {:prolognu1 :result true}}]
  <#lemma164>
  [ a r:Fact; r:gives {{(:a :b) prolog:not_unifiable true} e:labelvars {(:a :b) prolog:not_unifiable true}}]);
  r:rule <#lemma126>.

<#lemma40> a r:Inference; r:gives {{{(1) prolog:plus 1} => {:prologp1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1) prolog:plus 1} => {:prologp1 :result true}}]
  <#lemma165>
  [ a r:Fact; r:gives {{(1) prolog:plus 1} e:labelvars {(1) prolog:plus 1}}]);
  r:rule <#lemma126>.

<#lemma41> a r:Inference; r:gives {{{(1 1) prolog:plus 2} => {:prologp2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1 1) prolog:plus 2} => {:prologp2 :result true}}]
  <#lemma166>
  [ a r:Fact; r:gives {{(1 1) prolog:plus 2} e:labelvars {(1 1) prolog:plus 2}}]);
  r:rule <#lemma126>.

<#lemma42> a r:Inference; r:gives {{{(9 4) prolog:product 36} => {:prologp3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(9 4) prolog:product 36} => {:prologp3 :result true}}]
  <#lemma167>
  [ a r:Fact; r:gives {{(9 4) prolog:product 36} e:labelvars {(9 4) prolog:product 36}}]);
  r:rule <#lemma126>.

<#lemma43> a r:Inference; r:gives {{{({:s :q :o}) prolog:retract true.
      ({({:s :q :o}) prolog:call true}) prolog:not_provable true} => {:prologr1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:s :q :o}) prolog:retract true.
    ({({:s :q :o}) prolog:call true}) prolog:not_provable true} => {:prologr1 :result true}}]
  <#lemma168>
  [ a r:Fact; r:gives {{({:s :q :o}) prolog:retract true.
    ({({:s :q :o}) prolog:call true}) prolog:not_provable true} e:labelvars {({:s :q :o}) prolog:retract true.
    ({({:s :q :o}) prolog:call true}) prolog:not_provable true}}]);
  r:rule <#lemma126>.

<#lemma44> a r:Inference; r:gives {{{((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true} => {:prologs1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true} => {:prologs1 :result true}}]
  <#lemma169>
  [ a r:Fact; r:gives {{((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true} e:labelvars {((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true}}]);
  r:rule <#lemma126>.

<#lemma45> a r:Inference; r:gives {{{(?U6 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
      (0.0 ?U6 "UTC"^^prolog:atom) prolog:stamp_date_time true} => {:prologsdt1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(?U6 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
    (0.0 ?U6 "UTC"^^prolog:atom) prolog:stamp_date_time true} => {:prologsdt1 :result true}}]
  <#lemma170>
  [ a r:Fact; r:gives {{(_:sk6 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
    (0.0 _:sk6 "UTC"^^prolog:atom) prolog:stamp_date_time true} e:labelvars {(_:sk6 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
    (0.0 _:sk6 "UTC"^^prolog:atom) prolog:stamp_date_time true}}]);
  r:rule <#lemma126>.

<#lemma46> a r:Inference; r:gives {{{("uv" 55) prolog:term_greater_than true} => {:prologtgt1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("uv" 55) prolog:term_greater_than true} => {:prologtgt1 :result true}}]
  <#lemma171>
  [ a r:Fact; r:gives {{("uv" 55) prolog:term_greater_than true} e:labelvars {("uv" 55) prolog:term_greater_than true}}]);
  r:rule <#lemma126>.

<#lemma47> a r:Inference; r:gives {{{true.
      :a :b :d} => {:prologt1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{true.
    :a :b :d} => {:prologt1 :result true}}]
  <#lemma172>
  [ a r:Fact; r:gives {{true.
    :a :b :d} e:labelvars {true.
    :a :b :d}}]);
  r:rule <#lemma126>.

<#lemma48> a r:Inference; r:gives {{{(:b :b) prolog:unify true} => {:prologu1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:b :b) prolog:unify true} => {:prologu1 :result true}}]
  <#lemma173>
  [ a r:Fact; r:gives {{(:b :b) prolog:unify true} e:labelvars {(:b :b) prolog:unify true}}]);
  r:rule <#lemma126>.

<#lemma49> a r:Inference; r:gives {{{({:s :p :o} (:p :s :o)) prolog:univ true} => {:prologu2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{({:s :p :o} (:p :s :o)) prolog:univ true} => {:prologu2 :result true}}]
  <#lemma174>
  [ a r:Fact; r:gives {{({:s :p :o} (:p :s :o)) prolog:univ true} e:labelvars {({:s :p :o} (:p :s :o)) prolog:univ true}}]);
  r:rule <#lemma126>.

<#lemma50> a r:Inference; r:gives {{{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} => {:lista1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} => {:lista1 :result true}}]
  <#lemma175>
  [ a r:Fact; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} e:labelvars {((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)}}]);
  r:rule <#lemma126>.

<#lemma51> a r:Inference; r:gives {{{(:a :b :c) list:first :a} => {:listf1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a :b :c) list:first :a} => {:listf1 :result true}}]
  <#lemma176>
  [ a r:Fact; r:gives {{(:a :b :c) list:first :a} e:labelvars {(:a :b :c) list:first :a}}]);
  r:rule <#lemma126>.

<#lemma52> a r:Inference; r:gives {{{:c list:in (:a :b :c)} => {:listi1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:c list:in (:a :b :c)} => {:listi1 :result true}}]
  <#lemma177>
  [ a r:Fact; r:gives {{:c list:in (:a :b :c)} e:labelvars {:c list:in (:a :b :c)}}]);
  r:rule <#lemma126>.

<#lemma53> a r:Inference; r:gives {{{(:a :b :c) list:last :c} => {:listl1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a :b :c) list:last :c} => {:listl1 :result true}}]
  <#lemma178>
  [ a r:Fact; r:gives {{(:a :b :c) list:last :c} e:labelvars {(:a :b :c) list:last :c}}]);
  r:rule <#lemma126>.

<#lemma54> a r:Inference; r:gives {{{(:a :b :c :d) list:member :b} => {:listm1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a :b :c :d) list:member :b} => {:listm1 :result true}}]
  <#lemma179>
  [ a r:Fact; r:gives {{(:a :b :c :d) list:member :b} e:labelvars {(:a :b :c :d) list:member :b}}]);
  r:rule <#lemma126>.

<#lemma55> a r:Inference; r:gives {{{(:a :b :c) list:rest (:b :c)} => {:listr1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a :b :c) list:rest (:b :c)} => {:listr1 :result true}}]
  <#lemma180>
  [ a r:Fact; r:gives {{(:a :b :c) list:rest (:b :c)} e:labelvars {(:a :b :c) list:rest (:b :c)}}]);
  r:rule <#lemma126>.

<#lemma56> a r:Inference; r:gives {{{(true) log:conjunction true} => {:logc1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true) log:conjunction true} => {:logc1 :result true}}]
  <#lemma181>
  [ a r:Fact; r:gives {{(true) log:conjunction true} e:labelvars {(true) log:conjunction true}}]);
  r:rule <#lemma126>.

<#lemma57> a r:Inference; r:gives {{{(true {:u :v :w} {:j :k :l.
        :x :y :z}) log:conjunction {:j :k :l.
        :u :v :w.
        :x :y :z}} => {:logc2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true {:u :v :w} {:j :k :l.
      :x :y :z}) log:conjunction {:j :k :l.
      :u :v :w.
      :x :y :z}} => {:logc2 :result true}}]
  <#lemma182>
  [ a r:Fact; r:gives {{(true {:u :v :w} {:j :k :l.
      :x :y :z}) log:conjunction {:j :k :l.
      :u :v :w.
      :x :y :z}} e:labelvars {(true {:u :v :w} {:j :k :l.
      :x :y :z}) log:conjunction {:j :k :l.
      :u :v :w.
      :x :y :z}}}]);
  r:rule <#lemma126>.

<#lemma58> a r:Inference; r:gives {{{(true {:u :v :w} true true) log:conjunction {:u :v :w}} => {:logc3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} => {:logc3 :result true}}]
  <#lemma183>
  [ a r:Fact; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} e:labelvars {(true {:u :v :w} true true) log:conjunction {:u :v :w}}}]);
  r:rule <#lemma126>.

<#lemma59> a r:Inference; r:gives {{{(:a ?U7) log:equalTo (?U8 :b)} => {:loge1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a ?U7) log:equalTo (?U8 :b)} => {:loge1 :result true}}]
  <#lemma184>
  [ a r:Fact; r:gives {{(:a _:sk7) log:equalTo (_:sk8 :b)} e:labelvars {(:a _:sk7) log:equalTo (_:sk8 :b)}}]);
  r:rule <#lemma126>.

<#lemma60> a r:Inference; r:gives {{{($ :u :v $) log:equalTo ($ :u :v $)} => {:loge2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{($ :u :v $) log:equalTo ($ :u :v $)} => {:loge2 :result true}}]
  <#lemma185>
  [ a r:Fact; r:gives {{($ :u :v $) log:equalTo ($ :u :v $)} e:labelvars {($ :u :v $) log:equalTo ($ :u :v $)}}]);
  r:rule <#lemma126>.

<#lemma61> a r:Inference; r:gives {{{{:a :b :c} log:equalTo {:a :b :c}} => {:loged0 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b :c} log:equalTo {:a :b :c}} => {:loged0 :result true}}]
  <#lemma186>
  [ a r:Fact; r:gives {{{:a :b :c} log:equalTo {:a :b :c}} e:labelvars {{:a :b :c} log:equalTo {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma62> a r:Inference; r:gives {{{{:a :b _:qe1} log:equalTo {:a :b ?U9}} => {:loged3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:equalTo {:a :b ?U9}} => {:loged3 :result true}}]
  <#lemma187>
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:equalTo {:a :b _:sk9}} e:labelvars {{:a :b _:qe1} log:equalTo {:a :b _:sk9}}}]);
  r:rule <#lemma126>.

<#lemma63> a r:Inference; r:gives {{{:abc :graph ?U10.
      ?U10 log:equalTo {:a :b :c}} => {:logeg0 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:abc :graph ?U10.
    ?U10 log:equalTo {:a :b :c}} => {:logeg0 :result true}}]
  <#lemma188>
  [ a r:Fact; r:gives {{:abc :graph _:sk10.
    _:sk10 log:equalTo {:a :b :c}} e:labelvars {:abc :graph _:sk10.
    _:sk10 log:equalTo {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma64> a r:Inference; r:gives {{{:ab_c :graph ?U11.
      ?U11 log:equalTo {:a :b ?U12}} => {:logeg3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:ab_c :graph ?U11.
    ?U11 log:equalTo {:a :b ?U12}} => {:logeg3 :result true}}]
  <#lemma189>
  [ a r:Fact; r:gives {{:ab_c :graph _:sk11.
    _:sk11 log:equalTo {:a :b _:sk12}} e:labelvars {:ab_c :graph _:sk11.
    _:sk11 log:equalTo {:a :b _:sk12}}}]);
  r:rule <#lemma126>.

<#lemma65> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U13.
      ?U13 log:equalTo {:a :b :c}} => {:loges0 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U13.
    ?U13 log:equalTo {:a :b :c}} => {:loges0 :result true}}]
  <#lemma190>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics _:sk13.
    _:sk13 log:equalTo {:a :b :c}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics _:sk13.
    _:sk13 log:equalTo {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma66> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U14.
      ?U14 log:equalTo {:a :b ?U15}} => {:loges3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U14.
    ?U14 log:equalTo {:a :b ?U15}} => {:loges3 :result true}}]
  <#lemma191>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics _:sk14.
    _:sk14 log:equalTo {:a :b _:sk15}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics _:sk14.
    _:sk14 log:equalTo {:a :b _:sk15}}}]);
  r:rule <#lemma126>.

<#lemma67> a r:Inference; r:gives {{{{:b :a :c.
        :e :d :f.
        :h :g :i.
        :k :j :l} log:includes {:k :j :l.
        ?U16 :d ?U17}} => {:logi1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:b :a :c.
      :e :d :f.
      :h :g :i.
      :k :j :l} log:includes {:k :j :l.
      ?U16 :d ?U17}} => {:logi1 :result true}}]
  <#lemma192>
  [ a r:Fact; r:gives {{{:b :a :c.
      :e :d :f.
      :h :g :i.
      :k :j :l} log:includes {:k :j :l.
      _:sk16 :d _:sk17}} e:labelvars {{:b :a :c.
      :e :d :f.
      :h :g :i.
      :k :j :l} log:includes {:k :j :l.
      _:sk16 :d _:sk17}}}]);
  r:rule <#lemma126>.

<#lemma68> a r:Inference; r:gives {{{:ng1 :namedGraph ?U18.
      ?U18 log:includes {:k :j :l.
        ?U19 :d ?U20}} => {:logi2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:ng1 :namedGraph ?U18.
    ?U18 log:includes {:k :j :l.
      ?U19 :d ?U20}} => {:logi2 :result true}}]
  <#lemma193>
  [ a r:Fact; r:gives {{:ng1 :namedGraph _:sk18.
    _:sk18 log:includes {:k :j :l.
      _:sk19 :d _:sk20}} e:labelvars {:ng1 :namedGraph _:sk18.
    _:sk18 log:includes {:k :j :l.
      _:sk19 :d _:sk20}}}]);
  r:rule <#lemma126>.

<#lemma69> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?U21.
      ?U21 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} => {:logi3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?U21.
    ?U21 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} => {:logi3 :result true}}]
  <#lemma194>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics _:sk21.
    _:sk21 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics _:sk21.
    _:sk21 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}}}]);
  r:rule <#lemma126>.

<#lemma70> a r:Inference; r:gives {{{{:a :b :c} log:includes {:a :b :c}} => {:logid0 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b :c} log:includes {:a :b :c}} => {:logid0 :result true}}]
  <#lemma195>
  [ a r:Fact; r:gives {{{:a :b :c} log:includes {:a :b :c}} e:labelvars {{:a :b :c} log:includes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma71> a r:Inference; r:gives {{{{:a :b :c} log:includes {:a :b :c}} => {:logid1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b :c} log:includes {:a :b :c}} => {:logid1 :result true}}]
  <#lemma196>
  [ a r:Fact; r:gives {{{:a :b :c} log:includes {:a :b :c}} e:labelvars {{:a :b :c} log:includes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma72> a r:Inference; r:gives {{{{:a :b _:qe1} log:includes {:a :b ?U22}} => {:logid3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:includes {:a :b ?U22}} => {:logid3 :result true}}]
  <#lemma197>
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:includes {:a :b _:sk22}} e:labelvars {{:a :b _:qe1} log:includes {:a :b _:sk22}}}]);
  r:rule <#lemma126>.

<#lemma73> a r:Inference; r:gives {{{:abc :graph ?U23.
      ?U23 log:includes {:a :b :c}} => {:logig0 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:abc :graph ?U23.
    ?U23 log:includes {:a :b :c}} => {:logig0 :result true}}]
  <#lemma198>
  [ a r:Fact; r:gives {{:abc :graph _:sk23.
    _:sk23 log:includes {:a :b :c}} e:labelvars {:abc :graph _:sk23.
    _:sk23 log:includes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma74> a r:Inference; r:gives {{{:abc :graph ?U23.
      ?U23 log:includes {:a :b :c}} => {:logig1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:abc :graph ?U23.
    ?U23 log:includes {:a :b :c}} => {:logig1 :result true}}]
  <#lemma199>
  [ a r:Fact; r:gives {{:abc :graph _:sk23.
    _:sk23 log:includes {:a :b :c}} e:labelvars {:abc :graph _:sk23.
    _:sk23 log:includes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma75> a r:Inference; r:gives {{{:ab_c :graph ?U24.
      ?U24 log:includes {:a :b ?U25}} => {:logig3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:ab_c :graph ?U24.
    ?U24 log:includes {:a :b ?U25}} => {:logig3 :result true}}]
  <#lemma200>
  [ a r:Fact; r:gives {{:ab_c :graph _:sk24.
    _:sk24 log:includes {:a :b _:sk25}} e:labelvars {:ab_c :graph _:sk24.
    _:sk24 log:includes {:a :b _:sk25}}}]);
  r:rule <#lemma126>.

<#lemma76> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U26.
      ?U26 log:includes {:a :b :c}} => {:logis0 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U26.
    ?U26 log:includes {:a :b :c}} => {:logis0 :result true}}]
  <#lemma201>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics _:sk26.
    _:sk26 log:includes {:a :b :c}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics _:sk26.
    _:sk26 log:includes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma77> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U26.
      ?U26 log:includes {:a :b :c}} => {:logis1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?U26.
    ?U26 log:includes {:a :b :c}} => {:logis1 :result true}}]
  <#lemma202>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics _:sk26.
    _:sk26 log:includes {:a :b :c}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics _:sk26.
    _:sk26 log:includes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma78> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U27.
      ?U27 log:includes {:a :b ?U28}} => {:logis3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U27.
    ?U27 log:includes {:a :b ?U28}} => {:logis3 :result true}}]
  <#lemma203>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics _:sk27.
    _:sk27 log:includes {:a :b _:sk28}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics _:sk27.
    _:sk27 log:includes {:a :b _:sk28}}}]);
  r:rule <#lemma126>.

<#lemma79> a r:Inference; r:gives {{{:a log:notEqualTo :b} => {:logne1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:a log:notEqualTo :b} => {:logne1 :result true}}]
  <#lemma204>
  [ a r:Fact; r:gives {{:a log:notEqualTo :b} e:labelvars {:a log:notEqualTo :b}}]);
  r:rule <#lemma126>.

<#lemma80> a r:Inference; r:gives {{{{:a :b :c} log:notEqualTo {:a :b _:qe1}} => {:logned1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b :c} log:notEqualTo {:a :b _:qe1}} => {:logned1 :result true}}]
  <#lemma205>
  [ a r:Fact; r:gives {{{:a :b :c} log:notEqualTo {:a :b _:qe1}} e:labelvars {{:a :b :c} log:notEqualTo {:a :b _:qe1}}}]);
  r:rule <#lemma126>.

<#lemma81> a r:Inference; r:gives {{{{:a :b _:qe1} log:notEqualTo {:a :b :c}} => {:logned2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:notEqualTo {:a :b :c}} => {:logned2 :result true}}]
  <#lemma206>
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:notEqualTo {:a :b :c}} e:labelvars {{:a :b _:qe1} log:notEqualTo {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma82> a r:Inference; r:gives {{{:abc :graph ?U29.
      ?U29 log:notEqualTo {:a :b _:qe1}} => {:logneg1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:abc :graph ?U29.
    ?U29 log:notEqualTo {:a :b _:qe1}} => {:logneg1 :result true}}]
  <#lemma207>
  [ a r:Fact; r:gives {{:abc :graph _:sk29.
    _:sk29 log:notEqualTo {:a :b _:qe1}} e:labelvars {:abc :graph _:sk29.
    _:sk29 log:notEqualTo {:a :b _:qe1}}}]);
  r:rule <#lemma126>.

<#lemma83> a r:Inference; r:gives {{{:ab_c :graph ?U30.
      ?U30 log:notEqualTo {:a :b :c}} => {:logneg2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:ab_c :graph ?U30.
    ?U30 log:notEqualTo {:a :b :c}} => {:logneg2 :result true}}]
  <#lemma208>
  [ a r:Fact; r:gives {{:ab_c :graph _:sk30.
    _:sk30 log:notEqualTo {:a :b :c}} e:labelvars {:ab_c :graph _:sk30.
    _:sk30 log:notEqualTo {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma84> a r:Inference; r:gives {{{{:b :a :c.
        :e :d :f.
        :h :g :i} log:notIncludes {:e :d :f.
        :b :e :c}} => {:logni1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:b :a :c.
      :e :d :f.
      :h :g :i} log:notIncludes {:e :d :f.
      :b :e :c}} => {:logni1 :result true}}]
  <#lemma209>
  [ a r:Fact; r:gives {{{:b :a :c.
      :e :d :f.
      :h :g :i} log:notIncludes {:e :d :f.
      :b :e :c}} e:labelvars {{:b :a :c.
      :e :d :f.
      :h :g :i} log:notIncludes {:e :d :f.
      :b :e :c}}}]);
  r:rule <#lemma126>.

<#lemma85> a r:Inference; r:gives {{{:ng2 :namedGraph ?U31.
      ?U31 log:notIncludes {:e :d :f.
        :b :e :c}} => {:logni2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:ng2 :namedGraph ?U31.
    ?U31 log:notIncludes {:e :d :f.
      :b :e :c}} => {:logni2 :result true}}]
  <#lemma210>
  [ a r:Fact; r:gives {{:ng2 :namedGraph _:sk31.
    _:sk31 log:notIncludes {:e :d :f.
      :b :e :c}} e:labelvars {:ng2 :namedGraph _:sk31.
    _:sk31 log:notIncludes {:e :d :f.
      :b :e :c}}}]);
  r:rule <#lemma126>.

<#lemma86> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?U32.
      ?U32 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} => {:logni3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?U32.
    ?U32 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} => {:logni3 :result true}}]
  <#lemma211>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics _:sk32.
    _:sk32 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics _:sk32.
    _:sk32 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}}}]);
  r:rule <#lemma126>.

<#lemma87> a r:Inference; r:gives {{{{:a :b _:qe1} log:notIncludes {:a :b :c}} => {:lognid2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:notIncludes {:a :b :c}} => {:lognid2 :result true}}]
  <#lemma212>
  [ a r:Fact; r:gives {{{:a :b _:qe1} log:notIncludes {:a :b :c}} e:labelvars {{:a :b _:qe1} log:notIncludes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma88> a r:Inference; r:gives {{{:ab_c :graph ?U33.
      ?U33 log:notIncludes {:a :b :c}} => {:lognig2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:ab_c :graph ?U33.
    ?U33 log:notIncludes {:a :b :c}} => {:lognig2 :result true}}]
  <#lemma213>
  [ a r:Fact; r:gives {{:ab_c :graph _:sk33.
    _:sk33 log:notIncludes {:a :b :c}} e:labelvars {:ab_c :graph _:sk33.
    _:sk33 log:notIncludes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma89> a r:Inference; r:gives {{{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U34.
      ?U34 log:notIncludes {:a :b :c}} => {:lognis2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?U34.
    ?U34 log:notIncludes {:a :b :c}} => {:lognis2 :result true}}]
  <#lemma214>
  [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics _:sk34.
    _:sk34 log:notIncludes {:a :b :c}} e:labelvars {<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics _:sk34.
    _:sk34 log:notIncludes {:a :b :c}}}]);
  r:rule <#lemma126>.

<#lemma90> a r:Inference; r:gives {{{med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} => {:logu1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} => {:logu1 :result true}}]
  <#lemma215>
  [ a r:Fact; r:gives {{med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} e:labelvars {med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"}}]);
  r:rule <#lemma126>.

<#lemma91> a r:Inference; r:gives {{{:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} => {:logu2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} => {:logu2 :result true}}]
  <#lemma216>
  [ a r:Fact; r:gives {{:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} e:labelvars {:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"}}]);
  r:rule <#lemma126>.

<#lemma92> a r:Inference; r:gives {{{(1 1) math:difference 0} => {:mathd1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1 1) math:difference 0} => {:mathd1 :result true}}]
  <#lemma217>
  [ a r:Fact; r:gives {{(1 1) math:difference 0} e:labelvars {(1 1) math:difference 0}}]);
  r:rule <#lemma126>.

<#lemma93> a r:Inference; r:gives {{{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0} => {:mathd2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0} => {:mathd2 :result true}}]
  <#lemma218>
  [ a r:Fact; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0} e:labelvars {("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0}}]);
  r:rule <#lemma126>.

<#lemma94> a r:Inference; r:gives {{{(2 ?U35) math:exponentiation 8.0 .
      (4.0 ?U35) math:product 12.0} => {:mathe1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(2 ?U35) math:exponentiation 8.0 .
    (4.0 ?U35) math:product 12.0} => {:mathe1 :result true}}]
  <#lemma219>
  [ a r:Fact; r:gives {{(2 _:sk35) math:exponentiation 8.0 .
    (4.0 _:sk35) math:product 12.0} e:labelvars {(2 _:sk35) math:exponentiation 8.0 .
    (4.0 _:sk35) math:product 12.0}}]);
  r:rule <#lemma126>.

<#lemma95> a r:Inference; r:gives {{{2 math:greaterThan 1} => {:mathg1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{2 math:greaterThan 1} => {:mathg1 :result true}}]
  <#lemma220>
  [ a r:Fact; r:gives {{2 math:greaterThan 1} e:labelvars {2 math:greaterThan 1}}]);
  r:rule <#lemma126>.

<#lemma96> a r:Inference; r:gives {{{"02" math:greaterThan "1"} => {:mathg2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"02" math:greaterThan "1"} => {:mathg2 :result true}}]
  <#lemma221>
  [ a r:Fact; r:gives {{"02" math:greaterThan "1"} e:labelvars {"02" math:greaterThan "1"}}]);
  r:rule <#lemma126>.

<#lemma97> a r:Inference; r:gives {{{(:u :v :u) math:memberCount 3} => {:mathm1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:u :v :u) math:memberCount 3} => {:mathm1 :result true}}]
  <#lemma222>
  [ a r:Fact; r:gives {{(:u :v :u) math:memberCount 3} e:labelvars {(:u :v :u) math:memberCount 3}}]);
  r:rule <#lemma126>.

<#lemma98> a r:Inference; r:gives {{{{:s :p :o1.
        :s :p :o2} math:memberCount 2} => {:mathm2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{{:s :p :o1.
      :s :p :o2} math:memberCount 2} => {:mathm2 :result true}}]
  <#lemma223>
  [ a r:Fact; r:gives {{{:s :p :o1.
      :s :p :o2} math:memberCount 2} e:labelvars {{:s :p :o1.
      :s :p :o2} math:memberCount 2}}]);
  r:rule <#lemma126>.

<#lemma99> a r:Inference; r:gives {{{($ :u :v $) math:memberCount 2} => {:mathm3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{($ :u :v $) math:memberCount 2} => {:mathm3 :result true}}]
  <#lemma224>
  [ a r:Fact; r:gives {{($ :u :v $) math:memberCount 2} e:labelvars {($ :u :v $) math:memberCount 2}}]);
  r:rule <#lemma126>.

<#lemma100> a r:Inference; r:gives {{{7 math:notLessThan 5} => {:mathnl1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{7 math:notLessThan 5} => {:mathnl1 :result true}}]
  <#lemma225>
  [ a r:Fact; r:gives {{7 math:notLessThan 5} e:labelvars {7 math:notLessThan 5}}]);
  r:rule <#lemma126>.

<#lemma101> a r:Inference; r:gives {{{(1 1) math:sum 2} => {:maths1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1 1) math:sum 2} => {:maths1 :result true}}]
  <#lemma226>
  [ a r:Fact; r:gives {{(1 1) math:sum 2} e:labelvars {(1 1) math:sum 2}}]);
  r:rule <#lemma126>.

<#lemma102> a r:Inference; r:gives {{{("1" "1") math:sum 2} => {:maths2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1" "1") math:sum 2} => {:maths2 :result true}}]
  <#lemma227>
  [ a r:Fact; r:gives {{("1" "1") math:sum 2} e:labelvars {("1" "1") math:sum 2}}]);
  r:rule <#lemma126>.

<#lemma103> a r:Inference; r:gives {{{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} => {:maths3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} => {:maths3 :result true}}]
  <#lemma228>
  [ a r:Fact; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} e:labelvars {("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0}}]);
  r:rule <#lemma126>.

<#lemma104> a r:Inference; r:gives {{{("P1D"^^xsd:duration) math:sum 86400.0} => {:maths4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} => {:maths4 :result true}}]
  <#lemma229>
  [ a r:Fact; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} e:labelvars {("P1D"^^xsd:duration) math:sum 86400.0}}]);
  r:rule <#lemma126>.

<#lemma105> a r:Inference; r:gives {{{(:f :g) rdf:first :f} => {:rdff1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:f :g) rdf:first :f} => {:rdff1 :result true}}]
  <#lemma230>
  [ a r:Fact; r:gives {{(:f :g) rdf:first :f} e:labelvars {(:f :g) rdf:first :f}}]);
  r:rule <#lemma126>.

<#lemma106> a r:Inference; r:gives {{{(:f :g) rdf:rest (:g)} => {:rdfr1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:f :g) rdf:rest (:g)} => {:rdfr1 :result true}}]
  <#lemma231>
  [ a r:Fact; r:gives {{(:f :g) rdf:rest (:g)} e:labelvars {(:f :g) rdf:rest (:g)}}]);
  r:rule <#lemma126>.

<#lemma107> a r:Inference; r:gives {{{("eul" "er") string:concatenation "euler"} => {:strc1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("eul" "er") string:concatenation "euler"} => {:strc1 :result true}}]
  <#lemma232>
  [ a r:Fact; r:gives {{("eul" "er") string:concatenation "euler"} e:labelvars {("eul" "er") string:concatenation "euler"}}]);
  r:rule <#lemma126>.

<#lemma108> a r:Inference; r:gives {{{("€" "Ø"@en-us) string:concatenation "€Ø"} => {:strc2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("€" "Ø"@en-us) string:concatenation "€Ø"} => {:strc2 :result true}}]
  <#lemma233>
  [ a r:Fact; r:gives {{("€" "Ø"@en-us) string:concatenation "€Ø"} e:labelvars {("€" "Ø"@en-us) string:concatenation "€Ø"}}]);
  r:rule <#lemma126>.

<#lemma109> a r:Inference; r:gives {{{("test " "is \"ok\"") string:concatenation "test is \"ok\""} => {:strc3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("test " "is \"ok\"") string:concatenation "test is \"ok\""} => {:strc3 :result true}}]
  <#lemma234>
  [ a r:Fact; r:gives {{("test " "is \"ok\"") string:concatenation "test is \"ok\""} e:labelvars {("test " "is \"ok\"") string:concatenation "test is \"ok\""}}]);
  r:rule <#lemma126>.

<#lemma110> a r:Inference; r:gives {{{("test " "is \"ok\"") string:concatenation ?U36.
      (?U36 " again") string:concatenation "test is \"ok\" again"} => {:strc4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("test " "is \"ok\"") string:concatenation ?U36.
    (?U36 " again") string:concatenation "test is \"ok\" again"} => {:strc4 :result true}}]
  <#lemma235>
  [ a r:Fact; r:gives {{("test " "is \"ok\"") string:concatenation _:sk36.
    (_:sk36 " again") string:concatenation "test is \"ok\" again"} e:labelvars {("test " "is \"ok\"") string:concatenation _:sk36.
    (_:sk36 " again") string:concatenation "test is \"ok\" again"}}]);
  r:rule <#lemma126>.

<#lemma111> a r:Inference; r:gives {{{"Rob Smith" string:contains "Smith"} => {:strcn1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"Rob Smith" string:contains "Smith"} => {:strcn1 :result true}}]
  <#lemma236>
  [ a r:Fact; r:gives {{"Rob Smith" string:contains "Smith"} e:labelvars {"Rob Smith" string:contains "Smith"}}]);
  r:rule <#lemma126>.

<#lemma112> a r:Inference; r:gives {{{"Rob Smith"@en string:contains "Smith"@fr} => {:strcn2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"Rob Smith"@en string:contains "Smith"@fr} => {:strcn2 :result true}}]
  <#lemma237>
  [ a r:Fact; r:gives {{"Rob Smith"@en string:contains "Smith"@fr} e:labelvars {"Rob Smith"@en string:contains "Smith"@fr}}]);
  r:rule <#lemma126>.

<#lemma113> a r:Inference; r:gives {{{"Tim" string:containsIgnoringCase "IM"} => {:strci1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"Tim" string:containsIgnoringCase "IM"} => {:strci1 :result true}}]
  <#lemma238>
  [ a r:Fact; r:gives {{"Tim" string:containsIgnoringCase "IM"} e:labelvars {"Tim" string:containsIgnoringCase "IM"}}]);
  r:rule <#lemma126>.

<#lemma114> a r:Inference; r:gives {{{"abracadabra" string:matches "(a|b|r|c|d)+"} => {:strm1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"abracadabra" string:matches "(a|b|r|c|d)+"} => {:strm1 :result true}}]
  <#lemma239>
  [ a r:Fact; r:gives {{"abracadabra" string:matches "(a|b|r|c|d)+"} e:labelvars {"abracadabra" string:matches "(a|b|r|c|d)+"}}]);
  r:rule <#lemma126>.

<#lemma115> a r:Inference; r:gives {{{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"} => {:strs1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"} => {:strs1 :result true}}]
  <#lemma240>
  [ a r:Fact; r:gives {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"} e:labelvars {("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"}}]);
  r:rule <#lemma126>.

<#lemma116> a r:Inference; r:gives {{{("{x" "{(.)") string:scrape "x"} => {:strs2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("{x" "{(.)") string:scrape "x"} => {:strs2 :result true}}]
  <#lemma241>
  [ a r:Fact; r:gives {{("{x" "{(.)") string:scrape "x"} e:labelvars {("{x" "{(.)") string:scrape "x"}}]);
  r:rule <#lemma126>.

<#lemma117> a r:Inference; r:gives {{{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")} => {:strs3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")} => {:strs3 :result true}}]
  <#lemma242>
  [ a r:Fact; r:gives {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")} e:labelvars {("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")}}]);
  r:rule <#lemma126>.

<#lemma118> a r:Inference; r:gives {{{"euler" string:startsWith "eu"} => {:strs4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"euler" string:startsWith "eu"} => {:strs4 :result true}}]
  <#lemma243>
  [ a r:Fact; r:gives {{"euler" string:startsWith "eu"} e:labelvars {"euler" string:startsWith "eu"}}]);
  r:rule <#lemma126>.

<#lemma119> a r:Inference; r:gives {{{"2006-12-14"^^xsd:date time:day "14"} => {:timed1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:day "14"} => {:timed1 :result true}}]
  <#lemma244>
  [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:day "14"} e:labelvars {"2006-12-14"^^xsd:date time:day "14"}}]);
  r:rule <#lemma126>.

<#lemma120> a r:Inference; r:gives {{{"2006-12-14"^^xsd:date time:month "12"} => {:timem1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:month "12"} => {:timem1 :result true}}]
  <#lemma245>
  [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:month "12"} e:labelvars {"2006-12-14"^^xsd:date time:month "12"}}]);
  r:rule <#lemma126>.

<#lemma121> a r:Inference; r:gives {{{"2006-12-14"^^xsd:date time:year "2006"} => {:timey1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} => {:timey1 :result true}}]
  <#lemma246>
  [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} e:labelvars {"2006-12-14"^^xsd:date time:year "2006"}}]);
  r:rule <#lemma126>.

<#lemma122> a r:Inference; r:gives {{{?U37 e:findall (?U38 {:s :p ?U38} ({:s1 :p1 :o1} {:s2 :p2 :o2.
        :s3 :p3 :o3}))} => {:ef1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{?U37 e:findall (?U38 {:s :p ?U38} ({:s1 :p1 :o1} {:s2 :p2 :o2.
      :s3 :p3 :o3}))} => {:ef1 :result true}}]
  <#lemma247>
  [ a r:Fact; r:gives {{_:sk37 e:findall (_:sk38 {:s :p _:sk38} ({:s1 :p1 :o1} {:s2 :p2 :o2.
      :s3 :p3 :o3}))} e:labelvars {_:sk37 e:findall (_:sk38 {:s :p _:sk38} ({:s1 :p1 :o1} {:s2 :p2 :o2.
      :s3 :p3 :o3}))}}]);
  r:rule <#lemma126>.

<#lemma123> a r:Inference; r:gives {{{?U39 e:findall (?U40 {?U40 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) ?U41).
      ?U39 e:findall (?U40 {?U40 a :Female} ?U41 ?U42).
      ?U39 e:findall (?U40 {?U40 a :Human} ?U42 (:Dan :Tim))} => {:ef3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{?U39 e:findall (?U40 {?U40 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) ?U41).
    ?U39 e:findall (?U40 {?U40 a :Female} ?U41 ?U42).
    ?U39 e:findall (?U40 {?U40 a :Human} ?U42 (:Dan :Tim))} => {:ef3 :result true}}]
  <#lemma248>
  [ a r:Fact; r:gives {{_:sk39 e:findall (_:sk40 {_:sk40 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) _:sk41).
    _:sk39 e:findall (_:sk40 {_:sk40 a :Female} _:sk41 _:sk42).
    _:sk39 e:findall (_:sk40 {_:sk40 a :Human} _:sk42 (:Dan :Tim))} e:labelvars {_:sk39 e:findall (_:sk40 {_:sk40 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) _:sk41).
    _:sk39 e:findall (_:sk40 {_:sk40 a :Female} _:sk41 _:sk42).
    _:sk39 e:findall (_:sk40 {_:sk40 a :Human} _:sk42 (:Dan :Tim))}}]);
  r:rule <#lemma126>.

<#lemma124> a r:Inference; r:gives {{{:a :b :d.
      ?U43 e:optional {:g :h :i}} => {:eo1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{:a :b :d.
    ?U43 e:optional {:g :h :i}} => {:eo1 :result true}}]
  <#lemma249>
  [ a r:Fact; r:gives {{:a :b :d.
    _:sk43 e:optional {:g :h :i}} e:labelvars {:a :b :d.
    _:sk43 e:optional {:g :h :i}}}]);
  r:rule <#lemma126>.

<#lemma125> a r:Inference; r:gives {:ca1 :result true}; r:evidence (
  <#lemma250>
  [ a r:Fact; r:gives {28.274333882308138 math:greaterThan 28.27}]
  [ a r:Fact; r:gives {28.274333882308138 math:lessThan 28.28}]);
  r:rule <#lemma251>.

<#lemma126> a r:Extraction; r:gives {{?x0 => {_:x1 :result _:x2}.
  ?x1 :result ?x2.
  ?x0 e:labelvars ?x0} => {{?x0 => {?x1 :result ?x2}} a :PASS}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>].

<#lemma127> a r:Inference; r:gives {:wg1 :result true}; r:evidence (
  <#lemma252>
  [ a r:Fact; r:gives {3 log:equalTo 3}]);
  r:rule <#lemma253>.

<#lemma128> a r:Inference; r:gives {:ef4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"}]);
  r:rule <#lemma254>.

<#lemma129> a r:Inference; r:gives {:egd1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c.
    :d :e :f} true) e:graphDifference {:a :b :c.
    :d :e :f}}]);
  r:rule <#lemma255>.

<#lemma130> a r:Inference; r:gives {:egd2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true {:d :e :f}) e:graphDifference true}]);
  r:rule <#lemma256>.

<#lemma131> a r:Inference; r:gives {:egd3 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c.
    :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}}]);
  r:rule <#lemma257>.

<#lemma132> a r:Inference; r:gives {:egd4 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c.
    :d :e :f.
    :g :h :i} {_:sk44 :e :f}) e:graphDifference {:a :b :c.
    :g :h :i}}]);
  r:rule <#lemma258>.

<#lemma133> a r:Inference; r:gives {:egd5 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c} {:a :b :c.
    :u :v :w.
    :x :y :z}) e:graphDifference true}]);
  r:rule <#lemma259>.

<#lemma134> a r:Inference; r:gives {:egi1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true) e:graphIntersection true}]);
  r:rule <#lemma260>.

<#lemma135> a r:Inference; r:gives {:egi2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true {:d :e :f}) e:graphIntersection true}]);
  r:rule <#lemma261>.

<#lemma136> a r:Inference; r:gives {:egi3 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c.
    :d :e :f.
    :g :h :i} true) e:graphIntersection true}]);
  r:rule <#lemma262>.

<#lemma137> a r:Inference; r:gives {:egi4 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c.
    :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}}]);
  r:rule <#lemma263>.

<#lemma138> a r:Inference; r:gives {:egi5 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:a :b :c.
    :d :e :f.
    :g :h :i} {:g :h :i.
    :d :e :f} {:d :e :f.
    :g :h :i}) e:graphIntersection {:d :e :f.
    :g :h :i}}]);
  r:rule <#lemma264>.

<#lemma139> a r:Inference; r:gives {:el1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6}]);
  r:rule <#lemma265>.

<#lemma140> a r:Inference; r:gives {:em1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(8 5 6 7 9 4) e:max 9}]);
  r:rule <#lemma266>.

<#lemma141> a r:Inference; r:gives {:em2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(8 5 6 7 9 4) e:min 4}]);
  r:rule <#lemma267>.

<#lemma142> a r:Inference; r:gives {:er1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))}]);
  r:rule <#lemma268>.

<#lemma143> a r:Inference; r:gives {:es1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))}]);
  r:rule <#lemma269>.

<#lemma144> a r:Inference; r:gives {:es2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)}]);
  r:rule <#lemma270>.

<#lemma145> a r:Inference; r:gives {:ew1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"}]);
  r:rule <#lemma271>.

<#lemma146> a r:Inference; r:gives {:ew2 :result true}; r:evidence (
  [ a r:Fact; r:gives {"Hello World!" e:wwwFormEncode "Hello+World%21"}]);
  r:rule <#lemma272>.

<#lemma147> a r:Inference; r:gives {:prologa2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(-4) prolog:abs 4}]);
  r:rule <#lemma273>.

<#lemma148> a r:Inference; r:gives {:prologa1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true}]);
  r:rule <#lemma274>.

<#lemma149> a r:Inference; r:gives {:prologaltoe1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(6 8) prolog:arithmetic_less_than_or_equal true}]);
  r:rule <#lemma275>.

<#lemma150> a r:Inference; r:gives {:prologaz1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:s :q :o}) prolog:assertz true}]
  [ a r:Fact; r:gives {:s :q :o}]);
  r:rule <#lemma276>.

<#lemma151> a r:Inference; r:gives {:prologac1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true}]);
  r:rule <#lemma277>.

<#lemma152> a r:Inference; r:gives {:prologan1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("123"^^prolog:atom 123) prolog:atom_number true}]);
  r:rule <#lemma278>.

<#lemma153> a r:Inference; r:gives {:prologalc1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true}]);
  r:rule <#lemma279>.

<#lemma154> a r:Inference; r:gives {:prologC1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c) :a (:b :c)) prolog:C true}]);
  r:rule <#lemma280>.

<#lemma155> a r:Inference; r:gives {:prologc1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:prologaltoe1 :result true}) prolog:call true}]);
  r:rule <#lemma281>.

<#lemma156> a r:Inference; r:gives {:prologc2 :result true}; r:evidence (
  [ a r:Fact; r:gives {({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true}]);
  r:rule <#lemma282>.

<#lemma157> a r:Inference; r:gives {:prologc3 :result true}; r:evidence (
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma283>.

<#lemma158> a r:Inference; r:gives {:prologdts1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)^prolog:univ} ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true}]
  [ a r:Fact; r:gives {0.0 math:equalTo 0}]
  [ a r:Fact; r:gives {({("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)^prolog:univ} 0.0) prolog:date_time_stamp true}]);
  r:rule <#lemma284>.

<#lemma159> a r:Inference; r:gives {:prologf1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({"fail"^^prolog:atom}) prolog:not_provable true}]);
  r:rule <#lemma285>.

<#lemma160> a r:Inference; r:gives {:prologiq1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(9 4) prolog:integer_quotient 2}]);
  r:rule <#lemma286>.

<#lemma161> a r:Inference; r:gives {:prologm1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(8 4) prolog:max 8}]);
  r:rule <#lemma287>.

<#lemma162> a r:Inference; r:gives {:prologm2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(8 4) prolog:min 4}]);
  r:rule <#lemma288>.

<#lemma163> a r:Inference; r:gives {:prologm3 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1) prolog:minus -1}]);
  r:rule <#lemma289>.

<#lemma164> a r:Inference; r:gives {:prolognu1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b) prolog:not_unifiable true}]);
  r:rule <#lemma290>.

<#lemma165> a r:Inference; r:gives {:prologp1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1) prolog:plus 1}]);
  r:rule <#lemma291>.

<#lemma166> a r:Inference; r:gives {:prologp2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1 1) prolog:plus 2}]);
  r:rule <#lemma292>.

<#lemma167> a r:Inference; r:gives {:prologp3 :result true}; r:evidence (
  [ a r:Fact; r:gives {(9 4) prolog:product 36}]);
  r:rule <#lemma293>.

<#lemma168> a r:Inference; r:gives {:prologr1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:s :q :o}) prolog:retract true}]
  [ a r:Fact; r:gives {({({:s :q :o}) prolog:call true}) prolog:not_provable true}]);
  r:rule <#lemma294>.

<#lemma169> a r:Inference; r:gives {:prologs1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true}]);
  r:rule <#lemma295>.

<#lemma170> a r:Inference; r:gives {:prologsdt1 :result true}; r:evidence (
  [ a r:Fact; r:gives {({("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)^prolog:univ} ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true}]
  [ a r:Fact; r:gives {(0.0 {("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)^prolog:univ} "UTC"^^prolog:atom) prolog:stamp_date_time true}]);
  r:rule <#lemma296>.

<#lemma171> a r:Inference; r:gives {:prologtgt1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("uv" 55) prolog:term_greater_than true}]);
  r:rule <#lemma297>.

<#lemma172> a r:Inference; r:gives {:prologt1 :result true}; r:evidence (
  [ a r:Fact; r:gives {true}]
  <#lemma298>);
  r:rule <#lemma299>.

<#lemma173> a r:Inference; r:gives {:prologu1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:b :b) prolog:unify true}]);
  r:rule <#lemma300>.

<#lemma174> a r:Inference; r:gives {:prologu2 :result true}; r:evidence (
  [ a r:Fact; r:gives {({:s :p :o} (:p :s :o)) prolog:univ true}]);
  r:rule <#lemma301>.

<#lemma175> a r:Inference; r:gives {:lista1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)}]);
  r:rule <#lemma302>.

<#lemma176> a r:Inference; r:gives {:listf1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b :c) list:first :a}]);
  r:rule <#lemma303>.

<#lemma177> a r:Inference; r:gives {:listi1 :result true}; r:evidence (
  [ a r:Fact; r:gives {:c list:in (:a :b :c)}]);
  r:rule <#lemma304>.

<#lemma178> a r:Inference; r:gives {:listl1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b :c) list:last :c}]);
  r:rule <#lemma305>.

<#lemma179> a r:Inference; r:gives {:listm1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b :c :d) list:member :b}]);
  r:rule <#lemma306>.

<#lemma180> a r:Inference; r:gives {:listr1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b :c) list:rest (:b :c)}]);
  r:rule <#lemma307>.

<#lemma181> a r:Inference; r:gives {:logc1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true) log:conjunction true}]);
  r:rule <#lemma308>.

<#lemma182> a r:Inference; r:gives {:logc2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true {:u :v :w} {:j :k :l.
    :x :y :z}) log:conjunction {:j :k :l.
    :u :v :w.
    :x :y :z}}]);
  r:rule <#lemma309>.

<#lemma183> a r:Inference; r:gives {:logc3 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true {:u :v :w} true true) log:conjunction {:u :v :w}}]);
  r:rule <#lemma310>.

<#lemma184> a r:Inference; r:gives {:loge1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b) log:equalTo (:a :b)}]);
  r:rule <#lemma311>.

<#lemma185> a r:Inference; r:gives {:loge2 :result true}; r:evidence (
  [ a r:Fact; r:gives {($ :u :v $) log:equalTo ($ :u :v $)}]);
  r:rule <#lemma312>.

<#lemma186> a r:Inference; r:gives {:loged0 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b :c} log:equalTo {:a :b :c}}]);
  r:rule <#lemma313>.

<#lemma187> a r:Inference; r:gives {:loged3 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b _:qe1} log:equalTo {:a :b _:qe1}}]);
  r:rule <#lemma314>.

<#lemma188> a r:Inference; r:gives {:logeg0 :result true}; r:evidence (
  <#lemma315>
  [ a r:Fact; r:gives {{:a :b :c} log:equalTo {:a :b :c}}]);
  r:rule <#lemma316>.

<#lemma189> a r:Inference; r:gives {:logeg3 :result true}; r:evidence (
  <#lemma317>
  [ a r:Fact; r:gives {{:a :b _:qe1} log:equalTo {:a :b _:qe1}}]);
  r:rule <#lemma318>.

<#lemma190> a r:Inference; r:gives {:loges0 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics {:a :b :c}}]
  [ a r:Fact; r:gives {{:a :b :c} log:equalTo {:a :b :c}}]);
  r:rule <#lemma319>.

<#lemma191> a r:Inference; r:gives {:loges3 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics {:a :b _:c_10}}]
  [ a r:Fact; r:gives {{:a :b _:c_10} log:equalTo {:a :b _:c_10}}]);
  r:rule <#lemma320>.

<#lemma192> a r:Inference; r:gives {:logi1 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:b :a :c.
    :e :d :f.
    :h :g :i.
    :k :j :l} log:includes {:k :j :l.
    :e :d :f}}]);
  r:rule <#lemma321>.

<#lemma193> a r:Inference; r:gives {:logi2 :result true}; r:evidence (
  <#lemma322>
  [ a r:Fact; r:gives {{:b :a :c.
    :e :d :f.
    :h :g :i.
    :k :j :l} log:includes {:k :j :l.
    :e :d :f}}]);
  r:rule <#lemma323>.

<#lemma194> a r:Inference; r:gives {:logi3 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics {(med:Ann med:Fever) fl:mu 0.8 .
    (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
    (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
    (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:SevereAsthma) fl:mu 0.001 .
    (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
    med:aspirinHighDose med:prescribedFor med:Fever.
    med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
    med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
    med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
    med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
    med:betaBlocker med:excludedFor med:SevereAsthma.
    med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
    {?U45 med:prescribedFor ?U46.
      (?U47 ?U46) fl:mu ?U48.
      ?U48 math:greaterThan 0.7 .
      ?U49 e:findall (?U50 {?U45 med:excludedFor ?U50} ?U51).
      ?U49 e:findall (?U50 {?U45 med:excludedFor ?U50.
        (?U47 ?U50) fl:mu ?U52.
        ?U52 math:notGreaterThan 0.01} ?U51)} => {?U47 med:isPrescribed ?U45}}}]
  [ a r:Fact; r:gives {{(med:Ann med:Fever) fl:mu 0.8 .
    (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
    (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
    (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:SevereAsthma) fl:mu 0.001 .
    (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
    med:aspirinHighDose med:prescribedFor med:Fever.
    med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
    med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
    med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
    med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
    med:betaBlocker med:excludedFor med:SevereAsthma.
    med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
    {?U45 med:prescribedFor ?U46.
      (?U47 ?U46) fl:mu ?U48.
      ?U48 math:greaterThan 0.7 .
      ?U49 e:findall (?U50 {?U45 med:excludedFor ?U50} ?U51).
      ?U49 e:findall (?U50 {?U45 med:excludedFor ?U50.
        (?U47 ?U50) fl:mu ?U52.
        ?U52 math:notGreaterThan 0.01} ?U51)} => {?U47 med:isPrescribed ?U45}} log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}}]);
  r:rule <#lemma324>.

<#lemma195> a r:Inference; r:gives {:logid0 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b :c} log:includes {:a :b :c}}]);
  r:rule <#lemma325>.

<#lemma196> a r:Inference; r:gives {:logid1 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b :c} log:includes {:a :b :c}}]);
  r:rule <#lemma326>.

<#lemma197> a r:Inference; r:gives {:logid3 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b _:qe1} log:includes {:a :b _:qe1}}]);
  r:rule <#lemma327>.

<#lemma198> a r:Inference; r:gives {:logig0 :result true}; r:evidence (
  <#lemma315>
  [ a r:Fact; r:gives {{:a :b :c} log:includes {:a :b :c}}]);
  r:rule <#lemma328>.

<#lemma199> a r:Inference; r:gives {:logig1 :result true}; r:evidence (
  <#lemma315>
  [ a r:Fact; r:gives {{:a :b :c} log:includes {:a :b :c}}]);
  r:rule <#lemma329>.

<#lemma200> a r:Inference; r:gives {:logig3 :result true}; r:evidence (
  <#lemma317>
  [ a r:Fact; r:gives {{:a :b _:qe1} log:includes {:a :b _:qe1}}]);
  r:rule <#lemma330>.

<#lemma201> a r:Inference; r:gives {:logis0 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics {:a :b :c}}]
  [ a r:Fact; r:gives {{:a :b :c} log:includes {:a :b :c}}]);
  r:rule <#lemma331>.

<#lemma202> a r:Inference; r:gives {:logis1 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics {:a :b :c}}]
  [ a r:Fact; r:gives {{:a :b :c} log:includes {:a :b :c}}]);
  r:rule <#lemma332>.

<#lemma203> a r:Inference; r:gives {:logis3 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics {:a :b _:c_10}}]
  [ a r:Fact; r:gives {{:a :b _:c_10} log:includes {:a :b _:c_10}}]);
  r:rule <#lemma333>.

<#lemma204> a r:Inference; r:gives {:logne1 :result true}; r:evidence (
  [ a r:Fact; r:gives {:a log:notEqualTo :b}]);
  r:rule <#lemma334>.

<#lemma205> a r:Inference; r:gives {:logned1 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b :c} log:notEqualTo {:a :b _:qe1}}]);
  r:rule <#lemma335>.

<#lemma206> a r:Inference; r:gives {:logned2 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b _:qe1} log:notEqualTo {:a :b :c}}]);
  r:rule <#lemma336>.

<#lemma207> a r:Inference; r:gives {:logneg1 :result true}; r:evidence (
  <#lemma315>
  [ a r:Fact; r:gives {{:a :b :c} log:notEqualTo {:a :b _:qe1}}]);
  r:rule <#lemma337>.

<#lemma208> a r:Inference; r:gives {:logneg2 :result true}; r:evidence (
  <#lemma317>
  [ a r:Fact; r:gives {{:a :b _:qe1} log:notEqualTo {:a :b :c}}]);
  r:rule <#lemma338>.

<#lemma209> a r:Inference; r:gives {:logni1 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:b :a :c.
    :e :d :f.
    :h :g :i} log:notIncludes {:e :d :f.
    :b :e :c}}]);
  r:rule <#lemma339>.

<#lemma210> a r:Inference; r:gives {:logni2 :result true}; r:evidence (
  <#lemma340>
  [ a r:Fact; r:gives {{:b :a :c.
    :e :d :f.
    :h :g :i} log:notIncludes {:e :d :f.
    :b :e :c}}]);
  r:rule <#lemma341>.

<#lemma211> a r:Inference; r:gives {:logni3 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics {(med:Ann med:Fever) fl:mu 0.8 .
    (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
    (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
    (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:SevereAsthma) fl:mu 0.001 .
    (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
    med:aspirinHighDose med:prescribedFor med:Fever.
    med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
    med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
    med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
    med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
    med:betaBlocker med:excludedFor med:SevereAsthma.
    med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
    {?U53 med:prescribedFor ?U54.
      (?U55 ?U54) fl:mu ?U56.
      ?U56 math:greaterThan 0.7 .
      ?U57 e:findall (?U58 {?U53 med:excludedFor ?U58} ?U59).
      ?U57 e:findall (?U58 {?U53 med:excludedFor ?U58.
        (?U55 ?U58) fl:mu ?U60.
        ?U60 math:notGreaterThan 0.01} ?U59)} => {?U55 med:isPrescribed ?U53}}}]
  [ a r:Fact; r:gives {{(med:Ann med:Fever) fl:mu 0.8 .
    (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
    (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
    (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
    (med:Joe med:SevereAsthma) fl:mu 0.001 .
    (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
    med:aspirinHighDose med:prescribedFor med:Fever.
    med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
    med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
    med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
    med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
    med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
    med:betaBlocker med:excludedFor med:SevereAsthma.
    med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
    {?U53 med:prescribedFor ?U54.
      (?U55 ?U54) fl:mu ?U56.
      ?U56 math:greaterThan 0.7 .
      ?U57 e:findall (?U58 {?U53 med:excludedFor ?U58} ?U59).
      ?U57 e:findall (?U58 {?U53 med:excludedFor ?U58.
        (?U55 ?U58) fl:mu ?U60.
        ?U60 math:notGreaterThan 0.01} ?U59)} => {?U55 med:isPrescribed ?U53}} log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}}]);
  r:rule <#lemma342>.

<#lemma212> a r:Inference; r:gives {:lognid2 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:a :b _:qe1} log:notIncludes {:a :b :c}}]);
  r:rule <#lemma343>.

<#lemma213> a r:Inference; r:gives {:lognig2 :result true}; r:evidence (
  <#lemma317>
  [ a r:Fact; r:gives {{:a :b _:qe1} log:notIncludes {:a :b :c}}]);
  r:rule <#lemma344>.

<#lemma214> a r:Inference; r:gives {:lognis2 :result true}; r:evidence (
  [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics {:a :b _:c_10}}]
  [ a r:Fact; r:gives {{:a :b _:c_10} log:notIncludes {:a :b :c}}]);
  r:rule <#lemma345>.

<#lemma215> a r:Inference; r:gives {:logu1 :result true}; r:evidence (
  [ a r:Fact; r:gives {med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"}]);
  r:rule <#lemma346>.

<#lemma216> a r:Inference; r:gives {:logu2 :result true}; r:evidence (
  [ a r:Fact; r:gives {:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"}]);
  r:rule <#lemma347>.

<#lemma217> a r:Inference; r:gives {:mathd1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1 1) math:difference 0}]);
  r:rule <#lemma348>.

<#lemma218> a r:Inference; r:gives {:mathd2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0}]);
  r:rule <#lemma349>.

<#lemma219> a r:Inference; r:gives {:mathe1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(2 3.0) math:exponentiation 8.0}]
  [ a r:Fact; r:gives {(4.0 3.0) math:product 12.0}]);
  r:rule <#lemma350>.

<#lemma220> a r:Inference; r:gives {:mathg1 :result true}; r:evidence (
  [ a r:Fact; r:gives {2 math:greaterThan 1}]);
  r:rule <#lemma351>.

<#lemma221> a r:Inference; r:gives {:mathg2 :result true}; r:evidence (
  [ a r:Fact; r:gives {"02" math:greaterThan "1"}]);
  r:rule <#lemma352>.

<#lemma222> a r:Inference; r:gives {:mathm1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:u :v :u) math:memberCount 3}]);
  r:rule <#lemma353>.

<#lemma223> a r:Inference; r:gives {:mathm2 :result true}; r:evidence (
  [ a r:Fact; r:gives {{:s :p :o1.
    :s :p :o2} math:memberCount 2}]);
  r:rule <#lemma354>.

<#lemma224> a r:Inference; r:gives {:mathm3 :result true}; r:evidence (
  [ a r:Fact; r:gives {($ :u :v $) math:memberCount 2}]);
  r:rule <#lemma355>.

<#lemma225> a r:Inference; r:gives {:mathnl1 :result true}; r:evidence (
  [ a r:Fact; r:gives {7 math:notLessThan 5}]);
  r:rule <#lemma356>.

<#lemma226> a r:Inference; r:gives {:maths1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1 1) math:sum 2}]);
  r:rule <#lemma357>.

<#lemma227> a r:Inference; r:gives {:maths2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1" "1") math:sum 2}]);
  r:rule <#lemma358>.

<#lemma228> a r:Inference; r:gives {:maths3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0}]);
  r:rule <#lemma359>.

<#lemma229> a r:Inference; r:gives {:maths4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1D"^^xsd:duration) math:sum 86400.0}]);
  r:rule <#lemma360>.

<#lemma230> a r:Inference; r:gives {:rdff1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:f :g) rdf:first :f}]);
  r:rule <#lemma361>.

<#lemma231> a r:Inference; r:gives {:rdfr1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:f :g) rdf:rest (:g)}]);
  r:rule <#lemma362>.

<#lemma232> a r:Inference; r:gives {:strc1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("eul" "er") string:concatenation "euler"}]);
  r:rule <#lemma363>.

<#lemma233> a r:Inference; r:gives {:strc2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("€" "Ø"@en-us) string:concatenation "€Ø"}]);
  r:rule <#lemma364>.

<#lemma234> a r:Inference; r:gives {:strc3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("test " "is \"ok\"") string:concatenation "test is \"ok\""}]);
  r:rule <#lemma365>.

<#lemma235> a r:Inference; r:gives {:strc4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("test " "is \"ok\"") string:concatenation "test is \"ok\""}]
  [ a r:Fact; r:gives {("test is \"ok\"" " again") string:concatenation "test is \"ok\" again"}]);
  r:rule <#lemma366>.

<#lemma236> a r:Inference; r:gives {:strcn1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"Rob Smith" string:contains "Smith"}]);
  r:rule <#lemma367>.

<#lemma237> a r:Inference; r:gives {:strcn2 :result true}; r:evidence (
  [ a r:Fact; r:gives {"Rob Smith"@en string:contains "Smith"@fr}]);
  r:rule <#lemma368>.

<#lemma238> a r:Inference; r:gives {:strci1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"Tim" string:containsIgnoringCase "IM"}]);
  r:rule <#lemma369>.

<#lemma239> a r:Inference; r:gives {:strm1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"abracadabra" string:matches "(a|b|r|c|d)+"}]);
  r:rule <#lemma370>.

<#lemma240> a r:Inference; r:gives {:strs1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"}]);
  r:rule <#lemma371>.

<#lemma241> a r:Inference; r:gives {:strs2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("{x" "{(.)") string:scrape "x"}]);
  r:rule <#lemma372>.

<#lemma242> a r:Inference; r:gives {:strs3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")}]);
  r:rule <#lemma373>.

<#lemma243> a r:Inference; r:gives {:strs4 :result true}; r:evidence (
  [ a r:Fact; r:gives {"euler" string:startsWith "eu"}]);
  r:rule <#lemma374>.

<#lemma244> a r:Inference; r:gives {:timed1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"2006-12-14"^^xsd:date time:day "14"}]);
  r:rule <#lemma375>.

<#lemma245> a r:Inference; r:gives {:timem1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"2006-12-14"^^xsd:date time:month "12"}]);
  r:rule <#lemma376>.

<#lemma246> a r:Inference; r:gives {:timey1 :result true}; r:evidence (
  [ a r:Fact; r:gives {"2006-12-14"^^xsd:date time:year "2006"}]);
  r:rule <#lemma377>.

<#lemma247> a r:Inference; r:gives {:ef1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1) e:findall (_:sk61 {:s :p _:sk61} ({:s1 :p1 :o1} {:s2 :p2 :o2.
    :s3 :p3 :o3}))}]);
  r:rule <#lemma378>.

<#lemma248> a r:Inference; r:gives {:ef3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1) e:findall (_:sk62 {_:sk62 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) (:Xanthippe :Xanthippe :Dan :Tim))}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1) e:findall (_:sk62 {_:sk62 a :Female} (:Xanthippe :Xanthippe :Dan :Tim) (:Xanthippe :Dan :Tim))}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1) e:findall (_:sk62 {_:sk62 a :Human} (:Xanthippe :Dan :Tim) (:Dan :Tim))}]);
  r:rule <#lemma379>.

<#lemma249> a r:Inference; r:gives {:eo1 :result true}; r:evidence (
  <#lemma298>
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1) e:optional {:g :h :i}}]);
  r:rule <#lemma380>.

<#lemma250> a r:Inference; r:gives {3 :circleArea 28.274333882308138}; r:evidence (
  [ a r:Fact; r:gives {(3 2) prolog:power 9}]
  [ a r:Fact; r:gives {() prolog:pi 3.141592653589793}]
  [ a r:Fact; r:gives {(9 3.141592653589793) prolog:product 28.274333882308138}]);
  r:rule <#lemma381>.

<#lemma251> a r:Extraction; r:gives {{3 :circleArea ?x0.
  ?x0 math:greaterThan 28.27 .
  ?x0 math:lessThan 28.28} => {:ca1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma252> a r:Inference; r:gives {5 :whenGreater 3}; r:evidence (
  [ a r:Fact; r:gives {({((5 3)) prolog:ground true} {(5 3) prolog:arithmetic_greater_than true}) prolog:when true}]);
  r:rule <#lemma382>.

<#lemma253> a r:Extraction; r:gives {{5 :whenGreater ?x0.
  ?x0 log:equalTo 3} => {:wg1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma254> a r:Extraction; r:gives {{("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n"} => {:ef4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma255> a r:Extraction; r:gives {{({:a :b :c.
    :d :e :f} true) e:graphDifference {:a :b :c.
    :d :e :f}} => {:egd1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma256> a r:Extraction; r:gives {{(true {:d :e :f}) e:graphDifference true} => {:egd2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma257> a r:Extraction; r:gives {{({:a :b :c.
    :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} => {:egd3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma258> a r:Extraction; r:gives {{({:a :b :c.
    :d :e :f.
    :g :h :i} {?x0 :e :f}) e:graphDifference {:a :b :c.
    :g :h :i}} => {:egd4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma259> a r:Extraction; r:gives {{({:a :b :c} {:a :b :c.
    :u :v :w.
    :x :y :z}) e:graphDifference true} => {:egd5 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma260> a r:Extraction; r:gives {{(true) e:graphIntersection true} => {:egi1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma261> a r:Extraction; r:gives {{(true {:d :e :f}) e:graphIntersection true} => {:egi2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma262> a r:Extraction; r:gives {{({:a :b :c.
    :d :e :f.
    :g :h :i} true) e:graphIntersection true} => {:egi3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma263> a r:Extraction; r:gives {{({:a :b :c.
    :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} => {:egi4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma264> a r:Extraction; r:gives {{({:a :b :c.
    :d :e :f.
    :g :h :i} {:g :h :i.
    ?x0 :e :f} {?x0 :e :f.
    :g :h :i}) e:graphIntersection {?x0 :e :f.
    :g :h :i}} => {:egi5 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma265> a r:Extraction; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} => {:el1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma266> a r:Extraction; r:gives {{(8 5 6 7 9 4) e:max 9} => {:em1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma267> a r:Extraction; r:gives {{(8 5 6 7 9 4) e:min 4} => {:em2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma268> a r:Extraction; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} => {:er1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma269> a r:Extraction; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} => {:es1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma270> a r:Extraction; r:gives {{(9 3 8 3 5 7 7 9 9 2) e:sort (2 3 3 5 7 7 8 9 9 9)} => {:es2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma271> a r:Extraction; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} => {:ew1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma272> a r:Extraction; r:gives {{"Hello World!" e:wwwFormEncode "Hello+World%21"} => {:ew2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma273> a r:Extraction; r:gives {{(-4) prolog:abs 4} => {:prologa2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma274> a r:Extraction; r:gives {{((:a :b :c) (:d :e) (:a :b :c :d :e)) prolog:append true} => {:prologa1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma275> a r:Extraction; r:gives {{(6 8) prolog:arithmetic_less_than_or_equal true} => {:prologaltoe1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma276> a r:Extraction; r:gives {{({:s :q :o}) prolog:assertz true.
  :s :q :o} => {:prologaz1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma277> a r:Extraction; r:gives {{("HOME"^^prolog:atom (72 79 77 69)) prolog:atom_codes true} => {:prologac1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma278> a r:Extraction; r:gives {{("123"^^prolog:atom 123) prolog:atom_number true} => {:prologan1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma279> a r:Extraction; r:gives {{(("Hello "^^prolog:atom "World :-)"^^prolog:atom) "Hello World :-)"^^prolog:atom) prolog:atomic_list_concat true} => {:prologalc1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma280> a r:Extraction; r:gives {{((:a :b :c) :a (:b :c)) prolog:C true} => {:prologC1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma281> a r:Extraction; r:gives {{({:prologaltoe1 :result true}) prolog:call true} => {:prologc1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma282> a r:Extraction; r:gives {{({({:prologaltoe3 :result true}) prolog:call true}) prolog:not_provable true} => {:prologc2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma283> a r:Extraction; r:gives {{() prolog:cut true} => {:prologc3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma284> a r:Extraction; r:gives {{(?x0 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
  ?x1 math:equalTo 0 .
  (?x0 ?x1) prolog:date_time_stamp true} => {:prologdts1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma285> a r:Extraction; r:gives {{({"fail"^^prolog:atom}) prolog:not_provable true} => {:prologf1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma286> a r:Extraction; r:gives {{(9 4) prolog:integer_quotient 2} => {:prologiq1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma287> a r:Extraction; r:gives {{(8 4) prolog:max 8} => {:prologm1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma288> a r:Extraction; r:gives {{(8 4) prolog:min 4} => {:prologm2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma289> a r:Extraction; r:gives {{(1) prolog:minus -1} => {:prologm3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma290> a r:Extraction; r:gives {{(:a :b) prolog:not_unifiable true} => {:prolognu1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma291> a r:Extraction; r:gives {{(1) prolog:plus 1} => {:prologp1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma292> a r:Extraction; r:gives {{(1 1) prolog:plus 2} => {:prologp2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma293> a r:Extraction; r:gives {{(9 4) prolog:product 36} => {:prologp3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma294> a r:Extraction; r:gives {{({:s :q :o}) prolog:retract true.
  ({({:s :q :o}) prolog:call true}) prolog:not_provable true} => {:prologr1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma295> a r:Extraction; r:gives {{((9 3 8 3 5 7 7 9 9 2) (2 3 5 7 8 9)) prolog:sort true} => {:prologs1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma296> a r:Extraction; r:gives {{(?x0 ("date"^^prolog:atom 1970 1 1 0 0 0.0 0 "UTC"^^prolog:atom "-"^^prolog:atom)) prolog:univ true.
  (0.0 ?x0 "UTC"^^prolog:atom) prolog:stamp_date_time true} => {:prologsdt1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma297> a r:Extraction; r:gives {{("uv" 55) prolog:term_greater_than true} => {:prologtgt1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma298> a r:Extraction; r:gives {:a :b :d};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma299> a r:Extraction; r:gives {{true.
  :a :b :d} => {:prologt1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma300> a r:Extraction; r:gives {{(:b :b) prolog:unify true} => {:prologu1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma301> a r:Extraction; r:gives {{({:s :p :o} (:p :s :o)) prolog:univ true} => {:prologu2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma302> a r:Extraction; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} => {:lista1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma303> a r:Extraction; r:gives {{(:a :b :c) list:first :a} => {:listf1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma304> a r:Extraction; r:gives {{:c list:in (:a :b :c)} => {:listi1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma305> a r:Extraction; r:gives {{(:a :b :c) list:last :c} => {:listl1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma306> a r:Extraction; r:gives {{(:a :b :c :d) list:member :b} => {:listm1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma307> a r:Extraction; r:gives {{(:a :b :c) list:rest (:b :c)} => {:listr1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma308> a r:Extraction; r:gives {{(true) log:conjunction true} => {:logc1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma309> a r:Extraction; r:gives {{(true {:u :v :w} {:j :k :l.
    :x :y :z}) log:conjunction {:j :k :l.
    :u :v :w.
    :x :y :z}} => {:logc2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma310> a r:Extraction; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} => {:logc3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma311> a r:Extraction; r:gives {{(:a ?x0) log:equalTo (?x1 :b)} => {:loge1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma312> a r:Extraction; r:gives {{($ :u :v $) log:equalTo ($ :u :v $)} => {:loge2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma313> a r:Extraction; r:gives {{{:a :b :c} log:equalTo {:a :b :c}} => {:loged0 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma314> a r:Extraction; r:gives {{{:a :b _:qe1} log:equalTo {:a :b ?x0}} => {:loged3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma315> a r:Extraction; r:gives {:abc :graph {:a :b :c}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma316> a r:Extraction; r:gives {{:abc :graph ?x0.
  ?x0 log:equalTo {:a :b :c}} => {:logeg0 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma317> a r:Extraction; r:gives {:ab_c :graph {:a :b _:qe1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma318> a r:Extraction; r:gives {{:ab_c :graph ?x0.
  ?x0 log:equalTo {:a :b ?x1}} => {:logeg3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma319> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?x0.
  ?x0 log:equalTo {:a :b :c}} => {:loges0 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma320> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?x0.
  ?x0 log:equalTo {:a :b ?x1}} => {:loges3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma321> a r:Extraction; r:gives {{{:b :a :c.
    :e :d :f.
    :h :g :i.
    :k :j :l} log:includes {:k :j :l.
    ?x0 :d ?x1}} => {:logi1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma322> a r:Extraction; r:gives {:ng1 :namedGraph {:b :a :c.
  :e :d :f.
  :h :g :i.
  :k :j :l}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma323> a r:Extraction; r:gives {{:ng1 :namedGraph ?x0.
  ?x0 log:includes {:k :j :l.
    ?x1 :d ?x2}} => {:logi2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma324> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?x0.
  ?x0 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} => {:logi3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma325> a r:Extraction; r:gives {{{:a :b :c} log:includes {:a :b :c}} => {:logid0 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma326> a r:Extraction; r:gives {{{:a :b :c} log:includes {:a :b ?x0}} => {:logid1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma327> a r:Extraction; r:gives {{{:a :b _:qe1} log:includes {:a :b ?x0}} => {:logid3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma328> a r:Extraction; r:gives {{:abc :graph ?x0.
  ?x0 log:includes {:a :b :c}} => {:logig0 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma329> a r:Extraction; r:gives {{:abc :graph ?x0.
  ?x0 log:includes {:a :b ?x1}} => {:logig1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma330> a r:Extraction; r:gives {{:ab_c :graph ?x0.
  ?x0 log:includes {:a :b ?x1}} => {:logig3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma331> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?x0.
  ?x0 log:includes {:a :b :c}} => {:logis0 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma332> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/abc.n3> log:semantics ?x0.
  ?x0 log:includes {:a :b ?x1}} => {:logis1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma333> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?x0.
  ?x0 log:includes {:a :b ?x1}} => {:logis3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma334> a r:Extraction; r:gives {{:a log:notEqualTo :b} => {:logne1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma335> a r:Extraction; r:gives {{{:a :b :c} log:notEqualTo {:a :b _:qe1}} => {:logned1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma336> a r:Extraction; r:gives {{{:a :b _:qe1} log:notEqualTo {:a :b :c}} => {:logned2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma337> a r:Extraction; r:gives {{:abc :graph ?x0.
  ?x0 log:notEqualTo {:a :b _:qe1}} => {:logneg1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma338> a r:Extraction; r:gives {{:ab_c :graph ?x0.
  ?x0 log:notEqualTo {:a :b :c}} => {:logneg2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma339> a r:Extraction; r:gives {{{:b :a :c.
    :e :d :f.
    :h :g :i} log:notIncludes {:e :d :f.
    :b :e :c}} => {:logni1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma340> a r:Extraction; r:gives {:ng2 :namedGraph {:b :a :c.
  :e :d :f.
  :h :g :i}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma341> a r:Extraction; r:gives {{:ng2 :namedGraph ?x0.
  ?x0 log:notIncludes {:e :d :f.
    :b :e :c}} => {:logni2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma342> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/medic.n3> log:semantics ?x0.
  ?x0 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} => {:logni3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma343> a r:Extraction; r:gives {{{:a :b _:qe1} log:notIncludes {:a :b :c}} => {:lognid2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma344> a r:Extraction; r:gives {{:ab_c :graph ?x0.
  ?x0 log:notIncludes {:a :b :c}} => {:lognig2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma345> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/ab_c.n3> log:semantics ?x0.
  ?x0 log:notIncludes {:a :b :c}} => {:lognis2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma346> a r:Extraction; r:gives {{med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} => {:logu1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma347> a r:Extraction; r:gives {{:betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} => {:logu2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma348> a r:Extraction; r:gives {{(1 1) math:difference 0} => {:mathd1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma349> a r:Extraction; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.0} => {:mathd2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma350> a r:Extraction; r:gives {{(2 ?x0) math:exponentiation 8.0 .
  (4.0 ?x0) math:product 12.0} => {:mathe1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma351> a r:Extraction; r:gives {{2 math:greaterThan 1} => {:mathg1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma352> a r:Extraction; r:gives {{"02" math:greaterThan "1"} => {:mathg2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma353> a r:Extraction; r:gives {{(:u :v :u) math:memberCount 3} => {:mathm1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma354> a r:Extraction; r:gives {{{:s :p :o1.
    :s :p :o2} math:memberCount 2} => {:mathm2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma355> a r:Extraction; r:gives {{($ :u :v $) math:memberCount 2} => {:mathm3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma356> a r:Extraction; r:gives {{7 math:notLessThan 5} => {:mathnl1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma357> a r:Extraction; r:gives {{(1 1) math:sum 2} => {:maths1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma358> a r:Extraction; r:gives {{("1" "1") math:sum 2} => {:maths2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma359> a r:Extraction; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} => {:maths3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma360> a r:Extraction; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} => {:maths4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma361> a r:Extraction; r:gives {{(:f :g) rdf:first :f} => {:rdff1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma362> a r:Extraction; r:gives {{(:f :g) rdf:rest (:g)} => {:rdfr1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma363> a r:Extraction; r:gives {{("eul" "er") string:concatenation "euler"} => {:strc1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma364> a r:Extraction; r:gives {{("€" "Ø"@en-us) string:concatenation "€Ø"} => {:strc2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma365> a r:Extraction; r:gives {{("test " "is \"ok\"") string:concatenation "test is \"ok\""} => {:strc3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma366> a r:Extraction; r:gives {{("test " "is \"ok\"") string:concatenation ?x0.
  (?x0 " again") string:concatenation "test is \"ok\" again"} => {:strc4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma367> a r:Extraction; r:gives {{"Rob Smith" string:contains "Smith"} => {:strcn1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma368> a r:Extraction; r:gives {{"Rob Smith"@en string:contains "Smith"@fr} => {:strcn2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma369> a r:Extraction; r:gives {{"Tim" string:containsIgnoringCase "IM"} => {:strci1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma370> a r:Extraction; r:gives {{"abracadabra" string:matches "(a|b|r|c|d)+"} => {:strm1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma371> a r:Extraction; r:gives {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org"} => {:strs1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma372> a r:Extraction; r:gives {{("{x" "{(.)") string:scrape "x"} => {:strs2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma373> a r:Extraction; r:gives {{("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995")} => {:strs3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma374> a r:Extraction; r:gives {{"euler" string:startsWith "eu"} => {:strs4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma375> a r:Extraction; r:gives {{"2006-12-14"^^xsd:date time:day "14"} => {:timed1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma376> a r:Extraction; r:gives {{"2006-12-14"^^xsd:date time:month "12"} => {:timem1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma377> a r:Extraction; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} => {:timey1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma378> a r:Extraction; r:gives {{?x0 e:findall (?x1 {:s :p ?x1} ({:s1 :p1 :o1} {:s2 :p2 :o2.
    :s3 :p3 :o3}))} => {:ef1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma379> a r:Extraction; r:gives {{?x0 e:findall (?x1 {?x1 a :Male} (:Socrates :Xanthippe :Xanthippe :Dan :Tim) ?x2).
  ?x0 e:findall (?x1 {?x1 a :Female} ?x2 ?x3).
  ?x0 e:findall (?x1 {?x1 a :Human} ?x3 (:Dan :Tim))} => {:ef3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma380> a r:Extraction; r:gives {{:a :b :d.
  ?x0 e:optional {:g :h :i}} => {:eo1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma381> a r:Extraction; r:gives {{?x1 :circleArea ?x3} <= {(?x1 2) prolog:power ?x0.
  () prolog:pi ?x2.
  (?x0 ?x2) prolog:product ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

<#lemma382> a r:Extraction; r:gives {{?x0 :whenGreater ?x1} <= {({((?x0 ?x1)) prolog:ground true} {(?x0 ?x1) prolog:arithmetic_greater_than true}) prolog:when true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>].

#ENDS 1.713 [sec] TC=250 TP=1238 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/rifP.n3 --query http://eulersharp.sourceforge.net/2007/07test/rifQ.n3

PREFIX func: <http://www.w3.org/2007/rif-builtin-function#>
PREFIX pred: <http://www.w3.org/2007/rif-builtin-predicate#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX : <http://eulersharp.sourceforge.net/2007/07test#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:component <#lemma11>;
  r:component <#lemma12>;
  r:component <#lemma13>;
  r:component <#lemma14>;
  r:component <#lemma15>;
  r:component <#lemma16>;
  r:component <#lemma17>;
  r:component <#lemma18>;
  r:component <#lemma19>;
  r:component <#lemma20>;
  r:component <#lemma21>;
  r:component <#lemma22>;
  r:component <#lemma23>;
  r:component <#lemma24>;
  r:component <#lemma25>;
  r:component <#lemma26>;
  r:component <#lemma27>;
  r:component <#lemma28>;
  r:component <#lemma29>;
  r:component <#lemma30>;
  r:component <#lemma31>;
  r:component <#lemma32>;
  r:component <#lemma33>;
  r:component <#lemma34>;
  r:component <#lemma35>;
  r:component <#lemma36>;
  r:component <#lemma37>;
  r:component <#lemma38>;
  r:component <#lemma39>;
  r:component <#lemma40>;
  r:component <#lemma41>;
  r:component <#lemma42>;
  r:component <#lemma43>;
  r:component <#lemma44>;
  r:component <#lemma45>;
  r:component <#lemma46>;
  r:component <#lemma47>;
  r:component <#lemma48>;
  r:component <#lemma49>;
  r:component <#lemma50>;
  r:component <#lemma51>;
  r:component <#lemma52>;
  r:component <#lemma53>;
  r:component <#lemma54>;
  r:component <#lemma55>;
  r:component <#lemma56>;
  r:component <#lemma57>;
  r:component <#lemma58>;
  r:component <#lemma59>;
  r:component <#lemma60>;
  r:component <#lemma61>;
  r:component <#lemma62>;
  r:component <#lemma63>;
  r:component <#lemma64>;
  r:component <#lemma65>;
  r:component <#lemma66>;
  r:component <#lemma67>;
  r:component <#lemma68>;
  r:component <#lemma69>;
  r:component <#lemma70>;
  r:component <#lemma71>;
  r:component <#lemma72>;
  r:component <#lemma73>;
  r:component <#lemma74>;
  r:component <#lemma75>;
  r:component <#lemma76>;
  r:component <#lemma77>;
  r:component <#lemma78>;
  r:component <#lemma79>;
  r:component <#lemma80>;
  r:component <#lemma81>;
  r:component <#lemma82>;
  r:component <#lemma83>;
  r:component <#lemma84>;
  r:component <#lemma85>;
  r:component <#lemma86>;
  r:component <#lemma87>;
  r:component <#lemma88>;
  r:component <#lemma89>;
  r:component <#lemma90>;
  r:component <#lemma91>;
  r:component <#lemma92>;
  r:component <#lemma93>;
  r:component <#lemma94>;
  r:component <#lemma95>;
  r:component <#lemma96>;
  r:component <#lemma97>;
  r:component <#lemma98>;
  r:component <#lemma99>;
  r:component <#lemma100>;
  r:component <#lemma101>;
  r:component <#lemma102>;
  r:component <#lemma103>;
  r:component <#lemma104>;
  r:component <#lemma105>;
  r:component <#lemma106>;
  r:component <#lemma107>;
  r:component <#lemma108>;
  r:component <#lemma109>;
  r:component <#lemma110>;
  r:component <#lemma111>;
  r:component <#lemma112>;
  r:component <#lemma113>;
  r:component <#lemma114>;
  r:component <#lemma115>;
  r:component <#lemma116>;
  r:component <#lemma117>;
  r:component <#lemma118>;
  r:component <#lemma119>;
  r:component <#lemma120>;
  r:component <#lemma121>;
  r:component <#lemma122>;
  r:component <#lemma123>;
  r:component <#lemma124>;
  r:component <#lemma125>;
  r:component <#lemma126>;
  r:component <#lemma127>;
  r:component <#lemma128>;
  r:component <#lemma129>;
  r:component <#lemma130>;
  r:component <#lemma131>;
  r:component <#lemma132>;
  r:component <#lemma133>;
  r:component <#lemma134>;
  r:component <#lemma135>;
  r:component <#lemma136>;
  r:component <#lemma137>;
  r:component <#lemma138>;
  r:component <#lemma139>;
  r:component <#lemma140>;
  r:component <#lemma141>;
  r:component <#lemma142>;
  r:component <#lemma143>;
  r:component <#lemma144>;
  r:component <#lemma145>;
  r:component <#lemma146>;
  r:component <#lemma147>;
  r:component <#lemma148>;
  r:component <#lemma149>;
  r:component <#lemma150>;
  r:component <#lemma151>;
  r:component <#lemma152>;
  r:component <#lemma153>;
  r:component <#lemma154>;
  r:component <#lemma155>;
  r:component <#lemma156>;
  r:component <#lemma157>;
  r:component <#lemma158>;
  r:component <#lemma159>;
  r:component <#lemma160>;
  r:component <#lemma161>;
  r:component <#lemma162>;
  r:component <#lemma163>;
  r:component <#lemma164>;
  r:component <#lemma165>;
  r:component <#lemma166>;
  r:component <#lemma167>;
  r:component <#lemma168>;
  r:component <#lemma169>;
  r:component <#lemma170>;
  r:component <#lemma171>;
  r:component <#lemma172>;
  r:component <#lemma173>;
  r:component <#lemma174>;
  r:component <#lemma175>;
  r:component <#lemma176>;
  r:component <#lemma177>;
  r:component <#lemma178>;
  r:component <#lemma179>;
  r:component <#lemma180>;
  r:component <#lemma181>;
  r:component <#lemma182>;
  r:component <#lemma183>;
  r:component <#lemma184>;
  r:component <#lemma185>;
  r:component <#lemma186>;
  r:component <#lemma187>;
  r:component <#lemma188>;
  r:component <#lemma189>;
  r:component <#lemma190>;
  r:component <#lemma191>;
  r:component <#lemma192>;
  r:component <#lemma193>;
  r:component <#lemma194>;
  r:component <#lemma195>;
  r:component <#lemma196>;
  r:component <#lemma197>;
  r:component <#lemma198>;
  r:component <#lemma199>;
  r:component <#lemma200>;
  r:component <#lemma201>;
  r:component <#lemma202>;
  r:component <#lemma203>;
  r:component <#lemma204>;
  r:component <#lemma205>;
  r:component <#lemma206>;
  r:component <#lemma207>;
  r:component <#lemma208>;
  r:component <#lemma209>;
  r:component <#lemma210>;
  r:component <#lemma211>;
  r:component <#lemma212>;
  r:component <#lemma213>;
  r:component <#lemma214>;
  r:component <#lemma215>;
  r:component <#lemma216>;
  r:component <#lemma217>;
  r:component <#lemma218>;
  r:component <#lemma219>;
  r:component <#lemma220>;
  r:component <#lemma221>;
  r:component <#lemma222>;
  r:gives {
    {{("chat"@fr "chien"@fr) pred:literal-not-identical true} => {:literal-not-identical-1 :result true}} a :PASS.
    {{(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true} => {:iri-string-1 :result true}} a :PASS.
    {{(1 1) func:numeric-add 2} => {:numeric-add-1 :result true}} a :PASS.
    {{(5 2) func:numeric-subtract 3} => {:numeric-subtract-1 :result true}} a :PASS.
    {{(5 2) func:numeric-multiply 10} => {:numeric-multiply-1 :result true}} a :PASS.
    {{(5 2) func:numeric-divide 2.5} => {:numeric-divide-1 :result true}} a :PASS.
    {{(5 2) func:numeric-integer-divide 2} => {:numeric-integer-divide-1 :result true}} a :PASS.
    {{(10 3) func:numeric-mod 1} => {:numeric-mod-1 :result true}} a :PASS.
    {{(6 -2) func:numeric-mod 0} => {:numeric-mod-2 :result true}} a :PASS.
    {{(4.5 1.2) func:numeric-mod 0.9000000000000004} => {:numeric-mod-3 :result 0.9000000000000004}} a :PASS.
    {{(123.0 6.0) func:numeric-mod 3.0} => {:numeric-mod-4 :result true}} a :PASS.
    {{(1 1.0) pred:numeric-equal true} => {:numeric-equal-1 :result true}} a :PASS.
    {{(2.0 3) pred:numeric-less-than true} => {:numeric-less-than-1 :result true}} a :PASS.
    {{(1.0 0) pred:numeric-greater-than true} => {:numeric-greater-than-1 :result true}} a :PASS.
    {{(1 1.01) pred:numeric-not-equal true} => {:numeric-not-equal-1 :result true}} a :PASS.
    {{(3 5.0) pred:numeric-less-than-or-equal true} => {:numeric-less-than-or-equal-1 :result true}} a :PASS.
    {{(1.0 1) pred:numeric-greater-than-or-equal true} => {:numeric-greater-than-or-equal-1 :result true}} a :PASS.
    {{(false) func:not true} => {:not-1 :result true}} a :PASS.
    {{(true) func:not false} => {:not-2 :result true}} a :PASS.
    {{(false false) pred:boolean-equal true} => {:boolean-equal-1 :result true}} a :PASS.
    {{(false true) pred:boolean-less-than true} => {:boolean-less-than-1 :result true}} a :PASS.
    {{(true false) pred:boolean-greater-than true} => {:boolean-greater-than-1 :result true}} a :PASS.
    {{("abc" "abc") func:compare 0} => {:compare-1 :result true}} a :PASS.
    {{("Straßen" "Straße") func:compare 1} => {:compare-2 :result true}} a :PASS.
    {{("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"} => {:concat-1 :result true}} a :PASS.
    {{(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."} => {:string-join-1 :result true}} a :PASS.
    {{(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"} => {:string-join-2 :result true}} a :PASS.
    {{(() "separator") func:string-join ""} => {:string-join-3 :result true}} a :PASS.
    {{("motor car" 6) func:substring " car"} => {:substring-1 :result true}} a :PASS.
    {{("metadata" 4 3) func:substring "ada"} => {:substring-2 :result true}} a :PASS.
    {{("12345" 1.5 2.6) func:substring "234"} => {:substring-3 :result true}} a :PASS.
    {{("12345" 0 3) func:substring "12"} => {:substring-4 :result true}} a :PASS.
    {{("12345" 5 -3) func:substring ""} => {:substring-5 :result true}} a :PASS.
    {{("12345" -3 5) func:substring "1"} => {:substring-6 :result true}} a :PASS.
    {{("Harp not on that string, madam; that is past.") func:string-length 45} => {:string-length-1 :result true}} a :PASS.
    {{(""@en) func:string-length 0} => {:string-length-2 :result true}} a :PASS.
    {{("abCd0") func:upper-case "ABCD0"} => {:upper-case-1 :result true}} a :PASS.
    {{("ABc!D") func:lower-case "abc!d"} => {:lower-case-1 :result true}} a :PASS.
    {{("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"} => {:encode-for-uri-1 :result true}} a :PASS.
    {{("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"} => {:encode-for-uri-2 :result true}} a :PASS.
    {{("100% organic") func:encode-for-uri "100%25%20organic"} => {:encode-for-uri-3 :result true}} a :PASS.
    {{("tattoo" "attoo") func:substring-before "t"} => {:substring-before-1 :result true}} a :PASS.
    {{("tattoo" "tatto") func:substring-before ""} => {:substring-before-2 :result true}} a :PASS.
    {{("tattoo" "tat") func:substring-after "too"} => {:substring-after-1 :result true}} a :PASS.
    {{("tattoo" "tattoo") func:substring-after ""} => {:substring-after-2 :result true}} a :PASS.
    {{("tattoo" "t") pred:contains true} => {:contains-1 :result true}} a :PASS.
    {{("tattoo" "tat") pred:starts-with true} => {:starts-with-1 :result true}} a :PASS.
    {{("tattoo" "tattoo") pred:ends-with true} => {:ends-with-1 :result true}} a :PASS.
    {{("abracadabra" "bra") pred:matches true} => {:matches-1 :result true}} a :PASS.
    {{("abracadabra" "^a.*a$") pred:matches true} => {:matches-2 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999} => {:year-from-dateTime-1 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5} => {:month-from-dateTime-1 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31} => {:day-from-dateTime-1 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13} => {:hours-from-dateTime-1 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20} => {:minutes-from-dateTime-1 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0} => {:seconds-from-dateTime-1 :result true}} a :PASS.
    {{("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999} => {:year-from-date-1 :result true}} a :PASS.
    {{("1999-05-31-05:00"^^xsd:date) func:month-from-date 5} => {:month-from-date-1 :result true}} a :PASS.
    {{("1999-05-31-05:00"^^xsd:date) func:day-from-date 31} => {:day-from-date-1 :result true}} a :PASS.
    {{("13:20:00-05:00"^^xsd:time) func:hours-from-time 13} => {:hours-from-time-1 :result true}} a :PASS.
    {{("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20} => {:minutes-from-time-1 :result true}} a :PASS.
    {{("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0} => {:seconds-from-time-1 :result true}} a :PASS.
    {{("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21} => {:years-from-duration-1 :result true}} a :PASS.
    {{("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1} => {:years-from-duration-2 :result true}} a :PASS.
    {{("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0} => {:years-from-duration-3 :result true}} a :PASS.
    {{("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3} => {:months-from-duration-1 :result true}} a :PASS.
    {{("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6} => {:months-from-duration-2 :result true}} a :PASS.
    {{("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0} => {:months-from-duration-3 :result true}} a :PASS.
    {{("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3} => {:days-from-duration-1 :result true}} a :PASS.
    {{("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5} => {:days-from-duration-2 :result true}} a :PASS.
    {{("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0} => {:days-from-duration-3 :result true}} a :PASS.
    {{("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10} => {:hours-from-duration-1 :result true}} a :PASS.
    {{("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12} => {:hours-from-duration-2 :result true}} a :PASS.
    {{("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3} => {:hours-from-duration-3 :result true}} a :PASS.
    {{("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10} => {:hours-from-duration-4 :result true}} a :PASS.
    {{("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0} => {:minutes-from-duration-1 :result true}} a :PASS.
    {{("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30} => {:minutes-from-duration-2 :result true}} a :PASS.
    {{("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5} => {:seconds-from-duration-1 :result true}} a :PASS.
    {{("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0} => {:seconds-from-duration-2 :result true}} a :PASS.
    {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-1 :result true}} a :PASS.
    {{("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-2 :result true}} a :PASS.
    {{("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-date-1 :result true}} a :PASS.
    {{("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-date-2 :result true}} a :PASS.
    {{("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-time-1 :result true}} a :PASS.
    {{("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-time-2 :result true}} a :PASS.
    {{("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration} => {:subtract-dateTimes-1 :result true}} a :PASS.
    {{("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration} => {:subtract-dates-1 :result true}} a :PASS.
    {{("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration} => {:subtract-times-1 :result true}} a :PASS.
    {{("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration} => {:subtract-times-2 :result true}} a :PASS.
    {{("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration} => {:subtract-times-3 :result true}} a :PASS.
    {{("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration} => {:subtract-times-4 :result true}} a :PASS.
    {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration} => {:add-yearMonthDurations-1 :result true}} a :PASS.
    {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration} => {:subtract-yearMonthDurations-1 :result true}} a :PASS.
    {{("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration} => {:multiply-yearMonthDuration-1 :result true}} a :PASS.
    {{("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration} => {:divide-yearMonthDuration-1 :result true}} a :PASS.
    {{("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5} => {:divide-yearMonthDuration-by-yearMonthDuration-1 :result true}} a :PASS.
    {{("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration} => {:add-dayTimeDurations-1 :result true}} a :PASS.
    {{("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration} => {:subtract-dayTimeDurations-1 :result true}} a :PASS.
    {{("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration} => {:multiply-dayTimeDuration-1 :result true}} a :PASS.
    {{("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration} => {:divide-dayTimeDuration-1 :result true}} a :PASS.
    {{("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1} => {:divide-dayTimeDuration-by-dayTimeDuration-1 :result true}} a :PASS.
    {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime} => {:add-yearMonthDuration-to-dateTime-1 :result true}} a :PASS.
    {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date} => {:add-yearMonthDuration-to-date-1 :result true}} a :PASS.
    {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime} => {:add-dayTimeDuration-to-dateTime-1 :result true}} a :PASS.
    {{("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date} => {:add-dayTimeDuration-to-date-1 :result true}} a :PASS.
    {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time} => {:add-dayTimeDuration-to-time-1 :result true}} a :PASS.
    {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime} => {:subtract-yearMonthDuration-from-dateTime-1 :result true}} a :PASS.
    {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date} => {:subtract-yearMonthDuration-from-date-1 :result true}} a :PASS.
    {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime} => {:subtract-dayTimeDuration-from-dateTime-1 :result true}} a :PASS.
    {{("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date} => {:subtract-dayTimeDuration-from-date-1 :result true}} a :PASS.
    {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time} => {:subtract-dayTimeDuration-from-time-1 :result true}} a :PASS.
    {{("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time} => {:subtract-dayTimeDuration-from-time-2 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-1 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-2 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-3 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-4 :result true}} a :PASS.
    {{("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-5 :result true}} a :PASS.
    {{("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-6 :result true}} a :PASS.
    {{("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-7 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true} => {:dateTime-less-than-1 :result true}} a :PASS.
    {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true} => {:dateTime-greater-than-1 :result true}} a :PASS.
    {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false} => {:date-equal-1 :result true}} a :PASS.
    {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true} => {:date-equal-2 :result true}} a :PASS.
    {{("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true} => {:date-less-than-1 :result true}} a :PASS.
    {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false} => {:date-less-than-2 :result true}} a :PASS.
    {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true} => {:date-greater-than-1 :result true}} a :PASS.
    {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false} => {:date-greater-than-2 :result true}} a :PASS.
    {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false} => {:time-equal-1 :result true}} a :PASS.
    {{("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true} => {:time-equal-2 :result true}} a :PASS.
    {{("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true} => {:time-equal-3 :result true}} a :PASS.
    {{("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-1 :result true}} a :PASS.
    {{("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true} => {:time-less-than-2 :result true}} a :PASS.
    {{("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-3 :result true}} a :PASS.
    {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false} => {:time-greater-than-1 :result true}} a :PASS.
    {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-1 :result true}} a :PASS.
    {{("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true} => {:duration-equal-2 :result true}} a :PASS.
    {{("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false} => {:duration-equal-3 :result true}} a :PASS.
    {{("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-4 :result true}} a :PASS.
    {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true} => {:dayTimeDuration-less-than-1 :result true}} a :PASS.
    {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false} => {:dayTimeDuration-greater-than-1 :result true}} a :PASS.
    {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true} => {:yearMonthDuration-less-than-1 :result true}} a :PASS.
    {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false} => {:yearMonthDuration-greater-than-1 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false} => {:dateTime-not-equal-1 :result true}} a :PASS.
    {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true} => {:dateTime-less-than-or-equal-1 :result true}} a :PASS.
    {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true} => {:dateTime-greater-than-or-equal-1 :result true}} a :PASS.
    {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true} => {:date-not-equal-1 :result true}} a :PASS.
    {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false} => {:date-less-than-or-equal-1 :result true}} a :PASS.
    {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true} => {:date-greater-than-or-equal-1 :result true}} a :PASS.
    {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true} => {:time-not-equal-1 :result true}} a :PASS.
    {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true} => {:time-less-than-or-equal-1 :result true}} a :PASS.
    {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false} => {:time-greater-than-or-equal-1 :result true}} a :PASS.
    {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false} => {:duration-not-equal-1 :result true}} a :PASS.
    {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true} => {:dayTimeDuration-less-than-or-equal-1 :result true}} a :PASS.
    {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false} => {:dayTimeDuration-greater-than-or-equal-1 :result true}} a :PASS.
    {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true} => {:yearMonthDuration-less-than-or-equal-1 :result true}} a :PASS.
    {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false} => {:yearMonthDuration-greater-than-or-equal-1 :result true}} a :PASS.
    {{("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"} => {:PlainLiteral-from-string-lang-1 :result true}} a :PASS.
    {{("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en} => {:PlainLiteral-from-string-lang-2 :result true}} a :PASS.
    {{("Family Guy") func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-1 :result true}} a :PASS.
    {{("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-2 :result true}} a :PASS.
    {{("Family Guy") func:lang-from-PlainLiteral ""} => {:lang-from-PlainLiteral-1 :result true}} a :PASS.
    {{("Family Guy"@en) func:lang-from-PlainLiteral "en"} => {:lang-from-PlainLiteral-2 :result true}} a :PASS.
    {{("Family Guy" "Mother") func:PlainLiteral-compare -1} => {:PlainLiteral-compare-1 :result true}} a :PASS.
    {{("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1} => {:PlainLiteral-compare-2 :result true}} a :PASS.
    {{("Family Guy") func:PlainLiteral-length 10} => {:PlainLiteral-length-1 :result true}} a :PASS.
    {{("Family Guy"@en) func:PlainLiteral-length 10} => {:PlainLiteral-length-2 :result true}} a :PASS.
    {{("Family Guy"@en "en") pred:matches-language-range true} => {:matches-language-range-1 :result true}} a :PASS.
    {{("Family Guy"@en-us "en-*") pred:matches-language-range true} => {:matches-language-range-2 :result true}} a :PASS.
    {{((:a :b :c :d)) pred:is-list true} => {:is-list-1 :result true}} a :PASS.
    {{((:a :b :c :d) :b) pred:list-contains true} => {:list-contains-1 :result true}} a :PASS.
    {{(:a :b :c :d) func:make-list (:a :b :c :d)} => {:make-list-1 :result true}} a :PASS.
    {{((:a :b :c :d)) func:count 4} => {:count-1 :result true}} a :PASS.
    {{((:a :b :c :d) 3) func:get :d} => {:get-1 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 0) func:sublist ()} => {:sublist-1 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 1) func:sublist (0)} => {:sublist-2 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)} => {:sublist-3 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)} => {:sublist-4 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)} => {:sublist-5 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 -2) func:sublist (0 1 2)} => {:sublist-6 :result true}} a :PASS.
    {{((0 1 2 3 4) 2 4) func:sublist (2 3)} => {:sublist-7 :result true}} a :PASS.
    {{((0 1 2 3 4) 2 -2) func:sublist (2)} => {:sublist-9 :result true}} a :PASS.
    {{((0 1 2 3 4) 0) func:sublist (0 1 2 3 4)} => {:sublist-9 :result true}} a :PASS.
    {{((0 1 2 3 4) 3) func:sublist (3 4)} => {:sublist-10 :result true}} a :PASS.
    {{((0 1 2 3 4) -2) func:sublist (3 4)} => {:sublist-11 :result true}} a :PASS.
    {{((0 1 2) 3) func:append (0 1 2 3)} => {:append-1 :result true}} a :PASS.
    {{((0 1 2) 3 4) func:append (0 1 2 3 4)} => {:append-2 :result true}} a :PASS.
    {{((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))} => {:append-3 :result true}} a :PASS.
    {{(() 1) func:append (1)} => {:append-4 :result true}} a :PASS.
    {{((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)} => {:concatenate-1 :result true}} a :PASS.
    {{((1 1) (1) (1)) func:concatenate (1 1 1 1)} => {:concatenate-2 :result true}} a :PASS.
    {{(()) func:concatenate ()} => {:concatenate-3 :result true}} a :PASS.
    {{(() (1) () (2) ((3))) func:concatenate (1 2 (3))} => {:concatenate-4 :result true}} a :PASS.
    {{((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-1 :result true}} a :PASS.
    {{((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)} => {:insert-before-2 :result true}} a :PASS.
    {{((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)} => {:insert-before-3 :result true}} a :PASS.
    {{((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-4 :result true}} a :PASS.
    {{((0 1 2 3 4) 0) func:remove (1 2 3 4)} => {:remove-1 :result true}} a :PASS.
    {{((0 1 2 3 4) 1) func:remove (0 2 3 4)} => {:remove-2 :result true}} a :PASS.
    {{((0 1 2 3 4) 4) func:remove (0 1 2 3)} => {:remove-3 :result true}} a :PASS.
    {{((0 1 2 3 4) -1) func:remove (0 1 2 3)} => {:remove-4 :result true}} a :PASS.
    {{((0 1 2 3 4) -5) func:remove (1 2 3 4)} => {:remove-5 :result true}} a :PASS.
    {{((0 1 2 3 4)) func:reverse (4 3 2 1 0)} => {:reverse-1 :result true}} a :PASS.
    {{((1)) func:reverse (1)} => {:reverse-2 :result true}} a :PASS.
    {{(()) func:reverse ()} => {:reverse-3 :result true}} a :PASS.
    {{((0 1 2 3 4) 2) func:index-of (2)} => {:index-of-1 :result true}} a :PASS.
    {{((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)} => {:index-of-2 :result true}} a :PASS.
    {{((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)} => {:index-of-3 :result true}} a :PASS.
    {{((2 2 3 4 5 2 2) 1) func:index-of ()} => {:index-of-4 :result true}} a :PASS.
    {{((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)} => {:union-1 :result true}} a :PASS.
    {{((0 1 2 3) (4)) func:union (0 1 2 3 4)} => {:union-2 :result true}} a :PASS.
    {{((0 1 2 3) (3)) func:union (0 1 2 3)} => {:union-3 :result true}} a :PASS.
    {{((0 2 1 0)) func:union (0 2 1)} => {:union-4 :result true}} a :PASS.
    {{((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-1 :result true}} a :PASS.
    {{((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-2 :result true}} a :PASS.
    {{((3 3 3)) func:distinct-values (3)} => {:distinct-values-3 :result true}} a :PASS.
    {{((0 1 2 3 4) (1 3)) func:intersect (1 3)} => {:intersect-1 :result true}} a :PASS.
    {{((0 1 2 3 4) (3 1)) func:intersect (1 3)} => {:intersect-2 :result true}} a :PASS.
    {{((0 1 2 3 4) ()) func:intersect ()} => {:intersect-3 :result true}} a :PASS.
    {{((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)} => {:intersect-4 :result true}} a :PASS.
    {{((0 1 2 3 4) (1 3)) func:except (0 2 4)} => {:except-1 :result true}} a :PASS.
    {{((0 1 2 3 4) ()) func:except (0 1 2 3 4)} => {:except-2 :result true}} a :PASS.
    {{((0 1 2 3 4) (0 1 2 3 4)) func:except ()} => {:except-3 :result true}} a :PASS.
  }].

<#lemma1> a r:Inference; r:gives {{{("chat"@fr "chien"@fr) pred:literal-not-identical true} => {:literal-not-identical-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("chat"@fr "chien"@fr) pred:literal-not-identical true} => {:literal-not-identical-1 :result true}}]
  <#lemma223>
  [ a r:Fact; r:gives {{("chat"@fr "chien"@fr) pred:literal-not-identical true} e:labelvars {("chat"@fr "chien"@fr) pred:literal-not-identical true}}]);
  r:rule <#lemma224>.

<#lemma2> a r:Inference; r:gives {{{(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true} => {:iri-string-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true} => {:iri-string-1 :result true}}]
  <#lemma225>
  [ a r:Fact; r:gives {{(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true} e:labelvars {(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true}}]);
  r:rule <#lemma224>.

<#lemma3> a r:Inference; r:gives {{{(1 1) func:numeric-add 2} => {:numeric-add-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1 1) func:numeric-add 2} => {:numeric-add-1 :result true}}]
  <#lemma226>
  [ a r:Fact; r:gives {{(1 1) func:numeric-add 2} e:labelvars {(1 1) func:numeric-add 2}}]);
  r:rule <#lemma224>.

<#lemma4> a r:Inference; r:gives {{{(5 2) func:numeric-subtract 3} => {:numeric-subtract-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(5 2) func:numeric-subtract 3} => {:numeric-subtract-1 :result true}}]
  <#lemma227>
  [ a r:Fact; r:gives {{(5 2) func:numeric-subtract 3} e:labelvars {(5 2) func:numeric-subtract 3}}]);
  r:rule <#lemma224>.

<#lemma5> a r:Inference; r:gives {{{(5 2) func:numeric-multiply 10} => {:numeric-multiply-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(5 2) func:numeric-multiply 10} => {:numeric-multiply-1 :result true}}]
  <#lemma228>
  [ a r:Fact; r:gives {{(5 2) func:numeric-multiply 10} e:labelvars {(5 2) func:numeric-multiply 10}}]);
  r:rule <#lemma224>.

<#lemma6> a r:Inference; r:gives {{{(5 2) func:numeric-divide 2.5} => {:numeric-divide-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(5 2) func:numeric-divide 2.5} => {:numeric-divide-1 :result true}}]
  <#lemma229>
  [ a r:Fact; r:gives {{(5 2) func:numeric-divide 2.5} e:labelvars {(5 2) func:numeric-divide 2.5}}]);
  r:rule <#lemma224>.

<#lemma7> a r:Inference; r:gives {{{(5 2) func:numeric-integer-divide 2} => {:numeric-integer-divide-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(5 2) func:numeric-integer-divide 2} => {:numeric-integer-divide-1 :result true}}]
  <#lemma230>
  [ a r:Fact; r:gives {{(5 2) func:numeric-integer-divide 2} e:labelvars {(5 2) func:numeric-integer-divide 2}}]);
  r:rule <#lemma224>.

<#lemma8> a r:Inference; r:gives {{{(10 3) func:numeric-mod 1} => {:numeric-mod-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(10 3) func:numeric-mod 1} => {:numeric-mod-1 :result true}}]
  <#lemma231>
  [ a r:Fact; r:gives {{(10 3) func:numeric-mod 1} e:labelvars {(10 3) func:numeric-mod 1}}]);
  r:rule <#lemma224>.

<#lemma9> a r:Inference; r:gives {{{(6 -2) func:numeric-mod 0} => {:numeric-mod-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(6 -2) func:numeric-mod 0} => {:numeric-mod-2 :result true}}]
  <#lemma232>
  [ a r:Fact; r:gives {{(6 -2) func:numeric-mod 0} e:labelvars {(6 -2) func:numeric-mod 0}}]);
  r:rule <#lemma224>.

<#lemma10> a r:Inference; r:gives {{{(4.5 1.2) func:numeric-mod 0.9000000000000004} => {:numeric-mod-3 :result 0.9000000000000004}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(4.5 1.2) func:numeric-mod 0.9000000000000004} => {:numeric-mod-3 :result 0.9000000000000004}}]
  <#lemma233>
  [ a r:Fact; r:gives {{(4.5 1.2) func:numeric-mod 0.9000000000000004} e:labelvars {(4.5 1.2) func:numeric-mod 0.9000000000000004}}]);
  r:rule <#lemma224>.

<#lemma11> a r:Inference; r:gives {{{(123.0 6.0) func:numeric-mod 3.0} => {:numeric-mod-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(123.0 6.0) func:numeric-mod 3.0} => {:numeric-mod-4 :result true}}]
  <#lemma234>
  [ a r:Fact; r:gives {{(123.0 6.0) func:numeric-mod 3.0} e:labelvars {(123.0 6.0) func:numeric-mod 3.0}}]);
  r:rule <#lemma224>.

<#lemma12> a r:Inference; r:gives {{{(1 1.0) pred:numeric-equal true} => {:numeric-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1 1.0) pred:numeric-equal true} => {:numeric-equal-1 :result true}}]
  <#lemma235>
  [ a r:Fact; r:gives {{(1 1.0) pred:numeric-equal true} e:labelvars {(1 1.0) pred:numeric-equal true}}]);
  r:rule <#lemma224>.

<#lemma13> a r:Inference; r:gives {{{(2.0 3) pred:numeric-less-than true} => {:numeric-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(2.0 3) pred:numeric-less-than true} => {:numeric-less-than-1 :result true}}]
  <#lemma236>
  [ a r:Fact; r:gives {{(2.0 3) pred:numeric-less-than true} e:labelvars {(2.0 3) pred:numeric-less-than true}}]);
  r:rule <#lemma224>.

<#lemma14> a r:Inference; r:gives {{{(1.0 0) pred:numeric-greater-than true} => {:numeric-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1.0 0) pred:numeric-greater-than true} => {:numeric-greater-than-1 :result true}}]
  <#lemma237>
  [ a r:Fact; r:gives {{(1.0 0) pred:numeric-greater-than true} e:labelvars {(1.0 0) pred:numeric-greater-than true}}]);
  r:rule <#lemma224>.

<#lemma15> a r:Inference; r:gives {{{(1 1.01) pred:numeric-not-equal true} => {:numeric-not-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1 1.01) pred:numeric-not-equal true} => {:numeric-not-equal-1 :result true}}]
  <#lemma238>
  [ a r:Fact; r:gives {{(1 1.01) pred:numeric-not-equal true} e:labelvars {(1 1.01) pred:numeric-not-equal true}}]);
  r:rule <#lemma224>.

<#lemma16> a r:Inference; r:gives {{{(3 5.0) pred:numeric-less-than-or-equal true} => {:numeric-less-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(3 5.0) pred:numeric-less-than-or-equal true} => {:numeric-less-than-or-equal-1 :result true}}]
  <#lemma239>
  [ a r:Fact; r:gives {{(3 5.0) pred:numeric-less-than-or-equal true} e:labelvars {(3 5.0) pred:numeric-less-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma17> a r:Inference; r:gives {{{(1.0 1) pred:numeric-greater-than-or-equal true} => {:numeric-greater-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(1.0 1) pred:numeric-greater-than-or-equal true} => {:numeric-greater-than-or-equal-1 :result true}}]
  <#lemma240>
  [ a r:Fact; r:gives {{(1.0 1) pred:numeric-greater-than-or-equal true} e:labelvars {(1.0 1) pred:numeric-greater-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma18> a r:Inference; r:gives {{{(false) func:not true} => {:not-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(false) func:not true} => {:not-1 :result true}}]
  <#lemma241>
  [ a r:Fact; r:gives {{(false) func:not true} e:labelvars {(false) func:not true}}]);
  r:rule <#lemma224>.

<#lemma19> a r:Inference; r:gives {{{(true) func:not false} => {:not-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true) func:not false} => {:not-2 :result true}}]
  <#lemma242>
  [ a r:Fact; r:gives {{(true) func:not false} e:labelvars {(true) func:not false}}]);
  r:rule <#lemma224>.

<#lemma20> a r:Inference; r:gives {{{(false false) pred:boolean-equal true} => {:boolean-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(false false) pred:boolean-equal true} => {:boolean-equal-1 :result true}}]
  <#lemma243>
  [ a r:Fact; r:gives {{(false false) pred:boolean-equal true} e:labelvars {(false false) pred:boolean-equal true}}]);
  r:rule <#lemma224>.

<#lemma21> a r:Inference; r:gives {{{(false true) pred:boolean-less-than true} => {:boolean-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(false true) pred:boolean-less-than true} => {:boolean-less-than-1 :result true}}]
  <#lemma244>
  [ a r:Fact; r:gives {{(false true) pred:boolean-less-than true} e:labelvars {(false true) pred:boolean-less-than true}}]);
  r:rule <#lemma224>.

<#lemma22> a r:Inference; r:gives {{{(true false) pred:boolean-greater-than true} => {:boolean-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(true false) pred:boolean-greater-than true} => {:boolean-greater-than-1 :result true}}]
  <#lemma245>
  [ a r:Fact; r:gives {{(true false) pred:boolean-greater-than true} e:labelvars {(true false) pred:boolean-greater-than true}}]);
  r:rule <#lemma224>.

<#lemma23> a r:Inference; r:gives {{{("abc" "abc") func:compare 0} => {:compare-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("abc" "abc") func:compare 0} => {:compare-1 :result true}}]
  <#lemma246>
  [ a r:Fact; r:gives {{("abc" "abc") func:compare 0} e:labelvars {("abc" "abc") func:compare 0}}]);
  r:rule <#lemma224>.

<#lemma24> a r:Inference; r:gives {{{("Straßen" "Straße") func:compare 1} => {:compare-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Straßen" "Straße") func:compare 1} => {:compare-2 :result true}}]
  <#lemma247>
  [ a r:Fact; r:gives {{("Straßen" "Straße") func:compare 1} e:labelvars {("Straßen" "Straße") func:compare 1}}]);
  r:rule <#lemma224>.

<#lemma25> a r:Inference; r:gives {{{("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"} => {:concat-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"} => {:concat-1 :result true}}]
  <#lemma248>
  [ a r:Fact; r:gives {{("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"} e:labelvars {("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"}}]);
  r:rule <#lemma224>.

<#lemma26> a r:Inference; r:gives {{{(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."} => {:string-join-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."} => {:string-join-1 :result true}}]
  <#lemma249>
  [ a r:Fact; r:gives {{(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."} e:labelvars {(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."}}]);
  r:rule <#lemma224>.

<#lemma27> a r:Inference; r:gives {{{(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"} => {:string-join-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"} => {:string-join-2 :result true}}]
  <#lemma250>
  [ a r:Fact; r:gives {{(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"} e:labelvars {(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"}}]);
  r:rule <#lemma224>.

<#lemma28> a r:Inference; r:gives {{{(() "separator") func:string-join ""} => {:string-join-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(() "separator") func:string-join ""} => {:string-join-3 :result true}}]
  <#lemma251>
  [ a r:Fact; r:gives {{(() "separator") func:string-join ""} e:labelvars {(() "separator") func:string-join ""}}]);
  r:rule <#lemma224>.

<#lemma29> a r:Inference; r:gives {{{("motor car" 6) func:substring " car"} => {:substring-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("motor car" 6) func:substring " car"} => {:substring-1 :result true}}]
  <#lemma252>
  [ a r:Fact; r:gives {{("motor car" 6) func:substring " car"} e:labelvars {("motor car" 6) func:substring " car"}}]);
  r:rule <#lemma224>.

<#lemma30> a r:Inference; r:gives {{{("metadata" 4 3) func:substring "ada"} => {:substring-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("metadata" 4 3) func:substring "ada"} => {:substring-2 :result true}}]
  <#lemma253>
  [ a r:Fact; r:gives {{("metadata" 4 3) func:substring "ada"} e:labelvars {("metadata" 4 3) func:substring "ada"}}]);
  r:rule <#lemma224>.

<#lemma31> a r:Inference; r:gives {{{("12345" 1.5 2.6) func:substring "234"} => {:substring-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("12345" 1.5 2.6) func:substring "234"} => {:substring-3 :result true}}]
  <#lemma254>
  [ a r:Fact; r:gives {{("12345" 1.5 2.6) func:substring "234"} e:labelvars {("12345" 1.5 2.6) func:substring "234"}}]);
  r:rule <#lemma224>.

<#lemma32> a r:Inference; r:gives {{{("12345" 0 3) func:substring "12"} => {:substring-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("12345" 0 3) func:substring "12"} => {:substring-4 :result true}}]
  <#lemma255>
  [ a r:Fact; r:gives {{("12345" 0 3) func:substring "12"} e:labelvars {("12345" 0 3) func:substring "12"}}]);
  r:rule <#lemma224>.

<#lemma33> a r:Inference; r:gives {{{("12345" 5 -3) func:substring ""} => {:substring-5 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("12345" 5 -3) func:substring ""} => {:substring-5 :result true}}]
  <#lemma256>
  [ a r:Fact; r:gives {{("12345" 5 -3) func:substring ""} e:labelvars {("12345" 5 -3) func:substring ""}}]);
  r:rule <#lemma224>.

<#lemma34> a r:Inference; r:gives {{{("12345" -3 5) func:substring "1"} => {:substring-6 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("12345" -3 5) func:substring "1"} => {:substring-6 :result true}}]
  <#lemma257>
  [ a r:Fact; r:gives {{("12345" -3 5) func:substring "1"} e:labelvars {("12345" -3 5) func:substring "1"}}]);
  r:rule <#lemma224>.

<#lemma35> a r:Inference; r:gives {{{("Harp not on that string, madam; that is past.") func:string-length 45} => {:string-length-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Harp not on that string, madam; that is past.") func:string-length 45} => {:string-length-1 :result true}}]
  <#lemma258>
  [ a r:Fact; r:gives {{("Harp not on that string, madam; that is past.") func:string-length 45} e:labelvars {("Harp not on that string, madam; that is past.") func:string-length 45}}]);
  r:rule <#lemma224>.

<#lemma36> a r:Inference; r:gives {{{(""@en) func:string-length 0} => {:string-length-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(""@en) func:string-length 0} => {:string-length-2 :result true}}]
  <#lemma259>
  [ a r:Fact; r:gives {{(""@en) func:string-length 0} e:labelvars {(""@en) func:string-length 0}}]);
  r:rule <#lemma224>.

<#lemma37> a r:Inference; r:gives {{{("abCd0") func:upper-case "ABCD0"} => {:upper-case-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("abCd0") func:upper-case "ABCD0"} => {:upper-case-1 :result true}}]
  <#lemma260>
  [ a r:Fact; r:gives {{("abCd0") func:upper-case "ABCD0"} e:labelvars {("abCd0") func:upper-case "ABCD0"}}]);
  r:rule <#lemma224>.

<#lemma38> a r:Inference; r:gives {{{("ABc!D") func:lower-case "abc!d"} => {:lower-case-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("ABc!D") func:lower-case "abc!d"} => {:lower-case-1 :result true}}]
  <#lemma261>
  [ a r:Fact; r:gives {{("ABc!D") func:lower-case "abc!d"} e:labelvars {("ABc!D") func:lower-case "abc!d"}}]);
  r:rule <#lemma224>.

<#lemma39> a r:Inference; r:gives {{{("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"} => {:encode-for-uri-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"} => {:encode-for-uri-1 :result true}}]
  <#lemma262>
  [ a r:Fact; r:gives {{("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"} e:labelvars {("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"}}]);
  r:rule <#lemma224>.

<#lemma40> a r:Inference; r:gives {{{("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"} => {:encode-for-uri-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"} => {:encode-for-uri-2 :result true}}]
  <#lemma263>
  [ a r:Fact; r:gives {{("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"} e:labelvars {("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"}}]);
  r:rule <#lemma224>.

<#lemma41> a r:Inference; r:gives {{{("100% organic") func:encode-for-uri "100%25%20organic"} => {:encode-for-uri-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("100% organic") func:encode-for-uri "100%25%20organic"} => {:encode-for-uri-3 :result true}}]
  <#lemma264>
  [ a r:Fact; r:gives {{("100% organic") func:encode-for-uri "100%25%20organic"} e:labelvars {("100% organic") func:encode-for-uri "100%25%20organic"}}]);
  r:rule <#lemma224>.

<#lemma42> a r:Inference; r:gives {{{("tattoo" "attoo") func:substring-before "t"} => {:substring-before-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "attoo") func:substring-before "t"} => {:substring-before-1 :result true}}]
  <#lemma265>
  [ a r:Fact; r:gives {{("tattoo" "attoo") func:substring-before "t"} e:labelvars {("tattoo" "attoo") func:substring-before "t"}}]);
  r:rule <#lemma224>.

<#lemma43> a r:Inference; r:gives {{{("tattoo" "tatto") func:substring-before ""} => {:substring-before-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "tatto") func:substring-before ""} => {:substring-before-2 :result true}}]
  <#lemma266>
  [ a r:Fact; r:gives {{("tattoo" "tatto") func:substring-before ""} e:labelvars {("tattoo" "tatto") func:substring-before ""}}]);
  r:rule <#lemma224>.

<#lemma44> a r:Inference; r:gives {{{("tattoo" "tat") func:substring-after "too"} => {:substring-after-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "tat") func:substring-after "too"} => {:substring-after-1 :result true}}]
  <#lemma267>
  [ a r:Fact; r:gives {{("tattoo" "tat") func:substring-after "too"} e:labelvars {("tattoo" "tat") func:substring-after "too"}}]);
  r:rule <#lemma224>.

<#lemma45> a r:Inference; r:gives {{{("tattoo" "tattoo") func:substring-after ""} => {:substring-after-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "tattoo") func:substring-after ""} => {:substring-after-2 :result true}}]
  <#lemma268>
  [ a r:Fact; r:gives {{("tattoo" "tattoo") func:substring-after ""} e:labelvars {("tattoo" "tattoo") func:substring-after ""}}]);
  r:rule <#lemma224>.

<#lemma46> a r:Inference; r:gives {{{("tattoo" "t") pred:contains true} => {:contains-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "t") pred:contains true} => {:contains-1 :result true}}]
  <#lemma269>
  [ a r:Fact; r:gives {{("tattoo" "t") pred:contains true} e:labelvars {("tattoo" "t") pred:contains true}}]);
  r:rule <#lemma224>.

<#lemma47> a r:Inference; r:gives {{{("tattoo" "tat") pred:starts-with true} => {:starts-with-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "tat") pred:starts-with true} => {:starts-with-1 :result true}}]
  <#lemma270>
  [ a r:Fact; r:gives {{("tattoo" "tat") pred:starts-with true} e:labelvars {("tattoo" "tat") pred:starts-with true}}]);
  r:rule <#lemma224>.

<#lemma48> a r:Inference; r:gives {{{("tattoo" "tattoo") pred:ends-with true} => {:ends-with-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("tattoo" "tattoo") pred:ends-with true} => {:ends-with-1 :result true}}]
  <#lemma271>
  [ a r:Fact; r:gives {{("tattoo" "tattoo") pred:ends-with true} e:labelvars {("tattoo" "tattoo") pred:ends-with true}}]);
  r:rule <#lemma224>.

<#lemma49> a r:Inference; r:gives {{{("abracadabra" "bra") pred:matches true} => {:matches-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("abracadabra" "bra") pred:matches true} => {:matches-1 :result true}}]
  <#lemma272>
  [ a r:Fact; r:gives {{("abracadabra" "bra") pred:matches true} e:labelvars {("abracadabra" "bra") pred:matches true}}]);
  r:rule <#lemma224>.

<#lemma50> a r:Inference; r:gives {{{("abracadabra" "^a.*a$") pred:matches true} => {:matches-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("abracadabra" "^a.*a$") pred:matches true} => {:matches-2 :result true}}]
  <#lemma273>
  [ a r:Fact; r:gives {{("abracadabra" "^a.*a$") pred:matches true} e:labelvars {("abracadabra" "^a.*a$") pred:matches true}}]);
  r:rule <#lemma224>.

<#lemma51> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999} => {:year-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999} => {:year-from-dateTime-1 :result true}}]
  <#lemma274>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999}}]);
  r:rule <#lemma224>.

<#lemma52> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5} => {:month-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5} => {:month-from-dateTime-1 :result true}}]
  <#lemma275>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5}}]);
  r:rule <#lemma224>.

<#lemma53> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31} => {:day-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31} => {:day-from-dateTime-1 :result true}}]
  <#lemma276>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31}}]);
  r:rule <#lemma224>.

<#lemma54> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13} => {:hours-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13} => {:hours-from-dateTime-1 :result true}}]
  <#lemma277>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13}}]);
  r:rule <#lemma224>.

<#lemma55> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20} => {:minutes-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20} => {:minutes-from-dateTime-1 :result true}}]
  <#lemma278>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20}}]);
  r:rule <#lemma224>.

<#lemma56> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0} => {:seconds-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0} => {:seconds-from-dateTime-1 :result true}}]
  <#lemma279>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0}}]);
  r:rule <#lemma224>.

<#lemma57> a r:Inference; r:gives {{{("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999} => {:year-from-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999} => {:year-from-date-1 :result true}}]
  <#lemma280>
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999} e:labelvars {("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999}}]);
  r:rule <#lemma224>.

<#lemma58> a r:Inference; r:gives {{{("1999-05-31-05:00"^^xsd:date) func:month-from-date 5} => {:month-from-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:month-from-date 5} => {:month-from-date-1 :result true}}]
  <#lemma281>
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:month-from-date 5} e:labelvars {("1999-05-31-05:00"^^xsd:date) func:month-from-date 5}}]);
  r:rule <#lemma224>.

<#lemma59> a r:Inference; r:gives {{{("1999-05-31-05:00"^^xsd:date) func:day-from-date 31} => {:day-from-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:day-from-date 31} => {:day-from-date-1 :result true}}]
  <#lemma282>
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:day-from-date 31} e:labelvars {("1999-05-31-05:00"^^xsd:date) func:day-from-date 31}}]);
  r:rule <#lemma224>.

<#lemma60> a r:Inference; r:gives {{{("13:20:00-05:00"^^xsd:time) func:hours-from-time 13} => {:hours-from-time-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:hours-from-time 13} => {:hours-from-time-1 :result true}}]
  <#lemma283>
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:hours-from-time 13} e:labelvars {("13:20:00-05:00"^^xsd:time) func:hours-from-time 13}}]);
  r:rule <#lemma224>.

<#lemma61> a r:Inference; r:gives {{{("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20} => {:minutes-from-time-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20} => {:minutes-from-time-1 :result true}}]
  <#lemma284>
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20} e:labelvars {("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20}}]);
  r:rule <#lemma224>.

<#lemma62> a r:Inference; r:gives {{{("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0} => {:seconds-from-time-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0} => {:seconds-from-time-1 :result true}}]
  <#lemma285>
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0} e:labelvars {("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0}}]);
  r:rule <#lemma224>.

<#lemma63> a r:Inference; r:gives {{{("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21} => {:years-from-duration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21} => {:years-from-duration-1 :result true}}]
  <#lemma286>
  [ a r:Fact; r:gives {{("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21} e:labelvars {("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21}}]);
  r:rule <#lemma224>.

<#lemma64> a r:Inference; r:gives {{{("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1} => {:years-from-duration-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1} => {:years-from-duration-2 :result true}}]
  <#lemma287>
  [ a r:Fact; r:gives {{("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1} e:labelvars {("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1}}]);
  r:rule <#lemma224>.

<#lemma65> a r:Inference; r:gives {{{("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0} => {:years-from-duration-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0} => {:years-from-duration-3 :result true}}]
  <#lemma288>
  [ a r:Fact; r:gives {{("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0} e:labelvars {("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0}}]);
  r:rule <#lemma224>.

<#lemma66> a r:Inference; r:gives {{{("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3} => {:months-from-duration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3} => {:months-from-duration-1 :result true}}]
  <#lemma289>
  [ a r:Fact; r:gives {{("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3} e:labelvars {("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3}}]);
  r:rule <#lemma224>.

<#lemma67> a r:Inference; r:gives {{{("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6} => {:months-from-duration-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6} => {:months-from-duration-2 :result true}}]
  <#lemma290>
  [ a r:Fact; r:gives {{("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6} e:labelvars {("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6}}]);
  r:rule <#lemma224>.

<#lemma68> a r:Inference; r:gives {{{("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0} => {:months-from-duration-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0} => {:months-from-duration-3 :result true}}]
  <#lemma291>
  [ a r:Fact; r:gives {{("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0} e:labelvars {("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0}}]);
  r:rule <#lemma224>.

<#lemma69> a r:Inference; r:gives {{{("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3} => {:days-from-duration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3} => {:days-from-duration-1 :result true}}]
  <#lemma292>
  [ a r:Fact; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3} e:labelvars {("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3}}]);
  r:rule <#lemma224>.

<#lemma70> a r:Inference; r:gives {{{("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5} => {:days-from-duration-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5} => {:days-from-duration-2 :result true}}]
  <#lemma293>
  [ a r:Fact; r:gives {{("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5} e:labelvars {("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5}}]);
  r:rule <#lemma224>.

<#lemma71> a r:Inference; r:gives {{{("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0} => {:days-from-duration-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0} => {:days-from-duration-3 :result true}}]
  <#lemma294>
  [ a r:Fact; r:gives {{("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0} e:labelvars {("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0}}]);
  r:rule <#lemma224>.

<#lemma72> a r:Inference; r:gives {{{("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10} => {:hours-from-duration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10} => {:hours-from-duration-1 :result true}}]
  <#lemma295>
  [ a r:Fact; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10} e:labelvars {("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10}}]);
  r:rule <#lemma224>.

<#lemma73> a r:Inference; r:gives {{{("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12} => {:hours-from-duration-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12} => {:hours-from-duration-2 :result true}}]
  <#lemma296>
  [ a r:Fact; r:gives {{("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12} e:labelvars {("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12}}]);
  r:rule <#lemma224>.

<#lemma74> a r:Inference; r:gives {{{("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3} => {:hours-from-duration-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3} => {:hours-from-duration-3 :result true}}]
  <#lemma297>
  [ a r:Fact; r:gives {{("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3} e:labelvars {("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3}}]);
  r:rule <#lemma224>.

<#lemma75> a r:Inference; r:gives {{{("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10} => {:hours-from-duration-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10} => {:hours-from-duration-4 :result true}}]
  <#lemma298>
  [ a r:Fact; r:gives {{("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10} e:labelvars {("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10}}]);
  r:rule <#lemma224>.

<#lemma76> a r:Inference; r:gives {{{("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0} => {:minutes-from-duration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0} => {:minutes-from-duration-1 :result true}}]
  <#lemma299>
  [ a r:Fact; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0} e:labelvars {("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0}}]);
  r:rule <#lemma224>.

<#lemma77> a r:Inference; r:gives {{{("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30} => {:minutes-from-duration-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30} => {:minutes-from-duration-2 :result true}}]
  <#lemma300>
  [ a r:Fact; r:gives {{("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30} e:labelvars {("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30}}]);
  r:rule <#lemma224>.

<#lemma78> a r:Inference; r:gives {{{("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5} => {:seconds-from-duration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5} => {:seconds-from-duration-1 :result true}}]
  <#lemma301>
  [ a r:Fact; r:gives {{("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5} e:labelvars {("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5}}]);
  r:rule <#lemma224>.

<#lemma79> a r:Inference; r:gives {{{("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0} => {:seconds-from-duration-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0} => {:seconds-from-duration-2 :result true}}]
  <#lemma302>
  [ a r:Fact; r:gives {{("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0} e:labelvars {("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0}}]);
  r:rule <#lemma224>.

<#lemma80> a r:Inference; r:gives {{{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-1 :result true}}]
  <#lemma303>
  [ a r:Fact; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration} e:labelvars {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma81> a r:Inference; r:gives {{{("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-2 :result true}}]
  <#lemma304>
  [ a r:Fact; r:gives {{("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration} e:labelvars {("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma82> a r:Inference; r:gives {{{("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-date-1 :result true}}]
  <#lemma305>
  [ a r:Fact; r:gives {{("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration} e:labelvars {("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma83> a r:Inference; r:gives {{{("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-date-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-date-2 :result true}}]
  <#lemma306>
  [ a r:Fact; r:gives {{("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration} e:labelvars {("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma84> a r:Inference; r:gives {{{("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-time-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-time-1 :result true}}]
  <#lemma307>
  [ a r:Fact; r:gives {{("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration} e:labelvars {("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma85> a r:Inference; r:gives {{{("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-time-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-time-2 :result true}}]
  <#lemma308>
  [ a r:Fact; r:gives {{("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration} e:labelvars {("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma86> a r:Inference; r:gives {{{("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration} => {:subtract-dateTimes-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration} => {:subtract-dateTimes-1 :result true}}]
  <#lemma309>
  [ a r:Fact; r:gives {{("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration} e:labelvars {("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma87> a r:Inference; r:gives {{{("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration} => {:subtract-dates-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration} => {:subtract-dates-1 :result true}}]
  <#lemma310>
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration} e:labelvars {("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma88> a r:Inference; r:gives {{{("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration} => {:subtract-times-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration} => {:subtract-times-1 :result true}}]
  <#lemma311>
  [ a r:Fact; r:gives {{("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration} e:labelvars {("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma89> a r:Inference; r:gives {{{("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration} => {:subtract-times-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration} => {:subtract-times-2 :result true}}]
  <#lemma312>
  [ a r:Fact; r:gives {{("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration} e:labelvars {("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma90> a r:Inference; r:gives {{{("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration} => {:subtract-times-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration} => {:subtract-times-3 :result true}}]
  <#lemma313>
  [ a r:Fact; r:gives {{("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration} e:labelvars {("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma91> a r:Inference; r:gives {{{("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration} => {:subtract-times-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration} => {:subtract-times-4 :result true}}]
  <#lemma314>
  [ a r:Fact; r:gives {{("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration} e:labelvars {("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma92> a r:Inference; r:gives {{{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration} => {:add-yearMonthDurations-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration} => {:add-yearMonthDurations-1 :result true}}]
  <#lemma315>
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration} e:labelvars {("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration}}]);
  r:rule <#lemma224>.

<#lemma93> a r:Inference; r:gives {{{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration} => {:subtract-yearMonthDurations-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration} => {:subtract-yearMonthDurations-1 :result true}}]
  <#lemma316>
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration} e:labelvars {("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration}}]);
  r:rule <#lemma224>.

<#lemma94> a r:Inference; r:gives {{{("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration} => {:multiply-yearMonthDuration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration} => {:multiply-yearMonthDuration-1 :result true}}]
  <#lemma317>
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration} e:labelvars {("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration}}]);
  r:rule <#lemma224>.

<#lemma95> a r:Inference; r:gives {{{("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration} => {:divide-yearMonthDuration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration} => {:divide-yearMonthDuration-1 :result true}}]
  <#lemma318>
  [ a r:Fact; r:gives {{("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration} e:labelvars {("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration}}]);
  r:rule <#lemma224>.

<#lemma96> a r:Inference; r:gives {{{("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5} => {:divide-yearMonthDuration-by-yearMonthDuration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5} => {:divide-yearMonthDuration-by-yearMonthDuration-1 :result true}}]
  <#lemma319>
  [ a r:Fact; r:gives {{("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5} e:labelvars {("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5}}]);
  r:rule <#lemma224>.

<#lemma97> a r:Inference; r:gives {{{("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration} => {:add-dayTimeDurations-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration} => {:add-dayTimeDurations-1 :result true}}]
  <#lemma320>
  [ a r:Fact; r:gives {{("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration} e:labelvars {("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma98> a r:Inference; r:gives {{{("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration} => {:subtract-dayTimeDurations-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration} => {:subtract-dayTimeDurations-1 :result true}}]
  <#lemma321>
  [ a r:Fact; r:gives {{("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration} e:labelvars {("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma99> a r:Inference; r:gives {{{("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration} => {:multiply-dayTimeDuration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration} => {:multiply-dayTimeDuration-1 :result true}}]
  <#lemma322>
  [ a r:Fact; r:gives {{("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration} e:labelvars {("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma100> a r:Inference; r:gives {{{("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration} => {:divide-dayTimeDuration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration} => {:divide-dayTimeDuration-1 :result true}}]
  <#lemma323>
  [ a r:Fact; r:gives {{("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration} e:labelvars {("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration}}]);
  r:rule <#lemma224>.

<#lemma101> a r:Inference; r:gives {{{("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1} => {:divide-dayTimeDuration-by-dayTimeDuration-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1} => {:divide-dayTimeDuration-by-dayTimeDuration-1 :result true}}]
  <#lemma324>
  [ a r:Fact; r:gives {{("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1} e:labelvars {("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1}}]);
  r:rule <#lemma224>.

<#lemma102> a r:Inference; r:gives {{{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime} => {:add-yearMonthDuration-to-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime} => {:add-yearMonthDuration-to-dateTime-1 :result true}}]
  <#lemma325>
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime} e:labelvars {("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime}}]);
  r:rule <#lemma224>.

<#lemma103> a r:Inference; r:gives {{{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date} => {:add-yearMonthDuration-to-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date} => {:add-yearMonthDuration-to-date-1 :result true}}]
  <#lemma326>
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date} e:labelvars {("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date}}]);
  r:rule <#lemma224>.

<#lemma104> a r:Inference; r:gives {{{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime} => {:add-dayTimeDuration-to-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime} => {:add-dayTimeDuration-to-dateTime-1 :result true}}]
  <#lemma327>
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime} e:labelvars {("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime}}]);
  r:rule <#lemma224>.

<#lemma105> a r:Inference; r:gives {{{("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date} => {:add-dayTimeDuration-to-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date} => {:add-dayTimeDuration-to-date-1 :result true}}]
  <#lemma328>
  [ a r:Fact; r:gives {{("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date} e:labelvars {("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date}}]);
  r:rule <#lemma224>.

<#lemma106> a r:Inference; r:gives {{{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time} => {:add-dayTimeDuration-to-time-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time} => {:add-dayTimeDuration-to-time-1 :result true}}]
  <#lemma329>
  [ a r:Fact; r:gives {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time} e:labelvars {("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time}}]);
  r:rule <#lemma224>.

<#lemma107> a r:Inference; r:gives {{{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime} => {:subtract-yearMonthDuration-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime} => {:subtract-yearMonthDuration-from-dateTime-1 :result true}}]
  <#lemma330>
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime} e:labelvars {("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime}}]);
  r:rule <#lemma224>.

<#lemma108> a r:Inference; r:gives {{{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date} => {:subtract-yearMonthDuration-from-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date} => {:subtract-yearMonthDuration-from-date-1 :result true}}]
  <#lemma331>
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date} e:labelvars {("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date}}]);
  r:rule <#lemma224>.

<#lemma109> a r:Inference; r:gives {{{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime} => {:subtract-dayTimeDuration-from-dateTime-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime} => {:subtract-dayTimeDuration-from-dateTime-1 :result true}}]
  <#lemma332>
  [ a r:Fact; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime} e:labelvars {("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime}}]);
  r:rule <#lemma224>.

<#lemma110> a r:Inference; r:gives {{{("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date} => {:subtract-dayTimeDuration-from-date-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date} => {:subtract-dayTimeDuration-from-date-1 :result true}}]
  <#lemma333>
  [ a r:Fact; r:gives {{("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date} e:labelvars {("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date}}]);
  r:rule <#lemma224>.

<#lemma111> a r:Inference; r:gives {{{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time} => {:subtract-dayTimeDuration-from-time-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time} => {:subtract-dayTimeDuration-from-time-1 :result true}}]
  <#lemma334>
  [ a r:Fact; r:gives {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time} e:labelvars {("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time}}]);
  r:rule <#lemma224>.

<#lemma112> a r:Inference; r:gives {{{("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time} => {:subtract-dayTimeDuration-from-time-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time} => {:subtract-dayTimeDuration-from-time-2 :result true}}]
  <#lemma335>
  [ a r:Fact; r:gives {{("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time} e:labelvars {("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time}}]);
  r:rule <#lemma224>.

<#lemma113> a r:Inference; r:gives {{{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-1 :result true}}]
  <#lemma336>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true} e:labelvars {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true}}]);
  r:rule <#lemma224>.

<#lemma114> a r:Inference; r:gives {{{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-2 :result true}}]
  <#lemma337>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true} e:labelvars {("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true}}]);
  r:rule <#lemma224>.

<#lemma115> a r:Inference; r:gives {{{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-3 :result true}}]
  <#lemma338>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} e:labelvars {("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false}}]);
  r:rule <#lemma224>.

<#lemma116> a r:Inference; r:gives {{{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-4 :result true}}]
  <#lemma339>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} e:labelvars {("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true}}]);
  r:rule <#lemma224>.

<#lemma117> a r:Inference; r:gives {{{("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-5 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-5 :result true}}]
  <#lemma340>
  [ a r:Fact; r:gives {{("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true} e:labelvars {("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true}}]);
  r:rule <#lemma224>.

<#lemma118> a r:Inference; r:gives {{{("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-6 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-6 :result true}}]
  <#lemma341>
  [ a r:Fact; r:gives {{("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} e:labelvars {("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true}}]);
  r:rule <#lemma224>.

<#lemma119> a r:Inference; r:gives {{{("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-7 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-7 :result true}}]
  <#lemma342>
  [ a r:Fact; r:gives {{("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} e:labelvars {("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false}}]);
  r:rule <#lemma224>.

<#lemma120> a r:Inference; r:gives {{{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true} => {:dateTime-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true} => {:dateTime-less-than-1 :result true}}]
  <#lemma343>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true} e:labelvars {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true}}]);
  r:rule <#lemma224>.

<#lemma121> a r:Inference; r:gives {{{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true} => {:dateTime-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true} => {:dateTime-greater-than-1 :result true}}]
  <#lemma344>
  [ a r:Fact; r:gives {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true} e:labelvars {("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true}}]);
  r:rule <#lemma224>.

<#lemma122> a r:Inference; r:gives {{{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false} => {:date-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false} => {:date-equal-1 :result true}}]
  <#lemma345>
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false} e:labelvars {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false}}]);
  r:rule <#lemma224>.

<#lemma123> a r:Inference; r:gives {{{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true} => {:date-equal-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true} => {:date-equal-2 :result true}}]
  <#lemma346>
  [ a r:Fact; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true} e:labelvars {("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true}}]);
  r:rule <#lemma224>.

<#lemma124> a r:Inference; r:gives {{{("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true} => {:date-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true} => {:date-less-than-1 :result true}}]
  <#lemma347>
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true} e:labelvars {("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true}}]);
  r:rule <#lemma224>.

<#lemma125> a r:Inference; r:gives {{{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false} => {:date-less-than-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false} => {:date-less-than-2 :result true}}]
  <#lemma348>
  [ a r:Fact; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false} e:labelvars {("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false}}]);
  r:rule <#lemma224>.

<#lemma126> a r:Inference; r:gives {{{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true} => {:date-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true} => {:date-greater-than-1 :result true}}]
  <#lemma349>
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true} e:labelvars {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true}}]);
  r:rule <#lemma224>.

<#lemma127> a r:Inference; r:gives {{{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false} => {:date-greater-than-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false} => {:date-greater-than-2 :result true}}]
  <#lemma350>
  [ a r:Fact; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false} e:labelvars {("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false}}]);
  r:rule <#lemma224>.

<#lemma128> a r:Inference; r:gives {{{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false} => {:time-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false} => {:time-equal-1 :result true}}]
  <#lemma351>
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false} e:labelvars {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false}}]);
  r:rule <#lemma224>.

<#lemma129> a r:Inference; r:gives {{{("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true} => {:time-equal-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true} => {:time-equal-2 :result true}}]
  <#lemma352>
  [ a r:Fact; r:gives {{("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true} e:labelvars {("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true}}]);
  r:rule <#lemma224>.

<#lemma130> a r:Inference; r:gives {{{("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true} => {:time-equal-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true} => {:time-equal-3 :result true}}]
  <#lemma353>
  [ a r:Fact; r:gives {{("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true} e:labelvars {("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true}}]);
  r:rule <#lemma224>.

<#lemma131> a r:Inference; r:gives {{{("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-1 :result true}}]
  <#lemma354>
  [ a r:Fact; r:gives {{("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false} e:labelvars {("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false}}]);
  r:rule <#lemma224>.

<#lemma132> a r:Inference; r:gives {{{("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true} => {:time-less-than-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true} => {:time-less-than-2 :result true}}]
  <#lemma355>
  [ a r:Fact; r:gives {{("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true} e:labelvars {("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true}}]);
  r:rule <#lemma224>.

<#lemma133> a r:Inference; r:gives {{{("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-3 :result true}}]
  <#lemma356>
  [ a r:Fact; r:gives {{("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false} e:labelvars {("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false}}]);
  r:rule <#lemma224>.

<#lemma134> a r:Inference; r:gives {{{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false} => {:time-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false} => {:time-greater-than-1 :result true}}]
  <#lemma357>
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false} e:labelvars {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false}}]);
  r:rule <#lemma224>.

<#lemma135> a r:Inference; r:gives {{{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-1 :result true}}]
  <#lemma358>
  [ a r:Fact; r:gives {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true} e:labelvars {("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true}}]);
  r:rule <#lemma224>.

<#lemma136> a r:Inference; r:gives {{{("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true} => {:duration-equal-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true} => {:duration-equal-2 :result true}}]
  <#lemma359>
  [ a r:Fact; r:gives {{("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true} e:labelvars {("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true}}]);
  r:rule <#lemma224>.

<#lemma137> a r:Inference; r:gives {{{("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false} => {:duration-equal-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false} => {:duration-equal-3 :result true}}]
  <#lemma360>
  [ a r:Fact; r:gives {{("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false} e:labelvars {("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false}}]);
  r:rule <#lemma224>.

<#lemma138> a r:Inference; r:gives {{{("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-4 :result true}}]
  <#lemma361>
  [ a r:Fact; r:gives {{("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true} e:labelvars {("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true}}]);
  r:rule <#lemma224>.

<#lemma139> a r:Inference; r:gives {{{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true} => {:dayTimeDuration-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true} => {:dayTimeDuration-less-than-1 :result true}}]
  <#lemma362>
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true} e:labelvars {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true}}]);
  r:rule <#lemma224>.

<#lemma140> a r:Inference; r:gives {{{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false} => {:dayTimeDuration-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false} => {:dayTimeDuration-greater-than-1 :result true}}]
  <#lemma363>
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false} e:labelvars {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false}}]);
  r:rule <#lemma224>.

<#lemma141> a r:Inference; r:gives {{{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true} => {:yearMonthDuration-less-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true} => {:yearMonthDuration-less-than-1 :result true}}]
  <#lemma364>
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true} e:labelvars {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true}}]);
  r:rule <#lemma224>.

<#lemma142> a r:Inference; r:gives {{{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false} => {:yearMonthDuration-greater-than-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false} => {:yearMonthDuration-greater-than-1 :result true}}]
  <#lemma365>
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false} e:labelvars {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false}}]);
  r:rule <#lemma224>.

<#lemma143> a r:Inference; r:gives {{{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false} => {:dateTime-not-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false} => {:dateTime-not-equal-1 :result true}}]
  <#lemma366>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false} e:labelvars {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false}}]);
  r:rule <#lemma224>.

<#lemma144> a r:Inference; r:gives {{{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true} => {:dateTime-less-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true} => {:dateTime-less-than-or-equal-1 :result true}}]
  <#lemma367>
  [ a r:Fact; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true} e:labelvars {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma145> a r:Inference; r:gives {{{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true} => {:dateTime-greater-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true} => {:dateTime-greater-than-or-equal-1 :result true}}]
  <#lemma368>
  [ a r:Fact; r:gives {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true} e:labelvars {("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma146> a r:Inference; r:gives {{{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true} => {:date-not-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true} => {:date-not-equal-1 :result true}}]
  <#lemma369>
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true} e:labelvars {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true}}]);
  r:rule <#lemma224>.

<#lemma147> a r:Inference; r:gives {{{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false} => {:date-less-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false} => {:date-less-than-or-equal-1 :result true}}]
  <#lemma370>
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false} e:labelvars {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false}}]);
  r:rule <#lemma224>.

<#lemma148> a r:Inference; r:gives {{{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true} => {:date-greater-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true} => {:date-greater-than-or-equal-1 :result true}}]
  <#lemma371>
  [ a r:Fact; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true} e:labelvars {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma149> a r:Inference; r:gives {{{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true} => {:time-not-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true} => {:time-not-equal-1 :result true}}]
  <#lemma372>
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true} e:labelvars {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true}}]);
  r:rule <#lemma224>.

<#lemma150> a r:Inference; r:gives {{{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true} => {:time-less-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true} => {:time-less-than-or-equal-1 :result true}}]
  <#lemma373>
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true} e:labelvars {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma151> a r:Inference; r:gives {{{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false} => {:time-greater-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false} => {:time-greater-than-or-equal-1 :result true}}]
  <#lemma374>
  [ a r:Fact; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false} e:labelvars {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false}}]);
  r:rule <#lemma224>.

<#lemma152> a r:Inference; r:gives {{{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false} => {:duration-not-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false} => {:duration-not-equal-1 :result true}}]
  <#lemma375>
  [ a r:Fact; r:gives {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false} e:labelvars {("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false}}]);
  r:rule <#lemma224>.

<#lemma153> a r:Inference; r:gives {{{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true} => {:dayTimeDuration-less-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true} => {:dayTimeDuration-less-than-or-equal-1 :result true}}]
  <#lemma376>
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true} e:labelvars {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma154> a r:Inference; r:gives {{{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false} => {:dayTimeDuration-greater-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false} => {:dayTimeDuration-greater-than-or-equal-1 :result true}}]
  <#lemma377>
  [ a r:Fact; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false} e:labelvars {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false}}]);
  r:rule <#lemma224>.

<#lemma155> a r:Inference; r:gives {{{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true} => {:yearMonthDuration-less-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true} => {:yearMonthDuration-less-than-or-equal-1 :result true}}]
  <#lemma378>
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true} e:labelvars {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true}}]);
  r:rule <#lemma224>.

<#lemma156> a r:Inference; r:gives {{{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false} => {:yearMonthDuration-greater-than-or-equal-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false} => {:yearMonthDuration-greater-than-or-equal-1 :result true}}]
  <#lemma379>
  [ a r:Fact; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false} e:labelvars {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false}}]);
  r:rule <#lemma224>.

<#lemma157> a r:Inference; r:gives {{{("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"} => {:PlainLiteral-from-string-lang-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"} => {:PlainLiteral-from-string-lang-1 :result true}}]
  <#lemma380>
  [ a r:Fact; r:gives {{("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"} e:labelvars {("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"}}]);
  r:rule <#lemma224>.

<#lemma158> a r:Inference; r:gives {{{("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en} => {:PlainLiteral-from-string-lang-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en} => {:PlainLiteral-from-string-lang-2 :result true}}]
  <#lemma381>
  [ a r:Fact; r:gives {{("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en} e:labelvars {("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en}}]);
  r:rule <#lemma224>.

<#lemma159> a r:Inference; r:gives {{{("Family Guy") func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy") func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-1 :result true}}]
  <#lemma382>
  [ a r:Fact; r:gives {{("Family Guy") func:string-from-PlainLiteral "Family Guy"} e:labelvars {("Family Guy") func:string-from-PlainLiteral "Family Guy"}}]);
  r:rule <#lemma224>.

<#lemma160> a r:Inference; r:gives {{{("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-2 :result true}}]
  <#lemma383>
  [ a r:Fact; r:gives {{("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"} e:labelvars {("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"}}]);
  r:rule <#lemma224>.

<#lemma161> a r:Inference; r:gives {{{("Family Guy") func:lang-from-PlainLiteral ""} => {:lang-from-PlainLiteral-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy") func:lang-from-PlainLiteral ""} => {:lang-from-PlainLiteral-1 :result true}}]
  <#lemma384>
  [ a r:Fact; r:gives {{("Family Guy") func:lang-from-PlainLiteral ""} e:labelvars {("Family Guy") func:lang-from-PlainLiteral ""}}]);
  r:rule <#lemma224>.

<#lemma162> a r:Inference; r:gives {{{("Family Guy"@en) func:lang-from-PlainLiteral "en"} => {:lang-from-PlainLiteral-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy"@en) func:lang-from-PlainLiteral "en"} => {:lang-from-PlainLiteral-2 :result true}}]
  <#lemma385>
  [ a r:Fact; r:gives {{("Family Guy"@en) func:lang-from-PlainLiteral "en"} e:labelvars {("Family Guy"@en) func:lang-from-PlainLiteral "en"}}]);
  r:rule <#lemma224>.

<#lemma163> a r:Inference; r:gives {{{("Family Guy" "Mother") func:PlainLiteral-compare -1} => {:PlainLiteral-compare-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy" "Mother") func:PlainLiteral-compare -1} => {:PlainLiteral-compare-1 :result true}}]
  <#lemma386>
  [ a r:Fact; r:gives {{("Family Guy" "Mother") func:PlainLiteral-compare -1} e:labelvars {("Family Guy" "Mother") func:PlainLiteral-compare -1}}]);
  r:rule <#lemma224>.

<#lemma164> a r:Inference; r:gives {{{("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1} => {:PlainLiteral-compare-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1} => {:PlainLiteral-compare-2 :result true}}]
  <#lemma387>
  [ a r:Fact; r:gives {{("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1} e:labelvars {("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1}}]);
  r:rule <#lemma224>.

<#lemma165> a r:Inference; r:gives {{{("Family Guy") func:PlainLiteral-length 10} => {:PlainLiteral-length-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy") func:PlainLiteral-length 10} => {:PlainLiteral-length-1 :result true}}]
  <#lemma388>
  [ a r:Fact; r:gives {{("Family Guy") func:PlainLiteral-length 10} e:labelvars {("Family Guy") func:PlainLiteral-length 10}}]);
  r:rule <#lemma224>.

<#lemma166> a r:Inference; r:gives {{{("Family Guy"@en) func:PlainLiteral-length 10} => {:PlainLiteral-length-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy"@en) func:PlainLiteral-length 10} => {:PlainLiteral-length-2 :result true}}]
  <#lemma389>
  [ a r:Fact; r:gives {{("Family Guy"@en) func:PlainLiteral-length 10} e:labelvars {("Family Guy"@en) func:PlainLiteral-length 10}}]);
  r:rule <#lemma224>.

<#lemma167> a r:Inference; r:gives {{{("Family Guy"@en "en") pred:matches-language-range true} => {:matches-language-range-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy"@en "en") pred:matches-language-range true} => {:matches-language-range-1 :result true}}]
  <#lemma390>
  [ a r:Fact; r:gives {{("Family Guy"@en "en") pred:matches-language-range true} e:labelvars {("Family Guy"@en "en") pred:matches-language-range true}}]);
  r:rule <#lemma224>.

<#lemma168> a r:Inference; r:gives {{{("Family Guy"@en-us "en-*") pred:matches-language-range true} => {:matches-language-range-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{("Family Guy"@en-us "en-*") pred:matches-language-range true} => {:matches-language-range-2 :result true}}]
  <#lemma391>
  [ a r:Fact; r:gives {{("Family Guy"@en-us "en-*") pred:matches-language-range true} e:labelvars {("Family Guy"@en-us "en-*") pred:matches-language-range true}}]);
  r:rule <#lemma224>.

<#lemma169> a r:Inference; r:gives {{{((:a :b :c :d)) pred:is-list true} => {:is-list-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c :d)) pred:is-list true} => {:is-list-1 :result true}}]
  <#lemma392>
  [ a r:Fact; r:gives {{((:a :b :c :d)) pred:is-list true} e:labelvars {((:a :b :c :d)) pred:is-list true}}]);
  r:rule <#lemma224>.

<#lemma170> a r:Inference; r:gives {{{((:a :b :c :d) :b) pred:list-contains true} => {:list-contains-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c :d) :b) pred:list-contains true} => {:list-contains-1 :result true}}]
  <#lemma393>
  [ a r:Fact; r:gives {{((:a :b :c :d) :b) pred:list-contains true} e:labelvars {((:a :b :c :d) :b) pred:list-contains true}}]);
  r:rule <#lemma224>.

<#lemma171> a r:Inference; r:gives {{{(:a :b :c :d) func:make-list (:a :b :c :d)} => {:make-list-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(:a :b :c :d) func:make-list (:a :b :c :d)} => {:make-list-1 :result true}}]
  <#lemma394>
  [ a r:Fact; r:gives {{(:a :b :c :d) func:make-list (:a :b :c :d)} e:labelvars {(:a :b :c :d) func:make-list (:a :b :c :d)}}]);
  r:rule <#lemma224>.

<#lemma172> a r:Inference; r:gives {{{((:a :b :c :d)) func:count 4} => {:count-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c :d)) func:count 4} => {:count-1 :result true}}]
  <#lemma395>
  [ a r:Fact; r:gives {{((:a :b :c :d)) func:count 4} e:labelvars {((:a :b :c :d)) func:count 4}}]);
  r:rule <#lemma224>.

<#lemma173> a r:Inference; r:gives {{{((:a :b :c :d) 3) func:get :d} => {:get-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((:a :b :c :d) 3) func:get :d} => {:get-1 :result true}}]
  <#lemma396>
  [ a r:Fact; r:gives {{((:a :b :c :d) 3) func:get :d} e:labelvars {((:a :b :c :d) 3) func:get :d}}]);
  r:rule <#lemma224>.

<#lemma174> a r:Inference; r:gives {{{((0 1 2 3 4) 0 0) func:sublist ()} => {:sublist-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 0) func:sublist ()} => {:sublist-1 :result true}}]
  <#lemma397>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 0) func:sublist ()} e:labelvars {((0 1 2 3 4) 0 0) func:sublist ()}}]);
  r:rule <#lemma224>.

<#lemma175> a r:Inference; r:gives {{{((0 1 2 3 4) 0 1) func:sublist (0)} => {:sublist-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 1) func:sublist (0)} => {:sublist-2 :result true}}]
  <#lemma398>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 1) func:sublist (0)} e:labelvars {((0 1 2 3 4) 0 1) func:sublist (0)}}]);
  r:rule <#lemma224>.

<#lemma176> a r:Inference; r:gives {{{((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)} => {:sublist-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)} => {:sublist-3 :result true}}]
  <#lemma399>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)} e:labelvars {((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)}}]);
  r:rule <#lemma224>.

<#lemma177> a r:Inference; r:gives {{{((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)} => {:sublist-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)} => {:sublist-4 :result true}}]
  <#lemma400>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)} e:labelvars {((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma178> a r:Inference; r:gives {{{((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)} => {:sublist-5 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)} => {:sublist-5 :result true}}]
  <#lemma401>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)} e:labelvars {((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma179> a r:Inference; r:gives {{{((0 1 2 3 4) 0 -2) func:sublist (0 1 2)} => {:sublist-6 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 -2) func:sublist (0 1 2)} => {:sublist-6 :result true}}]
  <#lemma402>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 -2) func:sublist (0 1 2)} e:labelvars {((0 1 2 3 4) 0 -2) func:sublist (0 1 2)}}]);
  r:rule <#lemma224>.

<#lemma180> a r:Inference; r:gives {{{((0 1 2 3 4) 2 4) func:sublist (2 3)} => {:sublist-7 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 2 4) func:sublist (2 3)} => {:sublist-7 :result true}}]
  <#lemma403>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 2 4) func:sublist (2 3)} e:labelvars {((0 1 2 3 4) 2 4) func:sublist (2 3)}}]);
  r:rule <#lemma224>.

<#lemma181> a r:Inference; r:gives {{{((0 1 2 3 4) 2 -2) func:sublist (2)} => {:sublist-9 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 2 -2) func:sublist (2)} => {:sublist-9 :result true}}]
  <#lemma404>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 2 -2) func:sublist (2)} e:labelvars {((0 1 2 3 4) 2 -2) func:sublist (2)}}]);
  r:rule <#lemma224>.

<#lemma182> a r:Inference; r:gives {{{((0 1 2 3 4) 0) func:sublist (0 1 2 3 4)} => {:sublist-9 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0) func:sublist (0 1 2 3 4)} => {:sublist-9 :result true}}]
  <#lemma404>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0) func:sublist (0 1 2 3 4)} e:labelvars {((0 1 2 3 4) 0) func:sublist (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma183> a r:Inference; r:gives {{{((0 1 2 3 4) 3) func:sublist (3 4)} => {:sublist-10 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 3) func:sublist (3 4)} => {:sublist-10 :result true}}]
  <#lemma405>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 3) func:sublist (3 4)} e:labelvars {((0 1 2 3 4) 3) func:sublist (3 4)}}]);
  r:rule <#lemma224>.

<#lemma184> a r:Inference; r:gives {{{((0 1 2 3 4) -2) func:sublist (3 4)} => {:sublist-11 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) -2) func:sublist (3 4)} => {:sublist-11 :result true}}]
  <#lemma406>
  [ a r:Fact; r:gives {{((0 1 2 3 4) -2) func:sublist (3 4)} e:labelvars {((0 1 2 3 4) -2) func:sublist (3 4)}}]);
  r:rule <#lemma224>.

<#lemma185> a r:Inference; r:gives {{{((0 1 2) 3) func:append (0 1 2 3)} => {:append-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2) 3) func:append (0 1 2 3)} => {:append-1 :result true}}]
  <#lemma407>
  [ a r:Fact; r:gives {{((0 1 2) 3) func:append (0 1 2 3)} e:labelvars {((0 1 2) 3) func:append (0 1 2 3)}}]);
  r:rule <#lemma224>.

<#lemma186> a r:Inference; r:gives {{{((0 1 2) 3 4) func:append (0 1 2 3 4)} => {:append-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2) 3 4) func:append (0 1 2 3 4)} => {:append-2 :result true}}]
  <#lemma408>
  [ a r:Fact; r:gives {{((0 1 2) 3 4) func:append (0 1 2 3 4)} e:labelvars {((0 1 2) 3 4) func:append (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma187> a r:Inference; r:gives {{{((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))} => {:append-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))} => {:append-3 :result true}}]
  <#lemma409>
  [ a r:Fact; r:gives {{((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))} e:labelvars {((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))}}]);
  r:rule <#lemma224>.

<#lemma188> a r:Inference; r:gives {{{(() 1) func:append (1)} => {:append-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(() 1) func:append (1)} => {:append-4 :result true}}]
  <#lemma410>
  [ a r:Fact; r:gives {{(() 1) func:append (1)} e:labelvars {(() 1) func:append (1)}}]);
  r:rule <#lemma224>.

<#lemma189> a r:Inference; r:gives {{{((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)} => {:concatenate-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)} => {:concatenate-1 :result true}}]
  <#lemma411>
  [ a r:Fact; r:gives {{((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)} e:labelvars {((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)}}]);
  r:rule <#lemma224>.

<#lemma190> a r:Inference; r:gives {{{((1 1) (1) (1)) func:concatenate (1 1 1 1)} => {:concatenate-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((1 1) (1) (1)) func:concatenate (1 1 1 1)} => {:concatenate-2 :result true}}]
  <#lemma412>
  [ a r:Fact; r:gives {{((1 1) (1) (1)) func:concatenate (1 1 1 1)} e:labelvars {((1 1) (1) (1)) func:concatenate (1 1 1 1)}}]);
  r:rule <#lemma224>.

<#lemma191> a r:Inference; r:gives {{{(()) func:concatenate ()} => {:concatenate-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(()) func:concatenate ()} => {:concatenate-3 :result true}}]
  <#lemma413>
  [ a r:Fact; r:gives {{(()) func:concatenate ()} e:labelvars {(()) func:concatenate ()}}]);
  r:rule <#lemma224>.

<#lemma192> a r:Inference; r:gives {{{(() (1) () (2) ((3))) func:concatenate (1 2 (3))} => {:concatenate-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(() (1) () (2) ((3))) func:concatenate (1 2 (3))} => {:concatenate-4 :result true}}]
  <#lemma414>
  [ a r:Fact; r:gives {{(() (1) () (2) ((3))) func:concatenate (1 2 (3))} e:labelvars {(() (1) () (2) ((3))) func:concatenate (1 2 (3))}}]);
  r:rule <#lemma224>.

<#lemma193> a r:Inference; r:gives {{{((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-1 :result true}}]
  <#lemma415>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)} e:labelvars {((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma194> a r:Inference; r:gives {{{((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)} => {:insert-before-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)} => {:insert-before-2 :result true}}]
  <#lemma416>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)} e:labelvars {((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma195> a r:Inference; r:gives {{{((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)} => {:insert-before-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)} => {:insert-before-3 :result true}}]
  <#lemma417>
  [ a r:Fact; r:gives {{((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)} e:labelvars {((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)}}]);
  r:rule <#lemma224>.

<#lemma196> a r:Inference; r:gives {{{((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-4 :result true}}]
  <#lemma418>
  [ a r:Fact; r:gives {{((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)} e:labelvars {((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma197> a r:Inference; r:gives {{{((0 1 2 3 4) 0) func:remove (1 2 3 4)} => {:remove-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0) func:remove (1 2 3 4)} => {:remove-1 :result true}}]
  <#lemma419>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 0) func:remove (1 2 3 4)} e:labelvars {((0 1 2 3 4) 0) func:remove (1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma198> a r:Inference; r:gives {{{((0 1 2 3 4) 1) func:remove (0 2 3 4)} => {:remove-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 1) func:remove (0 2 3 4)} => {:remove-2 :result true}}]
  <#lemma420>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 1) func:remove (0 2 3 4)} e:labelvars {((0 1 2 3 4) 1) func:remove (0 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma199> a r:Inference; r:gives {{{((0 1 2 3 4) 4) func:remove (0 1 2 3)} => {:remove-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 4) func:remove (0 1 2 3)} => {:remove-3 :result true}}]
  <#lemma421>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 4) func:remove (0 1 2 3)} e:labelvars {((0 1 2 3 4) 4) func:remove (0 1 2 3)}}]);
  r:rule <#lemma224>.

<#lemma200> a r:Inference; r:gives {{{((0 1 2 3 4) -1) func:remove (0 1 2 3)} => {:remove-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) -1) func:remove (0 1 2 3)} => {:remove-4 :result true}}]
  <#lemma422>
  [ a r:Fact; r:gives {{((0 1 2 3 4) -1) func:remove (0 1 2 3)} e:labelvars {((0 1 2 3 4) -1) func:remove (0 1 2 3)}}]);
  r:rule <#lemma224>.

<#lemma201> a r:Inference; r:gives {{{((0 1 2 3 4) -5) func:remove (1 2 3 4)} => {:remove-5 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) -5) func:remove (1 2 3 4)} => {:remove-5 :result true}}]
  <#lemma423>
  [ a r:Fact; r:gives {{((0 1 2 3 4) -5) func:remove (1 2 3 4)} e:labelvars {((0 1 2 3 4) -5) func:remove (1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma202> a r:Inference; r:gives {{{((0 1 2 3 4)) func:reverse (4 3 2 1 0)} => {:reverse-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4)) func:reverse (4 3 2 1 0)} => {:reverse-1 :result true}}]
  <#lemma424>
  [ a r:Fact; r:gives {{((0 1 2 3 4)) func:reverse (4 3 2 1 0)} e:labelvars {((0 1 2 3 4)) func:reverse (4 3 2 1 0)}}]);
  r:rule <#lemma224>.

<#lemma203> a r:Inference; r:gives {{{((1)) func:reverse (1)} => {:reverse-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((1)) func:reverse (1)} => {:reverse-2 :result true}}]
  <#lemma425>
  [ a r:Fact; r:gives {{((1)) func:reverse (1)} e:labelvars {((1)) func:reverse (1)}}]);
  r:rule <#lemma224>.

<#lemma204> a r:Inference; r:gives {{{(()) func:reverse ()} => {:reverse-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{(()) func:reverse ()} => {:reverse-3 :result true}}]
  <#lemma426>
  [ a r:Fact; r:gives {{(()) func:reverse ()} e:labelvars {(()) func:reverse ()}}]);
  r:rule <#lemma224>.

<#lemma205> a r:Inference; r:gives {{{((0 1 2 3 4) 2) func:index-of (2)} => {:index-of-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) 2) func:index-of (2)} => {:index-of-1 :result true}}]
  <#lemma427>
  [ a r:Fact; r:gives {{((0 1 2 3 4) 2) func:index-of (2)} e:labelvars {((0 1 2 3 4) 2) func:index-of (2)}}]);
  r:rule <#lemma224>.

<#lemma206> a r:Inference; r:gives {{{((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)} => {:index-of-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)} => {:index-of-2 :result true}}]
  <#lemma428>
  [ a r:Fact; r:gives {{((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)} e:labelvars {((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)}}]);
  r:rule <#lemma224>.

<#lemma207> a r:Inference; r:gives {{{((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)} => {:index-of-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)} => {:index-of-3 :result true}}]
  <#lemma429>
  [ a r:Fact; r:gives {{((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)} e:labelvars {((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)}}]);
  r:rule <#lemma224>.

<#lemma208> a r:Inference; r:gives {{{((2 2 3 4 5 2 2) 1) func:index-of ()} => {:index-of-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((2 2 3 4 5 2 2) 1) func:index-of ()} => {:index-of-4 :result true}}]
  <#lemma430>
  [ a r:Fact; r:gives {{((2 2 3 4 5 2 2) 1) func:index-of ()} e:labelvars {((2 2 3 4 5 2 2) 1) func:index-of ()}}]);
  r:rule <#lemma224>.

<#lemma209> a r:Inference; r:gives {{{((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)} => {:union-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)} => {:union-1 :result true}}]
  <#lemma431>
  [ a r:Fact; r:gives {{((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)} e:labelvars {((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)}}]);
  r:rule <#lemma224>.

<#lemma210> a r:Inference; r:gives {{{((0 1 2 3) (4)) func:union (0 1 2 3 4)} => {:union-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3) (4)) func:union (0 1 2 3 4)} => {:union-2 :result true}}]
  <#lemma432>
  [ a r:Fact; r:gives {{((0 1 2 3) (4)) func:union (0 1 2 3 4)} e:labelvars {((0 1 2 3) (4)) func:union (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma211> a r:Inference; r:gives {{{((0 1 2 3) (3)) func:union (0 1 2 3)} => {:union-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3) (3)) func:union (0 1 2 3)} => {:union-3 :result true}}]
  <#lemma433>
  [ a r:Fact; r:gives {{((0 1 2 3) (3)) func:union (0 1 2 3)} e:labelvars {((0 1 2 3) (3)) func:union (0 1 2 3)}}]);
  r:rule <#lemma224>.

<#lemma212> a r:Inference; r:gives {{{((0 2 1 0)) func:union (0 2 1)} => {:union-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 2 1 0)) func:union (0 2 1)} => {:union-4 :result true}}]
  <#lemma434>
  [ a r:Fact; r:gives {{((0 2 1 0)) func:union (0 2 1)} e:labelvars {((0 2 1 0)) func:union (0 2 1)}}]);
  r:rule <#lemma224>.

<#lemma213> a r:Inference; r:gives {{{((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-1 :result true}}]
  <#lemma435>
  [ a r:Fact; r:gives {{((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)} e:labelvars {((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma214> a r:Inference; r:gives {{{((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-2 :result true}}]
  <#lemma436>
  [ a r:Fact; r:gives {{((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)} e:labelvars {((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma215> a r:Inference; r:gives {{{((3 3 3)) func:distinct-values (3)} => {:distinct-values-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((3 3 3)) func:distinct-values (3)} => {:distinct-values-3 :result true}}]
  <#lemma437>
  [ a r:Fact; r:gives {{((3 3 3)) func:distinct-values (3)} e:labelvars {((3 3 3)) func:distinct-values (3)}}]);
  r:rule <#lemma224>.

<#lemma216> a r:Inference; r:gives {{{((0 1 2 3 4) (1 3)) func:intersect (1 3)} => {:intersect-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) (1 3)) func:intersect (1 3)} => {:intersect-1 :result true}}]
  <#lemma438>
  [ a r:Fact; r:gives {{((0 1 2 3 4) (1 3)) func:intersect (1 3)} e:labelvars {((0 1 2 3 4) (1 3)) func:intersect (1 3)}}]);
  r:rule <#lemma224>.

<#lemma217> a r:Inference; r:gives {{{((0 1 2 3 4) (3 1)) func:intersect (1 3)} => {:intersect-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) (3 1)) func:intersect (1 3)} => {:intersect-2 :result true}}]
  <#lemma439>
  [ a r:Fact; r:gives {{((0 1 2 3 4) (3 1)) func:intersect (1 3)} e:labelvars {((0 1 2 3 4) (3 1)) func:intersect (1 3)}}]);
  r:rule <#lemma224>.

<#lemma218> a r:Inference; r:gives {{{((0 1 2 3 4) ()) func:intersect ()} => {:intersect-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) ()) func:intersect ()} => {:intersect-3 :result true}}]
  <#lemma440>
  [ a r:Fact; r:gives {{((0 1 2 3 4) ()) func:intersect ()} e:labelvars {((0 1 2 3 4) ()) func:intersect ()}}]);
  r:rule <#lemma224>.

<#lemma219> a r:Inference; r:gives {{{((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)} => {:intersect-4 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)} => {:intersect-4 :result true}}]
  <#lemma441>
  [ a r:Fact; r:gives {{((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)} e:labelvars {((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma220> a r:Inference; r:gives {{{((0 1 2 3 4) (1 3)) func:except (0 2 4)} => {:except-1 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) (1 3)) func:except (0 2 4)} => {:except-1 :result true}}]
  <#lemma442>
  [ a r:Fact; r:gives {{((0 1 2 3 4) (1 3)) func:except (0 2 4)} e:labelvars {((0 1 2 3 4) (1 3)) func:except (0 2 4)}}]);
  r:rule <#lemma224>.

<#lemma221> a r:Inference; r:gives {{{((0 1 2 3 4) ()) func:except (0 1 2 3 4)} => {:except-2 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) ()) func:except (0 1 2 3 4)} => {:except-2 :result true}}]
  <#lemma443>
  [ a r:Fact; r:gives {{((0 1 2 3 4) ()) func:except (0 1 2 3 4)} e:labelvars {((0 1 2 3 4) ()) func:except (0 1 2 3 4)}}]);
  r:rule <#lemma224>.

<#lemma222> a r:Inference; r:gives {{{((0 1 2 3 4) (0 1 2 3 4)) func:except ()} => {:except-3 :result true}} a :PASS}; r:evidence (
  [ a r:Fact; r:gives {{((0 1 2 3 4) (0 1 2 3 4)) func:except ()} => {:except-3 :result true}}]
  <#lemma444>
  [ a r:Fact; r:gives {{((0 1 2 3 4) (0 1 2 3 4)) func:except ()} e:labelvars {((0 1 2 3 4) (0 1 2 3 4)) func:except ()}}]);
  r:rule <#lemma224>.

<#lemma223> a r:Inference; r:gives {:literal-not-identical-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("chat"@fr "chien"@fr) pred:literal-not-identical true}]);
  r:rule <#lemma445>.

<#lemma224> a r:Extraction; r:gives {{?x0 => {_:x1 :result _:x2}.
  ?x1 :result ?x2.
  ?x0 e:labelvars ?x0} => {{?x0 => {?x1 :result ?x2}} a :PASS}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifQ.n3>].

<#lemma225> a r:Inference; r:gives {:iri-string-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true}]);
  r:rule <#lemma446>.

<#lemma226> a r:Inference; r:gives {:numeric-add-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1 1) func:numeric-add 2}]);
  r:rule <#lemma447>.

<#lemma227> a r:Inference; r:gives {:numeric-subtract-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(5 2) func:numeric-subtract 3}]);
  r:rule <#lemma448>.

<#lemma228> a r:Inference; r:gives {:numeric-multiply-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(5 2) func:numeric-multiply 10}]);
  r:rule <#lemma449>.

<#lemma229> a r:Inference; r:gives {:numeric-divide-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(5 2) func:numeric-divide 2.5}]);
  r:rule <#lemma450>.

<#lemma230> a r:Inference; r:gives {:numeric-integer-divide-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(5 2) func:numeric-integer-divide 2}]);
  r:rule <#lemma451>.

<#lemma231> a r:Inference; r:gives {:numeric-mod-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(10 3) func:numeric-mod 1}]);
  r:rule <#lemma452>.

<#lemma232> a r:Inference; r:gives {:numeric-mod-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(6 -2) func:numeric-mod 0}]);
  r:rule <#lemma453>.

<#lemma233> a r:Inference; r:gives {:numeric-mod-3 :result 0.9000000000000004}; r:evidence (
  [ a r:Fact; r:gives {(4.5 1.2) func:numeric-mod 0.9000000000000004}]);
  r:rule <#lemma454>.

<#lemma234> a r:Inference; r:gives {:numeric-mod-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {(123.0 6.0) func:numeric-mod 3.0}]);
  r:rule <#lemma455>.

<#lemma235> a r:Inference; r:gives {:numeric-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1 1.0) pred:numeric-equal true}]);
  r:rule <#lemma456>.

<#lemma236> a r:Inference; r:gives {:numeric-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(2.0 3) pred:numeric-less-than true}]);
  r:rule <#lemma457>.

<#lemma237> a r:Inference; r:gives {:numeric-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1.0 0) pred:numeric-greater-than true}]);
  r:rule <#lemma458>.

<#lemma238> a r:Inference; r:gives {:numeric-not-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1 1.01) pred:numeric-not-equal true}]);
  r:rule <#lemma459>.

<#lemma239> a r:Inference; r:gives {:numeric-less-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(3 5.0) pred:numeric-less-than-or-equal true}]);
  r:rule <#lemma460>.

<#lemma240> a r:Inference; r:gives {:numeric-greater-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(1.0 1) pred:numeric-greater-than-or-equal true}]);
  r:rule <#lemma461>.

<#lemma241> a r:Inference; r:gives {:not-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(false) func:not true}]);
  r:rule <#lemma462>.

<#lemma242> a r:Inference; r:gives {:not-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true) func:not false}]);
  r:rule <#lemma463>.

<#lemma243> a r:Inference; r:gives {:boolean-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(false false) pred:boolean-equal true}]);
  r:rule <#lemma464>.

<#lemma244> a r:Inference; r:gives {:boolean-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(false true) pred:boolean-less-than true}]);
  r:rule <#lemma465>.

<#lemma245> a r:Inference; r:gives {:boolean-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(true false) pred:boolean-greater-than true}]);
  r:rule <#lemma466>.

<#lemma246> a r:Inference; r:gives {:compare-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("abc" "abc") func:compare 0}]);
  r:rule <#lemma467>.

<#lemma247> a r:Inference; r:gives {:compare-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Straßen" "Straße") func:compare 1}]);
  r:rule <#lemma468>.

<#lemma248> a r:Inference; r:gives {:concat-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"}]);
  r:rule <#lemma469>.

<#lemma249> a r:Inference; r:gives {:string-join-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."}]);
  r:rule <#lemma470>.

<#lemma250> a r:Inference; r:gives {:string-join-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"}]);
  r:rule <#lemma471>.

<#lemma251> a r:Inference; r:gives {:string-join-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {(() "separator") func:string-join ""}]);
  r:rule <#lemma472>.

<#lemma252> a r:Inference; r:gives {:substring-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("motor car" 6) func:substring " car"}]);
  r:rule <#lemma473>.

<#lemma253> a r:Inference; r:gives {:substring-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("metadata" 4 3) func:substring "ada"}]);
  r:rule <#lemma474>.

<#lemma254> a r:Inference; r:gives {:substring-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("12345" 1.5 2.6) func:substring "234"}]);
  r:rule <#lemma475>.

<#lemma255> a r:Inference; r:gives {:substring-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("12345" 0 3) func:substring "12"}]);
  r:rule <#lemma476>.

<#lemma256> a r:Inference; r:gives {:substring-5 :result true}; r:evidence (
  [ a r:Fact; r:gives {("12345" 5 -3) func:substring ""}]);
  r:rule <#lemma477>.

<#lemma257> a r:Inference; r:gives {:substring-6 :result true}; r:evidence (
  [ a r:Fact; r:gives {("12345" -3 5) func:substring "1"}]);
  r:rule <#lemma478>.

<#lemma258> a r:Inference; r:gives {:string-length-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Harp not on that string, madam; that is past.") func:string-length 45}]);
  r:rule <#lemma479>.

<#lemma259> a r:Inference; r:gives {:string-length-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {(""@en) func:string-length 0}]);
  r:rule <#lemma480>.

<#lemma260> a r:Inference; r:gives {:upper-case-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("abCd0") func:upper-case "ABCD0"}]);
  r:rule <#lemma481>.

<#lemma261> a r:Inference; r:gives {:lower-case-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("ABc!D") func:lower-case "abc!d"}]);
  r:rule <#lemma482>.

<#lemma262> a r:Inference; r:gives {:encode-for-uri-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"}]);
  r:rule <#lemma483>.

<#lemma263> a r:Inference; r:gives {:encode-for-uri-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"}]);
  r:rule <#lemma484>.

<#lemma264> a r:Inference; r:gives {:encode-for-uri-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("100% organic") func:encode-for-uri "100%25%20organic"}]);
  r:rule <#lemma485>.

<#lemma265> a r:Inference; r:gives {:substring-before-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "attoo") func:substring-before "t"}]);
  r:rule <#lemma486>.

<#lemma266> a r:Inference; r:gives {:substring-before-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "tatto") func:substring-before ""}]);
  r:rule <#lemma487>.

<#lemma267> a r:Inference; r:gives {:substring-after-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "tat") func:substring-after "too"}]);
  r:rule <#lemma488>.

<#lemma268> a r:Inference; r:gives {:substring-after-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "tattoo") func:substring-after ""}]);
  r:rule <#lemma489>.

<#lemma269> a r:Inference; r:gives {:contains-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "t") pred:contains true}]);
  r:rule <#lemma490>.

<#lemma270> a r:Inference; r:gives {:starts-with-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "tat") pred:starts-with true}]);
  r:rule <#lemma491>.

<#lemma271> a r:Inference; r:gives {:ends-with-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("tattoo" "tattoo") pred:ends-with true}]);
  r:rule <#lemma492>.

<#lemma272> a r:Inference; r:gives {:matches-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("abracadabra" "bra") pred:matches true}]);
  r:rule <#lemma493>.

<#lemma273> a r:Inference; r:gives {:matches-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("abracadabra" "^a.*a$") pred:matches true}]);
  r:rule <#lemma494>.

<#lemma274> a r:Inference; r:gives {:year-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999}]);
  r:rule <#lemma495>.

<#lemma275> a r:Inference; r:gives {:month-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5}]);
  r:rule <#lemma496>.

<#lemma276> a r:Inference; r:gives {:day-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31}]);
  r:rule <#lemma497>.

<#lemma277> a r:Inference; r:gives {:hours-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13}]);
  r:rule <#lemma498>.

<#lemma278> a r:Inference; r:gives {:minutes-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20}]);
  r:rule <#lemma499>.

<#lemma279> a r:Inference; r:gives {:seconds-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0}]);
  r:rule <#lemma500>.

<#lemma280> a r:Inference; r:gives {:year-from-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999}]);
  r:rule <#lemma501>.

<#lemma281> a r:Inference; r:gives {:month-from-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31-05:00"^^xsd:date) func:month-from-date 5}]);
  r:rule <#lemma502>.

<#lemma282> a r:Inference; r:gives {:day-from-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31-05:00"^^xsd:date) func:day-from-date 31}]);
  r:rule <#lemma503>.

<#lemma283> a r:Inference; r:gives {:hours-from-time-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("13:20:00-05:00"^^xsd:time) func:hours-from-time 13}]);
  r:rule <#lemma504>.

<#lemma284> a r:Inference; r:gives {:minutes-from-time-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20}]);
  r:rule <#lemma505>.

<#lemma285> a r:Inference; r:gives {:seconds-from-time-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0}]);
  r:rule <#lemma506>.

<#lemma286> a r:Inference; r:gives {:years-from-duration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21}]);
  r:rule <#lemma507>.

<#lemma287> a r:Inference; r:gives {:years-from-duration-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1}]);
  r:rule <#lemma508>.

<#lemma288> a r:Inference; r:gives {:years-from-duration-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0}]);
  r:rule <#lemma509>.

<#lemma289> a r:Inference; r:gives {:months-from-duration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3}]);
  r:rule <#lemma510>.

<#lemma290> a r:Inference; r:gives {:months-from-duration-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6}]);
  r:rule <#lemma511>.

<#lemma291> a r:Inference; r:gives {:months-from-duration-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0}]);
  r:rule <#lemma512>.

<#lemma292> a r:Inference; r:gives {:days-from-duration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3}]);
  r:rule <#lemma513>.

<#lemma293> a r:Inference; r:gives {:days-from-duration-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5}]);
  r:rule <#lemma514>.

<#lemma294> a r:Inference; r:gives {:days-from-duration-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0}]);
  r:rule <#lemma515>.

<#lemma295> a r:Inference; r:gives {:hours-from-duration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10}]);
  r:rule <#lemma516>.

<#lemma296> a r:Inference; r:gives {:hours-from-duration-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12}]);
  r:rule <#lemma517>.

<#lemma297> a r:Inference; r:gives {:hours-from-duration-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3}]);
  r:rule <#lemma518>.

<#lemma298> a r:Inference; r:gives {:hours-from-duration-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10}]);
  r:rule <#lemma519>.

<#lemma299> a r:Inference; r:gives {:minutes-from-duration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0}]);
  r:rule <#lemma520>.

<#lemma300> a r:Inference; r:gives {:minutes-from-duration-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30}]);
  r:rule <#lemma521>.

<#lemma301> a r:Inference; r:gives {:seconds-from-duration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5}]);
  r:rule <#lemma522>.

<#lemma302> a r:Inference; r:gives {:seconds-from-duration-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0}]);
  r:rule <#lemma523>.

<#lemma303> a r:Inference; r:gives {:timezone-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration}]);
  r:rule <#lemma524>.

<#lemma304> a r:Inference; r:gives {:timezone-from-dateTime-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma525>.

<#lemma305> a r:Inference; r:gives {:timezone-from-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration}]);
  r:rule <#lemma526>.

<#lemma306> a r:Inference; r:gives {:timezone-from-date-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma527>.

<#lemma307> a r:Inference; r:gives {:timezone-from-time-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration}]);
  r:rule <#lemma528>.

<#lemma308> a r:Inference; r:gives {:timezone-from-time-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma529>.

<#lemma309> a r:Inference; r:gives {:subtract-dateTimes-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration}]);
  r:rule <#lemma530>.

<#lemma310> a r:Inference; r:gives {:subtract-dates-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration}]);
  r:rule <#lemma531>.

<#lemma311> a r:Inference; r:gives {:subtract-times-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration}]);
  r:rule <#lemma532>.

<#lemma312> a r:Inference; r:gives {:subtract-times-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma533>.

<#lemma313> a r:Inference; r:gives {:subtract-times-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration}]);
  r:rule <#lemma534>.

<#lemma314> a r:Inference; r:gives {:subtract-times-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma535>.

<#lemma315> a r:Inference; r:gives {:add-yearMonthDurations-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma536>.

<#lemma316> a r:Inference; r:gives {:subtract-yearMonthDurations-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma537>.

<#lemma317> a r:Inference; r:gives {:multiply-yearMonthDuration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma538>.

<#lemma318> a r:Inference; r:gives {:divide-yearMonthDuration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma539>.

<#lemma319> a r:Inference; r:gives {:divide-yearMonthDuration-by-yearMonthDuration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5}]);
  r:rule <#lemma540>.

<#lemma320> a r:Inference; r:gives {:add-dayTimeDurations-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration}]);
  r:rule <#lemma541>.

<#lemma321> a r:Inference; r:gives {:subtract-dayTimeDurations-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration}]);
  r:rule <#lemma542>.

<#lemma322> a r:Inference; r:gives {:multiply-dayTimeDuration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration}]);
  r:rule <#lemma543>.

<#lemma323> a r:Inference; r:gives {:divide-dayTimeDuration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma544>.

<#lemma324> a r:Inference; r:gives {:divide-dayTimeDuration-by-dayTimeDuration-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1}]);
  r:rule <#lemma545>.

<#lemma325> a r:Inference; r:gives {:add-yearMonthDuration-to-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime}]);
  r:rule <#lemma546>.

<#lemma326> a r:Inference; r:gives {:add-yearMonthDuration-to-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date}]);
  r:rule <#lemma547>.

<#lemma327> a r:Inference; r:gives {:add-dayTimeDuration-to-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime}]);
  r:rule <#lemma548>.

<#lemma328> a r:Inference; r:gives {:add-dayTimeDuration-to-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date}]);
  r:rule <#lemma549>.

<#lemma329> a r:Inference; r:gives {:add-dayTimeDuration-to-time-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time}]);
  r:rule <#lemma550>.

<#lemma330> a r:Inference; r:gives {:subtract-yearMonthDuration-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime}]);
  r:rule <#lemma551>.

<#lemma331> a r:Inference; r:gives {:subtract-yearMonthDuration-from-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date}]);
  r:rule <#lemma552>.

<#lemma332> a r:Inference; r:gives {:subtract-dayTimeDuration-from-dateTime-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime}]);
  r:rule <#lemma553>.

<#lemma333> a r:Inference; r:gives {:subtract-dayTimeDuration-from-date-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date}]);
  r:rule <#lemma554>.

<#lemma334> a r:Inference; r:gives {:subtract-dayTimeDuration-from-time-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time}]);
  r:rule <#lemma555>.

<#lemma335> a r:Inference; r:gives {:subtract-dayTimeDuration-from-time-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time}]);
  r:rule <#lemma556>.

<#lemma336> a r:Inference; r:gives {:dateTime-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true}]);
  r:rule <#lemma557>.

<#lemma337> a r:Inference; r:gives {:dateTime-equal-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true}]);
  r:rule <#lemma558>.

<#lemma338> a r:Inference; r:gives {:dateTime-equal-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false}]);
  r:rule <#lemma559>.

<#lemma339> a r:Inference; r:gives {:dateTime-equal-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true}]);
  r:rule <#lemma560>.

<#lemma340> a r:Inference; r:gives {:dateTime-equal-5 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true}]);
  r:rule <#lemma561>.

<#lemma341> a r:Inference; r:gives {:dateTime-equal-6 :result true}; r:evidence (
  [ a r:Fact; r:gives {("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true}]);
  r:rule <#lemma562>.

<#lemma342> a r:Inference; r:gives {:dateTime-equal-7 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false}]);
  r:rule <#lemma563>.

<#lemma343> a r:Inference; r:gives {:dateTime-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true}]);
  r:rule <#lemma564>.

<#lemma344> a r:Inference; r:gives {:dateTime-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true}]);
  r:rule <#lemma565>.

<#lemma345> a r:Inference; r:gives {:date-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false}]);
  r:rule <#lemma566>.

<#lemma346> a r:Inference; r:gives {:date-equal-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true}]);
  r:rule <#lemma567>.

<#lemma347> a r:Inference; r:gives {:date-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true}]);
  r:rule <#lemma568>.

<#lemma348> a r:Inference; r:gives {:date-less-than-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false}]);
  r:rule <#lemma569>.

<#lemma349> a r:Inference; r:gives {:date-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true}]);
  r:rule <#lemma570>.

<#lemma350> a r:Inference; r:gives {:date-greater-than-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false}]);
  r:rule <#lemma571>.

<#lemma351> a r:Inference; r:gives {:time-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false}]);
  r:rule <#lemma572>.

<#lemma352> a r:Inference; r:gives {:time-equal-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true}]);
  r:rule <#lemma573>.

<#lemma353> a r:Inference; r:gives {:time-equal-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true}]);
  r:rule <#lemma574>.

<#lemma354> a r:Inference; r:gives {:time-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false}]);
  r:rule <#lemma575>.

<#lemma355> a r:Inference; r:gives {:time-less-than-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true}]);
  r:rule <#lemma576>.

<#lemma356> a r:Inference; r:gives {:time-less-than-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false}]);
  r:rule <#lemma577>.

<#lemma357> a r:Inference; r:gives {:time-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false}]);
  r:rule <#lemma578>.

<#lemma358> a r:Inference; r:gives {:duration-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true}]);
  r:rule <#lemma579>.

<#lemma359> a r:Inference; r:gives {:duration-equal-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true}]);
  r:rule <#lemma580>.

<#lemma360> a r:Inference; r:gives {:duration-equal-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false}]);
  r:rule <#lemma581>.

<#lemma361> a r:Inference; r:gives {:duration-equal-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true}]);
  r:rule <#lemma582>.

<#lemma362> a r:Inference; r:gives {:dayTimeDuration-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true}]);
  r:rule <#lemma583>.

<#lemma363> a r:Inference; r:gives {:dayTimeDuration-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false}]);
  r:rule <#lemma584>.

<#lemma364> a r:Inference; r:gives {:yearMonthDuration-less-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true}]);
  r:rule <#lemma585>.

<#lemma365> a r:Inference; r:gives {:yearMonthDuration-greater-than-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false}]);
  r:rule <#lemma586>.

<#lemma366> a r:Inference; r:gives {:dateTime-not-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false}]);
  r:rule <#lemma587>.

<#lemma367> a r:Inference; r:gives {:dateTime-less-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true}]);
  r:rule <#lemma588>.

<#lemma368> a r:Inference; r:gives {:dateTime-greater-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true}]);
  r:rule <#lemma589>.

<#lemma369> a r:Inference; r:gives {:date-not-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true}]);
  r:rule <#lemma590>.

<#lemma370> a r:Inference; r:gives {:date-less-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false}]);
  r:rule <#lemma591>.

<#lemma371> a r:Inference; r:gives {:date-greater-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true}]);
  r:rule <#lemma592>.

<#lemma372> a r:Inference; r:gives {:time-not-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true}]);
  r:rule <#lemma593>.

<#lemma373> a r:Inference; r:gives {:time-less-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true}]);
  r:rule <#lemma594>.

<#lemma374> a r:Inference; r:gives {:time-greater-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false}]);
  r:rule <#lemma595>.

<#lemma375> a r:Inference; r:gives {:duration-not-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false}]);
  r:rule <#lemma596>.

<#lemma376> a r:Inference; r:gives {:dayTimeDuration-less-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true}]);
  r:rule <#lemma597>.

<#lemma377> a r:Inference; r:gives {:dayTimeDuration-greater-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false}]);
  r:rule <#lemma598>.

<#lemma378> a r:Inference; r:gives {:yearMonthDuration-less-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true}]);
  r:rule <#lemma599>.

<#lemma379> a r:Inference; r:gives {:yearMonthDuration-greater-than-or-equal-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false}]);
  r:rule <#lemma600>.

<#lemma380> a r:Inference; r:gives {:PlainLiteral-from-string-lang-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"}]);
  r:rule <#lemma601>.

<#lemma381> a r:Inference; r:gives {:PlainLiteral-from-string-lang-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en}]);
  r:rule <#lemma602>.

<#lemma382> a r:Inference; r:gives {:string-from-PlainLiteral-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy") func:string-from-PlainLiteral "Family Guy"}]);
  r:rule <#lemma603>.

<#lemma383> a r:Inference; r:gives {:string-from-PlainLiteral-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"}]);
  r:rule <#lemma604>.

<#lemma384> a r:Inference; r:gives {:lang-from-PlainLiteral-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy") func:lang-from-PlainLiteral ""}]);
  r:rule <#lemma605>.

<#lemma385> a r:Inference; r:gives {:lang-from-PlainLiteral-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy"@en) func:lang-from-PlainLiteral "en"}]);
  r:rule <#lemma606>.

<#lemma386> a r:Inference; r:gives {:PlainLiteral-compare-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy" "Mother") func:PlainLiteral-compare -1}]);
  r:rule <#lemma607>.

<#lemma387> a r:Inference; r:gives {:PlainLiteral-compare-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1}]);
  r:rule <#lemma608>.

<#lemma388> a r:Inference; r:gives {:PlainLiteral-length-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy") func:PlainLiteral-length 10}]);
  r:rule <#lemma609>.

<#lemma389> a r:Inference; r:gives {:PlainLiteral-length-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy"@en) func:PlainLiteral-length 10}]);
  r:rule <#lemma610>.

<#lemma390> a r:Inference; r:gives {:matches-language-range-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy"@en "en") pred:matches-language-range true}]);
  r:rule <#lemma611>.

<#lemma391> a r:Inference; r:gives {:matches-language-range-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {("Family Guy"@en-us "en-*") pred:matches-language-range true}]);
  r:rule <#lemma612>.

<#lemma392> a r:Inference; r:gives {:is-list-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c :d)) pred:is-list true}]);
  r:rule <#lemma613>.

<#lemma393> a r:Inference; r:gives {:list-contains-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c :d) :b) pred:list-contains true}]);
  r:rule <#lemma614>.

<#lemma394> a r:Inference; r:gives {:make-list-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {(:a :b :c :d) func:make-list (:a :b :c :d)}]);
  r:rule <#lemma615>.

<#lemma395> a r:Inference; r:gives {:count-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c :d)) func:count 4}]);
  r:rule <#lemma616>.

<#lemma396> a r:Inference; r:gives {:get-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((:a :b :c :d) 3) func:get :d}]);
  r:rule <#lemma617>.

<#lemma397> a r:Inference; r:gives {:sublist-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 0) func:sublist ()}]);
  r:rule <#lemma618>.

<#lemma398> a r:Inference; r:gives {:sublist-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 1) func:sublist (0)}]);
  r:rule <#lemma619>.

<#lemma399> a r:Inference; r:gives {:sublist-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)}]);
  r:rule <#lemma620>.

<#lemma400> a r:Inference; r:gives {:sublist-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)}]);
  r:rule <#lemma621>.

<#lemma401> a r:Inference; r:gives {:sublist-5 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)}]);
  r:rule <#lemma622>.

<#lemma402> a r:Inference; r:gives {:sublist-6 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 -2) func:sublist (0 1 2)}]);
  r:rule <#lemma623>.

<#lemma403> a r:Inference; r:gives {:sublist-7 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 2 4) func:sublist (2 3)}]);
  r:rule <#lemma624>.

<#lemma404> a r:Inference; r:gives {:sublist-9 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 2 -2) func:sublist (2)}]);
  r:rule <#lemma625>.

<#lemma405> a r:Inference; r:gives {:sublist-10 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 3) func:sublist (3 4)}]);
  r:rule <#lemma626>.

<#lemma406> a r:Inference; r:gives {:sublist-11 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) -2) func:sublist (3 4)}]);
  r:rule <#lemma627>.

<#lemma407> a r:Inference; r:gives {:append-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2) 3) func:append (0 1 2 3)}]);
  r:rule <#lemma628>.

<#lemma408> a r:Inference; r:gives {:append-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2) 3 4) func:append (0 1 2 3 4)}]);
  r:rule <#lemma629>.

<#lemma409> a r:Inference; r:gives {:append-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))}]);
  r:rule <#lemma630>.

<#lemma410> a r:Inference; r:gives {:append-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {(() 1) func:append (1)}]);
  r:rule <#lemma631>.

<#lemma411> a r:Inference; r:gives {:concatenate-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)}]);
  r:rule <#lemma632>.

<#lemma412> a r:Inference; r:gives {:concatenate-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((1 1) (1) (1)) func:concatenate (1 1 1 1)}]);
  r:rule <#lemma633>.

<#lemma413> a r:Inference; r:gives {:concatenate-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {(()) func:concatenate ()}]);
  r:rule <#lemma634>.

<#lemma414> a r:Inference; r:gives {:concatenate-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {(() (1) () (2) ((3))) func:concatenate (1 2 (3))}]);
  r:rule <#lemma635>.

<#lemma415> a r:Inference; r:gives {:insert-before-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)}]);
  r:rule <#lemma636>.

<#lemma416> a r:Inference; r:gives {:insert-before-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)}]);
  r:rule <#lemma637>.

<#lemma417> a r:Inference; r:gives {:insert-before-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)}]);
  r:rule <#lemma638>.

<#lemma418> a r:Inference; r:gives {:insert-before-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)}]);
  r:rule <#lemma639>.

<#lemma419> a r:Inference; r:gives {:remove-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 0) func:remove (1 2 3 4)}]);
  r:rule <#lemma640>.

<#lemma420> a r:Inference; r:gives {:remove-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 1) func:remove (0 2 3 4)}]);
  r:rule <#lemma641>.

<#lemma421> a r:Inference; r:gives {:remove-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 4) func:remove (0 1 2 3)}]);
  r:rule <#lemma642>.

<#lemma422> a r:Inference; r:gives {:remove-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) -1) func:remove (0 1 2 3)}]);
  r:rule <#lemma643>.

<#lemma423> a r:Inference; r:gives {:remove-5 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) -5) func:remove (1 2 3 4)}]);
  r:rule <#lemma644>.

<#lemma424> a r:Inference; r:gives {:reverse-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4)) func:reverse (4 3 2 1 0)}]);
  r:rule <#lemma645>.

<#lemma425> a r:Inference; r:gives {:reverse-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((1)) func:reverse (1)}]);
  r:rule <#lemma646>.

<#lemma426> a r:Inference; r:gives {:reverse-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {(()) func:reverse ()}]);
  r:rule <#lemma647>.

<#lemma427> a r:Inference; r:gives {:index-of-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) 2) func:index-of (2)}]);
  r:rule <#lemma648>.

<#lemma428> a r:Inference; r:gives {:index-of-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)}]);
  r:rule <#lemma649>.

<#lemma429> a r:Inference; r:gives {:index-of-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)}]);
  r:rule <#lemma650>.

<#lemma430> a r:Inference; r:gives {:index-of-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {((2 2 3 4 5 2 2) 1) func:index-of ()}]);
  r:rule <#lemma651>.

<#lemma431> a r:Inference; r:gives {:union-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)}]);
  r:rule <#lemma652>.

<#lemma432> a r:Inference; r:gives {:union-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3) (4)) func:union (0 1 2 3 4)}]);
  r:rule <#lemma653>.

<#lemma433> a r:Inference; r:gives {:union-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3) (3)) func:union (0 1 2 3)}]);
  r:rule <#lemma654>.

<#lemma434> a r:Inference; r:gives {:union-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 2 1 0)) func:union (0 2 1)}]);
  r:rule <#lemma655>.

<#lemma435> a r:Inference; r:gives {:distinct-values-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)}]);
  r:rule <#lemma656>.

<#lemma436> a r:Inference; r:gives {:distinct-values-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)}]);
  r:rule <#lemma657>.

<#lemma437> a r:Inference; r:gives {:distinct-values-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((3 3 3)) func:distinct-values (3)}]);
  r:rule <#lemma658>.

<#lemma438> a r:Inference; r:gives {:intersect-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) (1 3)) func:intersect (1 3)}]);
  r:rule <#lemma659>.

<#lemma439> a r:Inference; r:gives {:intersect-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) (3 1)) func:intersect (1 3)}]);
  r:rule <#lemma660>.

<#lemma440> a r:Inference; r:gives {:intersect-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) ()) func:intersect ()}]);
  r:rule <#lemma661>.

<#lemma441> a r:Inference; r:gives {:intersect-4 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)}]);
  r:rule <#lemma662>.

<#lemma442> a r:Inference; r:gives {:except-1 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) (1 3)) func:except (0 2 4)}]);
  r:rule <#lemma663>.

<#lemma443> a r:Inference; r:gives {:except-2 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) ()) func:except (0 1 2 3 4)}]);
  r:rule <#lemma664>.

<#lemma444> a r:Inference; r:gives {:except-3 :result true}; r:evidence (
  [ a r:Fact; r:gives {((0 1 2 3 4) (0 1 2 3 4)) func:except ()}]);
  r:rule <#lemma665>.

<#lemma445> a r:Extraction; r:gives {{("chat"@fr "chien"@fr) pred:literal-not-identical true} => {:literal-not-identical-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma446> a r:Extraction; r:gives {{(:case "http://eulersharp.sourceforge.net/2007/07test#case") pred:iri-string true} => {:iri-string-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma447> a r:Extraction; r:gives {{(1 1) func:numeric-add 2} => {:numeric-add-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma448> a r:Extraction; r:gives {{(5 2) func:numeric-subtract 3} => {:numeric-subtract-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma449> a r:Extraction; r:gives {{(5 2) func:numeric-multiply 10} => {:numeric-multiply-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma450> a r:Extraction; r:gives {{(5 2) func:numeric-divide 2.5} => {:numeric-divide-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma451> a r:Extraction; r:gives {{(5 2) func:numeric-integer-divide 2} => {:numeric-integer-divide-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma452> a r:Extraction; r:gives {{(10 3) func:numeric-mod 1} => {:numeric-mod-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma453> a r:Extraction; r:gives {{(6 -2) func:numeric-mod 0} => {:numeric-mod-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma454> a r:Extraction; r:gives {{(4.5 1.2) func:numeric-mod ?x0} => {:numeric-mod-3 :result ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma455> a r:Extraction; r:gives {{(123.0 6.0) func:numeric-mod 3.0} => {:numeric-mod-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma456> a r:Extraction; r:gives {{(1 1.0) pred:numeric-equal true} => {:numeric-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma457> a r:Extraction; r:gives {{(2.0 3) pred:numeric-less-than true} => {:numeric-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma458> a r:Extraction; r:gives {{(1.0 0) pred:numeric-greater-than true} => {:numeric-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma459> a r:Extraction; r:gives {{(1 1.01) pred:numeric-not-equal true} => {:numeric-not-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma460> a r:Extraction; r:gives {{(3 5.0) pred:numeric-less-than-or-equal true} => {:numeric-less-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma461> a r:Extraction; r:gives {{(1.0 1) pred:numeric-greater-than-or-equal true} => {:numeric-greater-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma462> a r:Extraction; r:gives {{(false) func:not true} => {:not-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma463> a r:Extraction; r:gives {{(true) func:not false} => {:not-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma464> a r:Extraction; r:gives {{(false false) pred:boolean-equal true} => {:boolean-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma465> a r:Extraction; r:gives {{(false true) pred:boolean-less-than true} => {:boolean-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma466> a r:Extraction; r:gives {{(true false) pred:boolean-greater-than true} => {:boolean-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma467> a r:Extraction; r:gives {{("abc" "abc") func:compare 0} => {:compare-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma468> a r:Extraction; r:gives {{("Straßen" "Straße") func:compare 1} => {:compare-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma469> a r:Extraction; r:gives {{("Ingratitude, " "thou " "marble-hearted" " fiend!") func:concat "Ingratitude, thou marble-hearted fiend!"} => {:concat-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma470> a r:Extraction; r:gives {{(("Now" "is" "the" "time" "...") " ") func:string-join "Now is the time ..."} => {:string-join-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma471> a r:Extraction; r:gives {{(("Blow, " "blow, " "thou " "winter " "wind!") "") func:string-join "Blow, blow, thou winter wind!"} => {:string-join-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma472> a r:Extraction; r:gives {{(() "separator") func:string-join ""} => {:string-join-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma473> a r:Extraction; r:gives {{("motor car" 6) func:substring " car"} => {:substring-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma474> a r:Extraction; r:gives {{("metadata" 4 3) func:substring "ada"} => {:substring-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma475> a r:Extraction; r:gives {{("12345" 1.5 2.6) func:substring "234"} => {:substring-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma476> a r:Extraction; r:gives {{("12345" 0 3) func:substring "12"} => {:substring-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma477> a r:Extraction; r:gives {{("12345" 5 -3) func:substring ""} => {:substring-5 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma478> a r:Extraction; r:gives {{("12345" -3 5) func:substring "1"} => {:substring-6 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma479> a r:Extraction; r:gives {{("Harp not on that string, madam; that is past.") func:string-length 45} => {:string-length-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma480> a r:Extraction; r:gives {{(""@en) func:string-length 0} => {:string-length-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma481> a r:Extraction; r:gives {{("abCd0") func:upper-case "ABCD0"} => {:upper-case-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma482> a r:Extraction; r:gives {{("ABc!D") func:lower-case "abc!d"} => {:lower-case-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma483> a r:Extraction; r:gives {{("00/Weather/CA/Los%20Angeles#ocean") func:encode-for-uri "00%2fWeather%2fCA%2fLos%2520Angeles%23ocean"} => {:encode-for-uri-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma484> a r:Extraction; r:gives {{("~bébé") func:encode-for-uri "~b%c3%a9b%c3%a9"} => {:encode-for-uri-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma485> a r:Extraction; r:gives {{("100% organic") func:encode-for-uri "100%25%20organic"} => {:encode-for-uri-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma486> a r:Extraction; r:gives {{("tattoo" "attoo") func:substring-before "t"} => {:substring-before-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma487> a r:Extraction; r:gives {{("tattoo" "tatto") func:substring-before ""} => {:substring-before-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma488> a r:Extraction; r:gives {{("tattoo" "tat") func:substring-after "too"} => {:substring-after-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma489> a r:Extraction; r:gives {{("tattoo" "tattoo") func:substring-after ""} => {:substring-after-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma490> a r:Extraction; r:gives {{("tattoo" "t") pred:contains true} => {:contains-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma491> a r:Extraction; r:gives {{("tattoo" "tat") pred:starts-with true} => {:starts-with-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma492> a r:Extraction; r:gives {{("tattoo" "tattoo") pred:ends-with true} => {:ends-with-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma493> a r:Extraction; r:gives {{("abracadabra" "bra") pred:matches true} => {:matches-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma494> a r:Extraction; r:gives {{("abracadabra" "^a.*a$") pred:matches true} => {:matches-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma495> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:year-from-dateTime 1999} => {:year-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma496> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:month-from-dateTime 5} => {:month-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma497> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:day-from-dateTime 31} => {:day-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma498> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:hours-from-dateTime 13} => {:hours-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma499> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:minutes-from-dateTime 20} => {:minutes-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma500> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:seconds-from-dateTime 0} => {:seconds-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma501> a r:Extraction; r:gives {{("1999-05-31-05:00"^^xsd:date) func:year-from-date 1999} => {:year-from-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma502> a r:Extraction; r:gives {{("1999-05-31-05:00"^^xsd:date) func:month-from-date 5} => {:month-from-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma503> a r:Extraction; r:gives {{("1999-05-31-05:00"^^xsd:date) func:day-from-date 31} => {:day-from-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma504> a r:Extraction; r:gives {{("13:20:00-05:00"^^xsd:time) func:hours-from-time 13} => {:hours-from-time-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma505> a r:Extraction; r:gives {{("13:20:00-05:00"^^xsd:time) func:minutes-from-time 20} => {:minutes-from-time-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma506> a r:Extraction; r:gives {{("13:20:00-05:00"^^xsd:time) func:seconds-from-time 0} => {:seconds-from-time-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma507> a r:Extraction; r:gives {{("P20Y15M"^^xsd:yearMonthDuration) func:years-from-duration 21} => {:years-from-duration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma508> a r:Extraction; r:gives {{("-P15M"^^xsd:yearMonthDuration) func:years-from-duration -1} => {:years-from-duration-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma509> a r:Extraction; r:gives {{("-P2DT15H"^^xsd:dayTimeDuration) func:years-from-duration 0} => {:years-from-duration-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma510> a r:Extraction; r:gives {{("P20Y15M"^^xsd:yearMonthDuration) func:months-from-duration 3} => {:months-from-duration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma511> a r:Extraction; r:gives {{("-P20Y18M"^^xsd:yearMonthDuration) func:months-from-duration -6} => {:months-from-duration-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma512> a r:Extraction; r:gives {{("-P2DT15H0M0S"^^xsd:dayTimeDuration) func:months-from-duration 0} => {:months-from-duration-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma513> a r:Extraction; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:days-from-duration 3} => {:days-from-duration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma514> a r:Extraction; r:gives {{("P3DT55H"^^xsd:dayTimeDuration) func:days-from-duration 5} => {:days-from-duration-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma515> a r:Extraction; r:gives {{("P3Y5M"^^xsd:yearMonthDuration) func:days-from-duration 0} => {:days-from-duration-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma516> a r:Extraction; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration 10} => {:hours-from-duration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma517> a r:Extraction; r:gives {{("P3DT12H32M12S"^^xsd:dayTimeDuration) func:hours-from-duration 12} => {:hours-from-duration-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma518> a r:Extraction; r:gives {{("PT123H"^^xsd:dayTimeDuration) func:hours-from-duration 3} => {:hours-from-duration-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma519> a r:Extraction; r:gives {{("-P3DT10H"^^xsd:dayTimeDuration) func:hours-from-duration -10} => {:hours-from-duration-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma520> a r:Extraction; r:gives {{("P3DT10H"^^xsd:dayTimeDuration) func:minutes-from-duration 0} => {:minutes-from-duration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma521> a r:Extraction; r:gives {{("-P5DT12H30M"^^xsd:dayTimeDuration) func:minutes-from-duration -30} => {:minutes-from-duration-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma522> a r:Extraction; r:gives {{("P3DT10H12.5S"^^xsd:dayTimeDuration) func:seconds-from-duration 12.5} => {:seconds-from-duration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma523> a r:Extraction; r:gives {{("-PT256S"^^xsd:dayTimeDuration) func:seconds-from-duration -16.0} => {:seconds-from-duration-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma524> a r:Extraction; r:gives {{("1999-05-31T13:20:00-05:00"^^xsd:dateTime) func:timezone-from-dateTime "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma525> a r:Extraction; r:gives {{("2000-06-12T13:20:00Z"^^xsd:dateTime) func:timezone-from-dateTime "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-dateTime-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma526> a r:Extraction; r:gives {{("1999-05-31-05:00"^^xsd:date) func:timezone-from-date "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma527> a r:Extraction; r:gives {{("2000-06-12Z"^^xsd:date) func:timezone-from-date "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-date-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma528> a r:Extraction; r:gives {{("13:20:00-05:00"^^xsd:time) func:timezone-from-time "-PT5H"^^xsd:dayTimeDuration} => {:timezone-from-time-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma529> a r:Extraction; r:gives {{("13:20:00Z"^^xsd:time) func:timezone-from-time "PT0S"^^xsd:dayTimeDuration} => {:timezone-from-time-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma530> a r:Extraction; r:gives {{("2000-10-30T06:12:00-05:00"^^xsd:dateTime "1999-11-28T09:00:00Z"^^xsd:dateTime) func:subtract-dateTimes "P337DT2H12M"^^xsd:dayTimeDuration} => {:subtract-dateTimes-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma531> a r:Extraction; r:gives {{("2000-10-30Z"^^xsd:date "1999-11-28Z"^^xsd:date) func:subtract-dates "P337D"^^xsd:dayTimeDuration} => {:subtract-dates-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma532> a r:Extraction; r:gives {{("11:12:00Z"^^xsd:time "04:00:00-05:00"^^xsd:time) func:subtract-times "PT2H12M"^^xsd:dayTimeDuration} => {:subtract-times-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma533> a r:Extraction; r:gives {{("11:00:00-05:00"^^xsd:time "21:30:00+05:30"^^xsd:time) func:subtract-times "PT0S"^^xsd:dayTimeDuration} => {:subtract-times-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma534> a r:Extraction; r:gives {{("17:00:00-06:00"^^xsd:time "08:00:00+09:00"^^xsd:time) func:subtract-times "P1D"^^xsd:dayTimeDuration} => {:subtract-times-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma535> a r:Extraction; r:gives {{("24:00:00"^^xsd:time "23:59:59"^^xsd:time) func:subtract-times "-PT23H59M59S"^^xsd:dayTimeDuration} => {:subtract-times-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma536> a r:Extraction; r:gives {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:add-yearMonthDurations "P6Y2M"^^xsd:yearMonthDuration} => {:add-yearMonthDurations-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma537> a r:Extraction; r:gives {{("P2Y11M"^^xsd:yearMonthDuration "P3Y3M"^^xsd:yearMonthDuration) func:subtract-yearMonthDurations "-P4M"^^xsd:yearMonthDuration} => {:subtract-yearMonthDurations-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma538> a r:Extraction; r:gives {{("P2Y11M"^^xsd:yearMonthDuration 2.3) func:multiply-yearMonthDuration "P6Y9M"^^xsd:yearMonthDuration} => {:multiply-yearMonthDuration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma539> a r:Extraction; r:gives {{("P2Y11M"^^xsd:yearMonthDuration 1.5) func:divide-yearMonthDuration "P1Y11M"^^xsd:yearMonthDuration} => {:divide-yearMonthDuration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma540> a r:Extraction; r:gives {{("P3Y4M"^^xsd:yearMonthDuration "-P1Y4M"^^xsd:yearMonthDuration) func:divide-yearMonthDuration-by-yearMonthDuration -2.5} => {:divide-yearMonthDuration-by-yearMonthDuration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma541> a r:Extraction; r:gives {{("P2DT12H5M"^^xsd:dayTimeDuration "P5DT12H"^^xsd:dayTimeDuration) func:add-dayTimeDurations "P8DT5M"^^xsd:dayTimeDuration} => {:add-dayTimeDurations-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma542> a r:Extraction; r:gives {{("P2DT12H"^^xsd:dayTimeDuration "P1DT10H30M"^^xsd:dayTimeDuration) func:subtract-dayTimeDurations "P1DT1H30M"^^xsd:dayTimeDuration} => {:subtract-dayTimeDurations-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma543> a r:Extraction; r:gives {{("PT2H10M"^^xsd:dayTimeDuration 2.1) func:multiply-dayTimeDuration "PT4H33M"^^xsd:dayTimeDuration} => {:multiply-dayTimeDuration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma544> a r:Extraction; r:gives {{("P1DT2H30M10.5S"^^xsd:dayTimeDuration 1.5) func:divide-dayTimeDuration "PT17H40M7S"^^xsd:dayTimeDuration} => {:divide-dayTimeDuration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma545> a r:Extraction; r:gives {{("PT4H33M"^^xsd:dayTimeDuration "PT2H10M"^^xsd:dayTimeDuration) func:divide-dayTimeDuration-by-dayTimeDuration 2.1} => {:divide-dayTimeDuration-by-dayTimeDuration-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma546> a r:Extraction; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-dateTime "2001-12-30T11:12:00Z"^^xsd:dateTime} => {:add-yearMonthDuration-to-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma547> a r:Extraction; r:gives {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:add-yearMonthDuration-to-date "2001-12-30Z"^^xsd:date} => {:add-yearMonthDuration-to-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma548> a r:Extraction; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-dateTime "2000-11-02T12:27:00Z"^^xsd:dateTime} => {:add-dayTimeDuration-to-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma549> a r:Extraction; r:gives {{("2004-10-30Z"^^xsd:date "P2DT2H30M0S"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-date "2004-11-01Z"^^xsd:date} => {:add-dayTimeDuration-to-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma550> a r:Extraction; r:gives {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:add-dayTimeDuration-to-time "12:27:00Z"^^xsd:time} => {:add-dayTimeDuration-to-time-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma551> a r:Extraction; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-dateTime "1999-08-30T11:12:00Z"^^xsd:dateTime} => {:subtract-yearMonthDuration-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma552> a r:Extraction; r:gives {{("2000-10-30Z"^^xsd:date "P1Y2M"^^xsd:yearMonthDuration) func:subtract-yearMonthDuration-from-date "1999-08-30Z"^^xsd:date} => {:subtract-yearMonthDuration-from-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma553> a r:Extraction; r:gives {{("2000-10-30T11:12:00Z"^^xsd:dateTime "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-dateTime "2000-10-27T09:57:00Z"^^xsd:dateTime} => {:subtract-dayTimeDuration-from-dateTime-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma554> a r:Extraction; r:gives {{("2000-10-30Z"^^xsd:date "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-date "2000-10-26Z"^^xsd:date} => {:subtract-dayTimeDuration-from-date-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma555> a r:Extraction; r:gives {{("11:12:00Z"^^xsd:time "P3DT1H15M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "09:57:00Z"^^xsd:time} => {:subtract-dayTimeDuration-from-time-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma556> a r:Extraction; r:gives {{("08:20:00-05:00"^^xsd:time "P23DT10H10M"^^xsd:dayTimeDuration) func:subtract-dayTimeDuration-from-time "22:10:00-05:00"^^xsd:time} => {:subtract-dayTimeDuration-from-time-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma557> a r:Extraction; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma558> a r:Extraction; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T23:00:00+06:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma559> a r:Extraction; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T17:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma560> a r:Extraction; r:gives {{("2002-04-02T12:00:00-05:00"^^xsd:dateTime "2002-04-02T12:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma561> a r:Extraction; r:gives {{("2002-04-02T23:00:00-04:00"^^xsd:dateTime "2002-04-03T02:00:00-01:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-5 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma562> a r:Extraction; r:gives {{("1999-12-31T24:00:00-05:00"^^xsd:dateTime "2000-01-01T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal true} => {:dateTime-equal-6 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma563> a r:Extraction; r:gives {{("2005-04-04T24:00:00-05:00"^^xsd:dateTime "2005-04-04T00:00:00-05:00"^^xsd:dateTime) pred:dateTime-equal false} => {:dateTime-equal-7 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma564> a r:Extraction; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than true} => {:dateTime-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma565> a r:Extraction; r:gives {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than true} => {:dateTime-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma566> a r:Extraction; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-equal false} => {:date-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma567> a r:Extraction; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-equal true} => {:date-equal-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma568> a r:Extraction; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25-05:00"^^xsd:date) pred:date-less-than true} => {:date-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma569> a r:Extraction; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-less-than false} => {:date-less-than-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma570> a r:Extraction; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than true} => {:date-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma571> a r:Extraction; r:gives {{("2004-12-25-12:00"^^xsd:date "2004-12-26+12:00"^^xsd:date) pred:date-greater-than false} => {:date-greater-than-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma572> a r:Extraction; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-equal false} => {:time-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma573> a r:Extraction; r:gives {{("21:30:00+10:30"^^xsd:time "06:00:00-05:00"^^xsd:time) pred:time-equal true} => {:time-equal-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma574> a r:Extraction; r:gives {{("24:00:00+01:00"^^xsd:time "00:00:00+01:00"^^xsd:time) pred:time-equal true} => {:time-equal-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma575> a r:Extraction; r:gives {{("12:00:00-05:00"^^xsd:time "23:00:00+06:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma576> a r:Extraction; r:gives {{("11:00:00-05:00"^^xsd:time "17:00:00Z"^^xsd:time) pred:time-less-than true} => {:time-less-than-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma577> a r:Extraction; r:gives {{("23:59:59-05:00"^^xsd:time "24:00:00-05:00"^^xsd:time) pred:time-less-than false} => {:time-less-than-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma578> a r:Extraction; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than false} => {:time-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma579> a r:Extraction; r:gives {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma580> a r:Extraction; r:gives {{("PT24H"^^xsd:duration "P1D"^^xsd:duration) pred:duration-equal true} => {:duration-equal-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma581> a r:Extraction; r:gives {{("P1Y"^^xsd:duration "P365D"^^xsd:duration) pred:duration-equal false} => {:duration-equal-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma582> a r:Extraction; r:gives {{("P2Y0M0DT0H0M0S"^^xsd:duration "P24M"^^xsd:duration) pred:duration-equal true} => {:duration-equal-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma583> a r:Extraction; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than true} => {:dayTimeDuration-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma584> a r:Extraction; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than false} => {:dayTimeDuration-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma585> a r:Extraction; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than true} => {:yearMonthDuration-less-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma586> a r:Extraction; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than false} => {:yearMonthDuration-greater-than-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma587> a r:Extraction; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-not-equal false} => {:dateTime-not-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma588> a r:Extraction; r:gives {{("2002-04-02T12:00:00-01:00"^^xsd:dateTime "2002-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-less-than-or-equal true} => {:dateTime-less-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma589> a r:Extraction; r:gives {{("2010-04-02T12:00:00-01:00"^^xsd:dateTime "2010-04-02T17:00:00+04:00"^^xsd:dateTime) pred:dateTime-greater-than-or-equal true} => {:dateTime-greater-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma590> a r:Extraction; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-not-equal true} => {:date-not-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma591> a r:Extraction; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-less-than-or-equal false} => {:date-less-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma592> a r:Extraction; r:gives {{("2004-12-25Z"^^xsd:date "2004-12-25+07:00"^^xsd:date) pred:date-greater-than-or-equal true} => {:date-greater-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma593> a r:Extraction; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-not-equal true} => {:time-not-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma594> a r:Extraction; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-less-than-or-equal true} => {:time-less-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma595> a r:Extraction; r:gives {{("08:00:00+09:00"^^xsd:time "17:00:00-06:00"^^xsd:time) pred:time-greater-than-or-equal false} => {:time-greater-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma596> a r:Extraction; r:gives {{("P1Y"^^xsd:duration "P12M"^^xsd:duration) pred:duration-not-equal false} => {:duration-not-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma597> a r:Extraction; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-less-than-or-equal true} => {:dayTimeDuration-less-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma598> a r:Extraction; r:gives {{("P1DT1M"^^xsd:dayTimeDuration "P3DT1H15M"^^xsd:dayTimeDuration) pred:dayTimeDuration-greater-than-or-equal false} => {:dayTimeDuration-greater-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma599> a r:Extraction; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-less-than-or-equal true} => {:yearMonthDuration-less-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma600> a r:Extraction; r:gives {{("P1Y1M"^^xsd:yearMonthDuration "P3Y"^^xsd:yearMonthDuration) pred:yearMonthDuration-greater-than-or-equal false} => {:yearMonthDuration-greater-than-or-equal-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma601> a r:Extraction; r:gives {{("Family Guy") func:PlainLiteral-from-string-lang "Family Guy"} => {:PlainLiteral-from-string-lang-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma602> a r:Extraction; r:gives {{("Family Guy" "EN") func:PlainLiteral-from-string-lang "Family Guy"@en} => {:PlainLiteral-from-string-lang-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma603> a r:Extraction; r:gives {{("Family Guy") func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma604> a r:Extraction; r:gives {{("Family Guy"@en) func:string-from-PlainLiteral "Family Guy"} => {:string-from-PlainLiteral-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma605> a r:Extraction; r:gives {{("Family Guy") func:lang-from-PlainLiteral ""} => {:lang-from-PlainLiteral-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma606> a r:Extraction; r:gives {{("Family Guy"@en) func:lang-from-PlainLiteral "en"} => {:lang-from-PlainLiteral-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma607> a r:Extraction; r:gives {{("Family Guy" "Mother") func:PlainLiteral-compare -1} => {:PlainLiteral-compare-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma608> a r:Extraction; r:gives {{("Family Guy"@en "Brother"@en) func:PlainLiteral-compare 1} => {:PlainLiteral-compare-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma609> a r:Extraction; r:gives {{("Family Guy") func:PlainLiteral-length 10} => {:PlainLiteral-length-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma610> a r:Extraction; r:gives {{("Family Guy"@en) func:PlainLiteral-length 10} => {:PlainLiteral-length-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma611> a r:Extraction; r:gives {{("Family Guy"@en "en") pred:matches-language-range true} => {:matches-language-range-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma612> a r:Extraction; r:gives {{("Family Guy"@en-us "en-*") pred:matches-language-range true} => {:matches-language-range-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma613> a r:Extraction; r:gives {{((:a :b :c :d)) pred:is-list true} => {:is-list-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma614> a r:Extraction; r:gives {{((:a :b :c :d) :b) pred:list-contains true} => {:list-contains-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma615> a r:Extraction; r:gives {{(:a :b :c :d) func:make-list (:a :b :c :d)} => {:make-list-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma616> a r:Extraction; r:gives {{((:a :b :c :d)) func:count 4} => {:count-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma617> a r:Extraction; r:gives {{((:a :b :c :d) 3) func:get :d} => {:get-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma618> a r:Extraction; r:gives {{((0 1 2 3 4) 0 0) func:sublist ()} => {:sublist-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma619> a r:Extraction; r:gives {{((0 1 2 3 4) 0 1) func:sublist (0)} => {:sublist-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma620> a r:Extraction; r:gives {{((0 1 2 3 4) 0 4) func:sublist (0 1 2 3)} => {:sublist-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma621> a r:Extraction; r:gives {{((0 1 2 3 4) 0 5) func:sublist (0 1 2 3 4)} => {:sublist-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma622> a r:Extraction; r:gives {{((0 1 2 3 4) 0 10) func:sublist (0 1 2 3 4)} => {:sublist-5 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma623> a r:Extraction; r:gives {{((0 1 2 3 4) 0 -2) func:sublist (0 1 2)} => {:sublist-6 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma624> a r:Extraction; r:gives {{((0 1 2 3 4) 2 4) func:sublist (2 3)} => {:sublist-7 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma625> a r:Extraction; r:gives {{((0 1 2 3 4) 2 -2) func:sublist (2)} => {:sublist-9 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma626> a r:Extraction; r:gives {{((0 1 2 3 4) 3) func:sublist (3 4)} => {:sublist-10 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma627> a r:Extraction; r:gives {{((0 1 2 3 4) -2) func:sublist (3 4)} => {:sublist-11 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma628> a r:Extraction; r:gives {{((0 1 2) 3) func:append (0 1 2 3)} => {:append-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma629> a r:Extraction; r:gives {{((0 1 2) 3 4) func:append (0 1 2 3 4)} => {:append-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma630> a r:Extraction; r:gives {{((1 1) (1) (1) ((1))) func:append (1 1 (1) (1) ((1)))} => {:append-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma631> a r:Extraction; r:gives {{(() 1) func:append (1)} => {:append-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma632> a r:Extraction; r:gives {{((0 1 2) (3 4 5)) func:concatenate (0 1 2 3 4 5)} => {:concatenate-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma633> a r:Extraction; r:gives {{((1 1) (1) (1)) func:concatenate (1 1 1 1)} => {:concatenate-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma634> a r:Extraction; r:gives {{(()) func:concatenate ()} => {:concatenate-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma635> a r:Extraction; r:gives {{(() (1) () (2) ((3))) func:concatenate (1 2 (3))} => {:concatenate-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma636> a r:Extraction; r:gives {{((0 1 2 3 4) 0 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma637> a r:Extraction; r:gives {{((0 1 2 3 4) 1 99) func:insert-before (0 99 1 2 3 4)} => {:insert-before-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma638> a r:Extraction; r:gives {{((0 1 2 3 4) -1 99) func:insert-before (0 1 2 3 99 4)} => {:insert-before-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma639> a r:Extraction; r:gives {{((0 1 2 3 4) -5 99) func:insert-before (99 0 1 2 3 4)} => {:insert-before-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma640> a r:Extraction; r:gives {{((0 1 2 3 4) 0) func:remove (1 2 3 4)} => {:remove-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma641> a r:Extraction; r:gives {{((0 1 2 3 4) 1) func:remove (0 2 3 4)} => {:remove-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma642> a r:Extraction; r:gives {{((0 1 2 3 4) 4) func:remove (0 1 2 3)} => {:remove-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma643> a r:Extraction; r:gives {{((0 1 2 3 4) -1) func:remove (0 1 2 3)} => {:remove-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma644> a r:Extraction; r:gives {{((0 1 2 3 4) -5) func:remove (1 2 3 4)} => {:remove-5 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma645> a r:Extraction; r:gives {{((0 1 2 3 4)) func:reverse (4 3 2 1 0)} => {:reverse-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma646> a r:Extraction; r:gives {{((1)) func:reverse (1)} => {:reverse-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma647> a r:Extraction; r:gives {{(()) func:reverse ()} => {:reverse-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma648> a r:Extraction; r:gives {{((0 1 2 3 4) 2) func:index-of (2)} => {:index-of-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma649> a r:Extraction; r:gives {{((0 1 2 3 4 5 2 2) 2) func:index-of (2 6 7)} => {:index-of-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma650> a r:Extraction; r:gives {{((2 2 3 4 5 2 2) 2) func:index-of (0 1 5 6)} => {:index-of-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma651> a r:Extraction; r:gives {{((2 2 3 4 5 2 2) 1) func:index-of ()} => {:index-of-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma652> a r:Extraction; r:gives {{((0 1 2 4) (3 4 5 6)) func:union (0 1 2 4 3 5 6)} => {:union-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma653> a r:Extraction; r:gives {{((0 1 2 3) (4)) func:union (0 1 2 3 4)} => {:union-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma654> a r:Extraction; r:gives {{((0 1 2 3) (3)) func:union (0 1 2 3)} => {:union-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma655> a r:Extraction; r:gives {{((0 2 1 0)) func:union (0 2 1)} => {:union-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma656> a r:Extraction; r:gives {{((0 1 2 3 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma657> a r:Extraction; r:gives {{((0 1 2 3 4 0 4)) func:distinct-values (0 1 2 3 4)} => {:distinct-values-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma658> a r:Extraction; r:gives {{((3 3 3)) func:distinct-values (3)} => {:distinct-values-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma659> a r:Extraction; r:gives {{((0 1 2 3 4) (1 3)) func:intersect (1 3)} => {:intersect-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma660> a r:Extraction; r:gives {{((0 1 2 3 4) (3 1)) func:intersect (1 3)} => {:intersect-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma661> a r:Extraction; r:gives {{((0 1 2 3 4) ()) func:intersect ()} => {:intersect-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma662> a r:Extraction; r:gives {{((0 1 2 3 4) (0 1 2 3 4 5 6)) func:intersect (0 1 2 3 4)} => {:intersect-4 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma663> a r:Extraction; r:gives {{((0 1 2 3 4) (1 3)) func:except (0 2 4)} => {:except-1 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma664> a r:Extraction; r:gives {{((0 1 2 3 4) ()) func:except (0 1 2 3 4)} => {:except-2 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

<#lemma665> a r:Extraction; r:gives {{((0 1 2 3 4) (0 1 2 3 4)) func:except ()} => {:except-3 :result true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/rifP.n3>].

#ENDS 0.918 [sec] TC=443 TP=1776 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/age_instance.n3 http://eulersharp.sourceforge.net/2003/03swap/organism.n3 http://eulersharp.sourceforge.net/2003/03swap/human.n3 http://eulersharp.sourceforge.net/2003/03swap/event.n3 http://eulersharp.sourceforge.net/2003/03swap/rdfs-subClassOf.n3 http://eulersharp.sourceforge.net/2003/03swap/owl-intersectionOf.n3 http://eulersharp.sourceforge.net/2003/03swap/rdfs-subPropertyOf.n3 http://eulersharp.sourceforge.net/2003/03swap/owl-propertyChainAxiom.n3 http://eulersharp.sourceforge.net/2003/03swap/age_rules.n3 --query http://eulersharp.sourceforge.net/2007/07test/age_query.n3

PREFIX event: <http://eulersharp.sourceforge.net/2003/03swap/event#>
PREFIX human: <http://eulersharp.sourceforge.net/2003/03swap/human#>
PREFIX organism: <http://eulersharp.sourceforge.net/2003/03swap/organism#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX i: <http://eulersharp.sourceforge.net/2007/07test/age_instance.n3#>
PREFIX dce: <http://purl.org/dc/elements/1.1/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX unicore: <http://purl.uniprot.org/core/>
PREFIX agent: <http://eulersharp.sourceforge.net/2003/03swap/agent#>
PREFIX space: <http://eulersharp.sourceforge.net/2003/03swap/space#>
PREFIX physical: <http://eulersharp.sourceforge.net/2003/03swap/physicalResource#>
PREFIX fos: <http://eulersharp.sourceforge.net/2003/03swap/foster#>
PREFIX clisko: <http://www.agfa.com/w3c/2009/clinicalSKOSSchemes#>
PREFIX con: <http://www.w3.org/2000/10/swap/pim/contact#>
PREFIX quant: <http://eulersharp.sourceforge.net/2003/03swap/quantities#>
PREFIX doc: <http://eulersharp.sourceforge.net/2003/03swap/document#>
PREFIX humanbody: <http://eulersharp.sourceforge.net/2003/03swap/humanBody#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX time: <http://eulersharp.sourceforge.net/2003/03swap/time#>
PREFIX env: <http://eulersharp.sourceforge.net/2003/03swap/environment#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:gives {
    i:adult1 event:hasAge "P69Y8M"^^xsd:yearMonthDuration.
    i:adult2 event:hasAge "P24Y5M"^^xsd:yearMonthDuration.
    i:baby1 event:hasAge "P0Y4M"^^xsd:yearMonthDuration.
    i:adult3 event:hasAge "P56Y8M"^^xsd:yearMonthDuration.
    i:adult4 event:hasAge "P24Y5M"^^xsd:yearMonthDuration.
    i:baby4 event:hasAge "P0Y7M"^^xsd:yearMonthDuration.
    i:baby2 event:hasAge "P25DT21H55M0.0S"^^xsd:dayTimeDuration.
    i:baby3 event:hasAge "P0DT21H55M0.0S"^^xsd:dayTimeDuration.
  }].

<#lemma1> a r:Inference; r:gives {i:adult1 event:hasAge "P69Y8M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma9>);
  r:rule <#lemma10>.

<#lemma2> a r:Inference; r:gives {i:adult2 event:hasAge "P24Y5M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma11>);
  r:rule <#lemma10>.

<#lemma3> a r:Inference; r:gives {i:baby1 event:hasAge "P0Y4M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma12>);
  r:rule <#lemma10>.

<#lemma4> a r:Inference; r:gives {i:adult3 event:hasAge "P56Y8M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma13>);
  r:rule <#lemma10>.

<#lemma5> a r:Inference; r:gives {i:adult4 event:hasAge "P24Y5M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma14>);
  r:rule <#lemma10>.

<#lemma6> a r:Inference; r:gives {i:baby4 event:hasAge "P0Y7M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma15>);
  r:rule <#lemma10>.

<#lemma7> a r:Inference; r:gives {i:baby2 event:hasAge "P25DT21H55M0.0S"^^xsd:dayTimeDuration}; r:evidence (
  <#lemma16>);
  r:rule <#lemma10>.

<#lemma8> a r:Inference; r:gives {i:baby3 event:hasAge "P0DT21H55M0.0S"^^xsd:dayTimeDuration}; r:evidence (
  <#lemma17>);
  r:rule <#lemma10>.

<#lemma9> a r:Inference; r:gives {i:adult1 event:hasAge "P69Y8M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma18>
  <#lemma19>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "1941-02-09T15:00:00Z"^^xsd:dateTime) math:difference 2200201200.0}]
  [ a r:Fact; r:gives {2200201200.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(2200201200.0 "P1M"^^xsd:duration) math:integerQuotient 836}]
  [ a r:Fact; r:gives {836 math:notLessThan 1}]
  [ a r:Fact; r:gives {("P69Y8M" xsd:yearMonthDuration) log:dtlit 836}]
  [ a r:Fact; r:gives {("P69Y8M" xsd:yearMonthDuration) log:dtlit "P69Y8M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma20>.

<#lemma10> a r:Extraction; r:gives {{?x0 event:hasAge ?x1} => {?x0 event:hasAge ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/age_query.n3>].

<#lemma11> a r:Inference; r:gives {i:adult2 event:hasAge "P24Y5M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma18>
  <#lemma21>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "1986-05-24T00:00:00Z"^^xsd:dateTime) math:difference 771199200.0}]
  [ a r:Fact; r:gives {771199200.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(771199200.0 "P1M"^^xsd:duration) math:integerQuotient 293}]
  [ a r:Fact; r:gives {293 math:notLessThan 1}]
  [ a r:Fact; r:gives {("P24Y5M" xsd:yearMonthDuration) log:dtlit 293}]
  [ a r:Fact; r:gives {("P24Y5M" xsd:yearMonthDuration) log:dtlit "P24Y5M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma20>.

<#lemma12> a r:Inference; r:gives {i:baby1 event:hasAge "P0Y4M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma18>
  <#lemma22>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "2010-06-10T00:05:00Z"^^xsd:dateTime) math:difference 12347700.0}]
  [ a r:Fact; r:gives {12347700.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(12347700.0 "P1M"^^xsd:duration) math:integerQuotient 4}]
  [ a r:Fact; r:gives {4 math:notLessThan 1}]
  [ a r:Fact; r:gives {("P0Y4M" xsd:yearMonthDuration) log:dtlit 4}]
  [ a r:Fact; r:gives {("P0Y4M" xsd:yearMonthDuration) log:dtlit "P0Y4M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma20>.

<#lemma13> a r:Inference; r:gives {i:adult3 event:hasAge "P56Y8M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma18>
  <#lemma23>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "1954-02-09T15:00:00Z"^^xsd:dateTime) math:difference 1789974000.0}]
  [ a r:Fact; r:gives {1789974000.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(1789974000.0 "P1M"^^xsd:duration) math:integerQuotient 680}]
  [ a r:Fact; r:gives {680 math:notLessThan 1}]
  [ a r:Fact; r:gives {("P56Y8M" xsd:yearMonthDuration) log:dtlit 680}]
  [ a r:Fact; r:gives {("P56Y8M" xsd:yearMonthDuration) log:dtlit "P56Y8M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma20>.

<#lemma14> a r:Inference; r:gives {i:adult4 event:hasAge "P24Y5M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma18>
  <#lemma24>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "1986-05-24T00:00:00Z"^^xsd:dateTime) math:difference 771199200.0}]
  [ a r:Fact; r:gives {771199200.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(771199200.0 "P1M"^^xsd:duration) math:integerQuotient 293}]
  [ a r:Fact; r:gives {293 math:notLessThan 1}]
  [ a r:Fact; r:gives {("P24Y5M" xsd:yearMonthDuration) log:dtlit 293}]
  [ a r:Fact; r:gives {("P24Y5M" xsd:yearMonthDuration) log:dtlit "P24Y5M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma20>.

<#lemma15> a r:Inference; r:gives {i:baby4 event:hasAge "P0Y7M"^^xsd:yearMonthDuration}; r:evidence (
  <#lemma18>
  <#lemma25>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "2010-03-10T00:05:00Z"^^xsd:dateTime) math:difference 20296500.0}]
  [ a r:Fact; r:gives {20296500.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(20296500.0 "P1M"^^xsd:duration) math:integerQuotient 7}]
  [ a r:Fact; r:gives {7 math:notLessThan 1}]
  [ a r:Fact; r:gives {("P0Y7M" xsd:yearMonthDuration) log:dtlit 7}]
  [ a r:Fact; r:gives {("P0Y7M" xsd:yearMonthDuration) log:dtlit "P0Y7M"^^xsd:yearMonthDuration}]);
  r:rule <#lemma20>.

<#lemma16> a r:Inference; r:gives {i:baby2 event:hasAge "P25DT21H55M0.0S"^^xsd:dayTimeDuration}; r:evidence (
  <#lemma18>
  <#lemma26>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "2010-10-05T00:05:00Z"^^xsd:dateTime) math:difference 2238900.0}]
  [ a r:Fact; r:gives {2238900.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(2238900.0 "P1M"^^xsd:duration) math:quotient 0.8513749997148014}]
  [ a r:Fact; r:gives {0.8513749997148014 math:lessThan 1}]
  [ a r:Fact; r:gives {("P25DT21H55M0.0S" xsd:dayTimeDuration) log:dtlit 2238900.0}]
  [ a r:Fact; r:gives {("P25DT21H55M0.0S" xsd:dayTimeDuration) log:dtlit "P25DT21H55M0.0S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma27>.

<#lemma17> a r:Inference; r:gives {i:baby3 event:hasAge "P0DT21H55M0.0S"^^xsd:dayTimeDuration}; r:evidence (
  <#lemma18>
  <#lemma28>
  [ a r:Fact; r:gives {("2010-10-30T22:00:00Z"^^xsd:dateTime "2010-10-30T00:05:00Z"^^xsd:dateTime) math:difference 78900.0}]
  [ a r:Fact; r:gives {78900.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(78900.0 "P1M"^^xsd:duration) math:quotient 0.030002897618249064}]
  [ a r:Fact; r:gives {0.030002897618249064 math:lessThan 1}]
  [ a r:Fact; r:gives {("P0DT21H55M0.0S" xsd:dayTimeDuration) log:dtlit 78900.0}]
  [ a r:Fact; r:gives {("P0DT21H55M0.0S" xsd:dayTimeDuration) log:dtlit "P0DT21H55M0.0S"^^xsd:dayTimeDuration}]);
  r:rule <#lemma27>.

<#lemma18> a r:Extraction; r:gives {_:e1 event:hasSnapshotDateTime "2010-10-30T22:00:00Z"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/age_instance.n3>].

<#lemma19> a r:Inference; r:gives {i:adult1 event:hasOriginationDateTime "1941-02-09T15:00:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma29>
  <#lemma30>);
  r:rule <#lemma31>.

<#lemma20> a r:Extraction; r:gives {{?x0 event:hasSnapshotDateTime ?x1.
  ?x2 event:hasOriginationDateTime ?x3.
  (?x1 ?x3) math:difference ?x4.
  ?x4 math:greaterThan 0 .
  (?x4 "P1M"^^xsd:duration) math:integerQuotient ?x5.
  ?x5 math:notLessThan 1 .
  (?x6 xsd:yearMonthDuration) log:dtlit ?x5.
  (?x6 xsd:yearMonthDuration) log:dtlit ?x7} => {?x2 event:hasAge ?x7}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/age_rules.n3>].

<#lemma21> a r:Inference; r:gives {i:adult2 event:hasOriginationDateTime "1986-05-24T00:00:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma29>
  <#lemma32>);
  r:rule <#lemma31>.

<#lemma22> a r:Inference; r:gives {i:baby1 event:hasOriginationDateTime "2010-06-10T00:05:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma29>
  <#lemma33>);
  r:rule <#lemma31>.

<#lemma23> a r:Inference; r:gives {i:adult3 event:hasOriginationDateTime "1954-02-09T15:00:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma34>
  [ a r:Fact; r:gives {(event:exists event:begins) e:propertyChainExtension (i:adult3 "1954-02-09T15:00:00Z"^^xsd:dateTime)}]);
  r:rule <#lemma35>.

<#lemma24> a r:Inference; r:gives {i:adult4 event:hasOriginationDateTime "1986-05-24T00:00:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma34>
  [ a r:Fact; r:gives {(event:exists event:begins) e:propertyChainExtension (i:adult4 "1986-05-24T00:00:00Z"^^xsd:dateTime)}]);
  r:rule <#lemma35>.

<#lemma25> a r:Inference; r:gives {i:baby4 event:hasOriginationDateTime "2010-03-10T00:05:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma34>
  [ a r:Fact; r:gives {(event:exists event:begins) e:propertyChainExtension (i:baby4 "2010-03-10T00:05:00Z"^^xsd:dateTime)}]);
  r:rule <#lemma35>.

<#lemma26> a r:Inference; r:gives {i:baby2 event:hasOriginationDateTime "2010-10-05T00:05:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma29>
  <#lemma36>);
  r:rule <#lemma31>.

<#lemma27> a r:Extraction; r:gives {{?x0 event:hasSnapshotDateTime ?x1.
  ?x2 event:hasOriginationDateTime ?x3.
  (?x1 ?x3) math:difference ?x4.
  ?x4 math:greaterThan 0 .
  (?x4 "P1M"^^xsd:duration) math:quotient ?x5.
  ?x5 math:lessThan 1 .
  (?x6 xsd:dayTimeDuration) log:dtlit ?x4.
  (?x6 xsd:dayTimeDuration) log:dtlit ?x7} => {?x2 event:hasAge ?x7}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/age_rules.n3>].

<#lemma28> a r:Inference; r:gives {i:baby3 event:hasOriginationDateTime "2010-10-30T00:05:00Z"^^xsd:dateTime}; r:evidence (
  <#lemma34>
  [ a r:Fact; r:gives {(event:exists event:begins) e:propertyChainExtension (i:baby3 "2010-10-30T00:05:00Z"^^xsd:dateTime)}]);
  r:rule <#lemma35>.

<#lemma29> a r:Extraction; r:gives {organism:hasBirthDateTime rdfs:subPropertyOf event:hasOriginationDateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/organism.n3>].

<#lemma30> a r:Extraction; r:gives {i:adult1 organism:hasBirthDateTime "1941-02-09T15:00:00Z"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/age_instance.n3>].

<#lemma31> a r:Extraction; r:gives {{?x0 rdfs:subPropertyOf ?x1.
  ?x2 ?x0 ?x3} => {?x2 ?x1 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rdfs-subPropertyOf.n3>].

<#lemma32> a r:Extraction; r:gives {i:adult2 organism:hasBirthDateTime "1986-05-24T00:00:00Z"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/age_instance.n3>].

<#lemma33> a r:Extraction; r:gives {i:baby1 organism:hasBirthDateTime "2010-06-10T00:05:00Z"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/age_instance.n3>].

<#lemma34> a r:Extraction; r:gives {event:hasOriginationDateTime owl:propertyChainAxiom (event:exists event:begins)};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/event.n3>].

<#lemma35> a r:Extraction; r:gives {{?x0 owl:propertyChainAxiom ?x1.
  ?x1 e:propertyChainExtension (?x2 ?x3)} => {?x2 ?x0 ?x3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/owl-propertyChainAxiom.n3>].

<#lemma36> a r:Extraction; r:gives {i:baby2 organism:hasBirthDateTime "2010-10-05T00:05:00Z"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/age_instance.n3>].

#ENDS 4.287 [sec] TC=1023 TP=9084 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3 http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3 http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3 http://eulersharp.sourceforge.net/2003/03swap/age_rules_backward.n3 --query http://eulersharp.sourceforge.net/2007/07test/bmi_query.n3

PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX organism: <http://eulersharp.sourceforge.net/2003/03swap/organism#>
PREFIX humanbody: <http://eulersharp.sourceforge.net/2003/03swap/humanBody#>
PREFIX human: <http://eulersharp.sourceforge.net/2003/03swap/human#>
PREFIX units: <http://eulersharp.sourceforge.net/2003/03swap/units#>
PREFIX quant: <http://eulersharp.sourceforge.net/2003/03swap/quantities#>
PREFIX physical: <http://eulersharp.sourceforge.net/2003/03swap/physicalResource#>
PREFIX event: <http://eulersharp.sourceforge.net/2003/03swap/event#>
PREFIX time: <http://eulersharp.sourceforge.net/2003/03swap/time#>
PREFIX i: <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dce: <http://purl.org/dc/elements/1.1/>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX func: <http://www.w3.org/2007/rif-builtin-function#>
PREFIX schema: <http://schema.org/>
PREFIX fos: <http://eulersharp.sourceforge.net/2003/03swap/foster#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:gives {
    i:adult3 human:hasBodyMassIndex _:sk0.
    i:adult3 human:hasWeightStatus _:sk3.
    _:sk0 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk0 quant:hasUnit units:kilogramPerMeterSquare.
    _:sk0 quant:hasValue 15.299747554165355 .
    _:sk0 event:basedOn i:weightMeasurement3.
    _:sk3 a humanbody:SeverelyUnderweight.
    _:sk3 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk3 event:basedOn _:sk0.
    _:sk0 event:basedOn i:lengthMeasurement3.
    i:adult4 human:hasBodyMassIndex _:sk1.
    i:adult4 human:hasWeightStatus _:sk5.
    _:sk1 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk1 quant:hasUnit units:kilogramPerMeterSquare.
    _:sk1 quant:hasValue 24.535123966942148 .
    _:sk1 event:basedOn i:weightMeasurement4.
    _:sk5 a humanbody:NormalWeight.
    _:sk5 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk5 event:basedOn _:sk1.
    _:sk1 event:basedOn i:lengthMeasurement4.
    i:adult5 human:hasBodyMassIndex _:sk2.
    i:adult5 human:hasWeightStatus _:sk4.
    _:sk2 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk2 quant:hasUnit units:kilogramPerMeterSquare.
    _:sk2 quant:hasValue 18.359697064998425 .
    _:sk2 event:basedOn i:weightMeasurement5.
    _:sk4 a humanbody:Underweight.
    _:sk4 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk4 event:basedOn _:sk2.
    _:sk2 event:basedOn i:lengthMeasurement5.
    i:adult1 human:hasBodyMassIndex _:sk6.
    i:adult1 human:hasWeightStatus _:sk9.
    _:sk6 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk6 quant:hasUnit units:kilogramPerMeterSquare.
    _:sk6 quant:hasValue 55.4016620498615 .
    _:sk6 event:basedOn i:weightMeasurement1.
    _:sk9 a humanbody:SuperObese.
    _:sk9 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
    _:sk9 event:basedOn _:sk6.
    _:sk6 event:basedOn i:lengthMeasurement1.
    i:adult2 human:hasBodyMassIndex _:sk7.
    i:adult2 human:hasWeightStatus _:sk8.
    _:sk7 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
    _:sk7 quant:hasUnit units:kilogramPerMeterSquare.
    _:sk7 quant:hasValue 26.17489589530042 .
    _:sk7 event:basedOn i:weightMeasurement2.
    _:sk8 a humanbody:Overweight.
    _:sk8 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
    _:sk8 event:basedOn _:sk7.
    _:sk7 event:basedOn i:lengthMeasurement2.
  }].

<#lemma1> a r:Inference; r:gives {i:adult3 human:hasBodyMassIndex _:sk0.
  i:adult3 human:hasWeightStatus _:sk3.
  _:sk0 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk0 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk0 quant:hasValue 15.299747554165355 .
  _:sk0 event:basedOn i:weightMeasurement3.
  _:sk0 event:basedOn i:weightMeasurement3.
  _:sk3 a humanbody:SeverelyUnderweight.
  _:sk3 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk3 event:basedOn _:sk0}; r:evidence (
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma2> a r:Inference; r:gives {_:sk0 event:basedOn i:lengthMeasurement3}; r:evidence (
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma3> a r:Inference; r:gives {i:adult4 human:hasBodyMassIndex _:sk1.
  i:adult4 human:hasWeightStatus _:sk5.
  _:sk1 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk1 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk1 quant:hasValue 24.535123966942148 .
  _:sk1 event:basedOn i:weightMeasurement4.
  _:sk1 event:basedOn i:weightMeasurement4.
  _:sk5 a humanbody:NormalWeight.
  _:sk5 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk5 event:basedOn _:sk1}; r:evidence (
  <#lemma14>
  <#lemma15>);
  r:rule <#lemma13>.

<#lemma4> a r:Inference; r:gives {_:sk1 event:basedOn i:lengthMeasurement4}; r:evidence (
  <#lemma14>
  <#lemma15>);
  r:rule <#lemma13>.

<#lemma5> a r:Inference; r:gives {i:adult5 human:hasBodyMassIndex _:sk2.
  i:adult5 human:hasWeightStatus _:sk4.
  _:sk2 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk2 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk2 quant:hasValue 18.359697064998425 .
  _:sk2 event:basedOn i:weightMeasurement5.
  _:sk2 event:basedOn i:weightMeasurement5.
  _:sk4 a humanbody:Underweight.
  _:sk4 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk4 event:basedOn _:sk2}; r:evidence (
  <#lemma16>
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma6> a r:Inference; r:gives {_:sk2 event:basedOn i:lengthMeasurement5}; r:evidence (
  <#lemma16>
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma7> a r:Inference; r:gives {i:adult1 human:hasBodyMassIndex _:sk6.
  i:adult1 human:hasWeightStatus _:sk9.
  _:sk6 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk6 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk6 quant:hasValue 55.4016620498615 .
  _:sk6 event:basedOn i:weightMeasurement1.
  _:sk6 event:basedOn i:weightMeasurement1.
  _:sk9 a humanbody:SuperObese.
  _:sk9 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk9 event:basedOn _:sk6}; r:evidence (
  <#lemma18>
  <#lemma19>);
  r:rule <#lemma13>.

<#lemma8> a r:Inference; r:gives {_:sk6 event:basedOn i:lengthMeasurement1}; r:evidence (
  <#lemma18>
  <#lemma19>);
  r:rule <#lemma13>.

<#lemma9> a r:Inference; r:gives {i:adult2 human:hasBodyMassIndex _:sk7.
  i:adult2 human:hasWeightStatus _:sk8.
  _:sk7 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
  _:sk7 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk7 quant:hasValue 26.17489589530042 .
  _:sk7 event:basedOn i:weightMeasurement2.
  _:sk7 event:basedOn i:weightMeasurement2.
  _:sk8 a humanbody:Overweight.
  _:sk8 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
  _:sk8 event:basedOn _:sk7}; r:evidence (
  <#lemma20>
  <#lemma21>);
  r:rule <#lemma13>.

<#lemma10> a r:Inference; r:gives {_:sk7 event:basedOn i:lengthMeasurement2}; r:evidence (
  <#lemma20>
  <#lemma21>);
  r:rule <#lemma13>.

<#lemma11> a r:Inference; r:gives {i:adult3 human:hasBodyMassIndex _:sk0.
  _:sk0 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk0 quant:hasValue 15.299747554165355 .
  _:sk0 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk0 event:basedOn i:weightMeasurement3.
  _:sk0 event:basedOn i:lengthMeasurement3}; r:evidence (
  <#lemma22>
  <#lemma23>
  <#lemma24>
  <#lemma25>
  <#lemma26>
  <#lemma27>
  <#lemma28>
  <#lemma29>
  <#lemma30>
  <#lemma31>
  <#lemma32>
  <#lemma33>
  <#lemma34>
  <#lemma35>
  [ a r:Fact; r:gives {("2010-01-20T00:00:00+01:00"^^xsd:dateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime) math:difference 0.0}]
  [ a r:Fact; r:gives {0.0 math:notGreaterThan "P10Y"^^xsd:duration}]
  [ a r:Fact; r:gives {0.0 math:notLessThan "-P7D"^^xsd:duration}]
  [ a r:Fact; r:gives {("2010-01-20T00:00:00+01:00"^^xsd:dateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime) e:max "2010-01-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-01-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-01-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-01-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-01-20T00:00:00+01:00"^^xsd:dateTime}]
  <#lemma36>
  [ a r:Fact; r:gives {23 math:notLessThan 15}]
  [ a r:Fact; r:gives {(1.715 2) math:exponentiation 2.941225}]
  [ a r:Fact; r:gives {(45 2.941225) math:quotient 15.299747554165355}]);
  r:rule <#lemma37>.

<#lemma12> a r:Inference; r:gives {i:adult3 human:hasWeightStatus _:sk3.
  _:sk3 a humanbody:SeverelyUnderweight.
  _:sk3 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk3 event:basedOn _:sk0}; r:evidence (
  <#lemma11>
  [ a r:Fact; r:gives {15.299747554165355 math:lessThan 16}]);
  r:rule <#lemma38>.

<#lemma13> a r:Extraction; r:gives {{?x0 human:hasBodyMassIndex ?x1.
  ?x0 human:hasWeightStatus ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x1 quant:hasUnit units:kilogramPerMeterSquare.
  ?x1 quant:hasValue ?x4.
  ?x1 event:basedOn ?x5.
  ?x1 event:basedOn ?x6.
  ?x2 a ?x7.
  ?x2 time:hasDateTime ?x8.
  ?x2 event:basedOn ?x1} => {?x0 human:hasBodyMassIndex ?x1.
  ?x0 human:hasWeightStatus ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x1 quant:hasUnit units:kilogramPerMeterSquare.
  ?x1 quant:hasValue ?x4.
  ?x1 event:basedOn ?x5.
  ?x1 event:basedOn ?x6.
  ?x2 a ?x7.
  ?x2 time:hasDateTime ?x8.
  ?x2 event:basedOn ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_query.n3>].

<#lemma14> a r:Inference; r:gives {i:adult4 human:hasBodyMassIndex _:sk1.
  _:sk1 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk1 quant:hasValue 24.535123966942148 .
  _:sk1 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk1 event:basedOn i:weightMeasurement4.
  _:sk1 event:basedOn i:lengthMeasurement4}; r:evidence (
  <#lemma39>
  <#lemma40>
  <#lemma41>
  <#lemma42>
  <#lemma43>
  <#lemma44>
  <#lemma45>
  <#lemma46>
  <#lemma47>
  <#lemma48>
  <#lemma49>
  <#lemma50>
  <#lemma51>
  <#lemma52>
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00"^^xsd:dateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime) math:difference 0.0}]
  [ a r:Fact; r:gives {0.0 math:notGreaterThan "P10Y"^^xsd:duration}]
  [ a r:Fact; r:gives {0.0 math:notLessThan "-P7D"^^xsd:duration}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00"^^xsd:dateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime) e:max "2010-02-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-02-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-02-20T00:00:00+01:00"^^xsd:dateTime}]
  <#lemma53>
  [ a r:Fact; r:gives {35 math:notLessThan 15}]
  [ a r:Fact; r:gives {(1.76 2) math:exponentiation 3.0976}]
  [ a r:Fact; r:gives {(76 3.0976) math:quotient 24.535123966942148}]);
  r:rule <#lemma37>.

<#lemma15> a r:Inference; r:gives {i:adult4 human:hasWeightStatus _:sk5.
  _:sk5 a humanbody:NormalWeight.
  _:sk5 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk5 event:basedOn _:sk1}; r:evidence (
  <#lemma14>
  [ a r:Fact; r:gives {24.535123966942148 math:notLessThan 18.5}]
  [ a r:Fact; r:gives {24.535123966942148 math:notGreaterThan 24.9}]);
  r:rule <#lemma54>.

<#lemma16> a r:Inference; r:gives {i:adult5 human:hasBodyMassIndex _:sk2.
  _:sk2 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk2 quant:hasValue 18.359697064998425 .
  _:sk2 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk2 event:basedOn i:weightMeasurement5.
  _:sk2 event:basedOn i:lengthMeasurement5}; r:evidence (
  <#lemma55>
  <#lemma56>
  <#lemma57>
  <#lemma58>
  <#lemma59>
  <#lemma60>
  <#lemma61>
  <#lemma62>
  <#lemma63>
  <#lemma64>
  <#lemma65>
  <#lemma66>
  <#lemma67>
  <#lemma68>
  [ a r:Fact; r:gives {("2011-02-20T00:00:00+01:00"^^xsd:dateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime) math:difference 0.0}]
  [ a r:Fact; r:gives {0.0 math:notGreaterThan "P10Y"^^xsd:duration}]
  [ a r:Fact; r:gives {0.0 math:notLessThan "-P7D"^^xsd:duration}]
  [ a r:Fact; r:gives {("2011-02-20T00:00:00+01:00"^^xsd:dateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime) e:max "2011-02-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2011-02-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2011-02-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2011-02-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2011-02-20T00:00:00+01:00"^^xsd:dateTime}]
  <#lemma69>
  [ a r:Fact; r:gives {15 math:notLessThan 15}]
  [ a r:Fact; r:gives {(1.715 2) math:exponentiation 2.941225}]
  [ a r:Fact; r:gives {(54 2.941225) math:quotient 18.359697064998425}]);
  r:rule <#lemma37>.

<#lemma17> a r:Inference; r:gives {i:adult5 human:hasWeightStatus _:sk4.
  _:sk4 a humanbody:Underweight.
  _:sk4 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk4 event:basedOn _:sk2}; r:evidence (
  <#lemma16>
  [ a r:Fact; r:gives {18.359697064998425 math:notLessThan 16}]
  [ a r:Fact; r:gives {18.359697064998425 math:notGreaterThan 18.4}]);
  r:rule <#lemma70>.

<#lemma18> a r:Inference; r:gives {i:adult1 human:hasBodyMassIndex _:sk6.
  _:sk6 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk6 quant:hasValue 55.4016620498615 .
  _:sk6 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk6 event:basedOn i:weightMeasurement1.
  _:sk6 event:basedOn i:lengthMeasurement1}; r:evidence (
  <#lemma71>
  <#lemma72>
  <#lemma73>
  <#lemma74>
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3> <http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/age_rules_backward.n3>) 1) e:optional {i:adult1 human:hasLength i:lengthMeasurement1.
    i:lengthMeasurement1 quant:hasUnit units:meter.
    i:lengthMeasurement1 quant:hasValue 1.9 .
    i:lengthMeasurement1 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime}}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3> <http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/age_rules_backward.n3>) 1) e:optional {i:adult1 human:hasLength i:lengthMeasurement1.
    i:lengthMeasurement1 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
    i:lengthMeasurement1 quant:convertedTo _:sk10.
    _:sk10 quant:hasUnit units:meter.
    _:sk10 quant:hasValue 1.9}}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00"^^xsd:dateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime) math:difference 0.0}]
  [ a r:Fact; r:gives {0.0 math:notGreaterThan "P0M"^^xsd:duration}]
  [ a r:Fact; r:gives {0.0 math:notLessThan "-P0M"^^xsd:duration}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00"^^xsd:dateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime) e:max "2010-02-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-02-20T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-02-20T00:00:00+01:00"^^xsd:dateTime}]
  <#lemma75>
  [ a r:Fact; r:gives {67 math:notLessThan 15}]
  [ a r:Fact; r:gives {(1.9 2) math:exponentiation 3.61}]
  [ a r:Fact; r:gives {(200 3.61) math:quotient 55.4016620498615}]);
  r:rule <#lemma76>.

<#lemma19> a r:Inference; r:gives {i:adult1 human:hasWeightStatus _:sk9.
  _:sk9 a humanbody:SuperObese.
  _:sk9 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime.
  _:sk9 event:basedOn _:sk6}; r:evidence (
  <#lemma18>
  [ a r:Fact; r:gives {55.4016620498615 math:notLessThan 45}]);
  r:rule <#lemma77>.

<#lemma20> a r:Inference; r:gives {i:adult2 human:hasBodyMassIndex _:sk7.
  _:sk7 quant:hasUnit units:kilogramPerMeterSquare.
  _:sk7 quant:hasValue 26.17489589530042 .
  _:sk7 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
  _:sk7 event:basedOn i:weightMeasurement2.
  _:sk7 event:basedOn i:lengthMeasurement2}; r:evidence (
  <#lemma78>
  <#lemma79>
  <#lemma80>
  <#lemma81>
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3> <http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/age_rules_backward.n3>) 1) e:optional {i:adult2 human:hasLength i:lengthMeasurement2.
    i:lengthMeasurement2 quant:hasUnit units:meter.
    i:lengthMeasurement2 quant:hasValue 2.05 .
    i:lengthMeasurement2 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime}}]
  [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3> <http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3> <http://eulersharp.sourceforge.net/2003/03swap/age_rules_backward.n3>) 1) e:optional {i:adult2 human:hasLength i:lengthMeasurement2.
    i:lengthMeasurement2 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
    i:lengthMeasurement2 quant:convertedTo _:sk11.
    _:sk11 quant:hasUnit units:meter.
    _:sk11 quant:hasValue 2.05}}]
  [ a r:Fact; r:gives {("2010-02-25T00:00:00+01:00"^^xsd:dateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime) math:difference 0.0}]
  [ a r:Fact; r:gives {0.0 math:notGreaterThan "P0M"^^xsd:duration}]
  [ a r:Fact; r:gives {0.0 math:notLessThan "-P0M"^^xsd:duration}]
  [ a r:Fact; r:gives {("2010-02-25T00:00:00+01:00"^^xsd:dateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime) e:max "2010-02-25T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-02-25T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-02-25T00:00:00+01:00"^^xsd:dateTime}]
  [ a r:Fact; r:gives {("2010-02-25T00:00:00+01:00" xsd:dateTime) log:dtlit "2010-02-25T00:00:00+01:00"^^xsd:dateTime}]
  <#lemma82>
  [ a r:Fact; r:gives {44 math:notLessThan 15}]
  [ a r:Fact; r:gives {(2.05 2) math:exponentiation 4.2025}]
  [ a r:Fact; r:gives {(110 4.2025) math:quotient 26.17489589530042}]);
  r:rule <#lemma76>.

<#lemma21> a r:Inference; r:gives {i:adult2 human:hasWeightStatus _:sk8.
  _:sk8 a humanbody:Overweight.
  _:sk8 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime.
  _:sk8 event:basedOn _:sk7}; r:evidence (
  <#lemma20>
  [ a r:Fact; r:gives {26.17489589530042 math:notLessThan 25}]
  [ a r:Fact; r:gives {26.17489589530042 math:notGreaterThan 29.9}]);
  r:rule <#lemma83>.

<#lemma22> a r:Extraction; r:gives {i:adult3 physical:hasComplexity i:body1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma23> a r:Extraction; r:gives {i:body1 a humanbody:Body};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma24> a r:Extraction; r:gives {i:body1 humanbody:hasLength i:length1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma25> a r:Extraction; r:gives {i:body1 humanbody:hasWeight i:weight1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma26> a r:Extraction; r:gives {i:length1 a humanbody:Length};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma27> a r:Extraction; r:gives {i:length1 quant:hasMeasurement i:lengthMeasurement3};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma28> a r:Extraction; r:gives {i:lengthMeasurement3 quant:hasUnit units:meter};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma29> a r:Extraction; r:gives {i:lengthMeasurement3 quant:hasValue 1.715};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma30> a r:Extraction; r:gives {i:lengthMeasurement3 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma31> a r:Extraction; r:gives {i:weight1 a humanbody:Weight};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma32> a r:Extraction; r:gives {i:weight1 quant:hasMeasurement i:weightMeasurement3};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma33> a r:Extraction; r:gives {i:weightMeasurement3 quant:hasUnit units:kilogram};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma34> a r:Extraction; r:gives {i:weightMeasurement3 quant:hasValue 45};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma35> a r:Extraction; r:gives {i:weightMeasurement3 time:hasDateTime "2010-01-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma36> a r:Inference; r:gives {(i:adult3 "2010-01-20T00:00:00+01:00"^^xsd:dateTime) time:calculatingAge 23}; r:evidence (
  <#lemma84>
  [ a r:Fact; r:gives {("2010-01-20T00:00:00+01:00"^^xsd:dateTime "1987-01-01T00:00:00+01:00"^^xsd:dateTime) math:difference 727488000.0}]
  [ a r:Fact; r:gives {727488000.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(727488000.0 "P1M"^^xsd:duration) math:integerQuotient 276}]
  [ a r:Fact; r:gives {("P23Y0M" xsd:yearMonthDuration) log:dtlit 276}]
  [ a r:Fact; r:gives {("P23Y0M" xsd:yearMonthDuration) log:dtlit "P23Y0M"^^xsd:yearMonthDuration}]
  [ a r:Fact; r:gives {("P23Y0M"^^xsd:yearMonthDuration) func:years-from-duration 23}]);
  r:rule <#lemma85>.

<#lemma37> a r:Extraction; r:gives {{?x0 physical:hasComplexity ?x1.
  ?x1 a humanbody:Body.
  ?x1 humanbody:hasLength ?x2.
  ?x1 humanbody:hasWeight ?x3.
  ?x2 a humanbody:Length.
  ?x2 quant:hasMeasurement ?x4.
  ?x4 quant:hasUnit units:meter.
  ?x4 quant:hasValue ?x5.
  ?x4 time:hasDateTime ?x6.
  ?x3 a humanbody:Weight.
  ?x3 quant:hasMeasurement ?x7.
  ?x7 quant:hasUnit units:kilogram.
  ?x7 quant:hasValue ?x8.
  ?x7 time:hasDateTime ?x9.
  (?x9 ?x6) math:difference ?x10.
  ?x10 math:notGreaterThan "P10Y"^^xsd:duration.
  ?x10 math:notLessThan "-P7D"^^xsd:duration.
  (?x9 ?x6) e:max ?x11.
  (?x12 xsd:dateTime) log:dtlit ?x11.
  (?x12 xsd:dateTime) log:dtlit ?x13.
  (?x0 ?x13) time:calculatingAge ?x14.
  ?x14 math:notLessThan 15 .
  (?x5 2) math:exponentiation ?x15.
  (?x8 ?x15) math:quotient ?x16} => {?x0 human:hasBodyMassIndex _:x17.
  _:x17 quant:hasUnit units:kilogramPerMeterSquare.
  _:x17 quant:hasValue ?x16.
  _:x17 time:hasDateTime ?x13.
  _:x17 event:basedOn ?x7.
  _:x17 event:basedOn ?x4}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3>].

<#lemma38> a r:Extraction; r:gives {{?x0 human:hasBodyMassIndex ?x1.
  ?x1 quant:hasValue ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x2 math:lessThan 16} => {?x0 human:hasWeightStatus _:x4.
  _:x4 a humanbody:SeverelyUnderweight.
  _:x4 time:hasDateTime ?x3.
  _:x4 event:basedOn ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3>].

<#lemma39> a r:Extraction; r:gives {i:adult4 physical:hasComplexity i:body2};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma40> a r:Extraction; r:gives {i:body2 a humanbody:Body};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma41> a r:Extraction; r:gives {i:body2 humanbody:hasLength i:length2};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma42> a r:Extraction; r:gives {i:body2 humanbody:hasWeight i:weight2};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma43> a r:Extraction; r:gives {i:length2 a humanbody:Length};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma44> a r:Extraction; r:gives {i:length2 quant:hasMeasurement i:lengthMeasurement4};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma45> a r:Extraction; r:gives {i:lengthMeasurement4 quant:hasUnit units:meter};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma46> a r:Extraction; r:gives {i:lengthMeasurement4 quant:hasValue 1.76};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma47> a r:Extraction; r:gives {i:lengthMeasurement4 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma48> a r:Extraction; r:gives {i:weight2 a humanbody:Weight};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma49> a r:Extraction; r:gives {i:weight2 quant:hasMeasurement i:weightMeasurement4};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma50> a r:Extraction; r:gives {i:weightMeasurement4 quant:hasUnit units:kilogram};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma51> a r:Extraction; r:gives {i:weightMeasurement4 quant:hasValue 76};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma52> a r:Extraction; r:gives {i:weightMeasurement4 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma53> a r:Inference; r:gives {(i:adult4 "2010-02-20T00:00:00+01:00"^^xsd:dateTime) time:calculatingAge 35}; r:evidence (
  <#lemma86>
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00"^^xsd:dateTime "1975-01-01T00:00:00+01:00"^^xsd:dateTime) math:difference 1108857600.0}]
  [ a r:Fact; r:gives {1108857600.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(1108857600.0 "P1M"^^xsd:duration) math:integerQuotient 421}]
  [ a r:Fact; r:gives {("P35Y1M" xsd:yearMonthDuration) log:dtlit 421}]
  [ a r:Fact; r:gives {("P35Y1M" xsd:yearMonthDuration) log:dtlit "P35Y1M"^^xsd:yearMonthDuration}]
  [ a r:Fact; r:gives {("P35Y1M"^^xsd:yearMonthDuration) func:years-from-duration 35}]);
  r:rule <#lemma85>.

<#lemma54> a r:Extraction; r:gives {{?x0 human:hasBodyMassIndex ?x1.
  ?x1 quant:hasValue ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x2 math:notLessThan 18.5 .
  ?x2 math:notGreaterThan 24.9} => {?x0 human:hasWeightStatus _:x4.
  _:x4 a humanbody:NormalWeight.
  _:x4 time:hasDateTime ?x3.
  _:x4 event:basedOn ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3>].

<#lemma55> a r:Extraction; r:gives {i:adult5 physical:hasComplexity i:body3};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma56> a r:Extraction; r:gives {i:body3 a humanbody:Body};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma57> a r:Extraction; r:gives {i:body3 humanbody:hasLength i:length3};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma58> a r:Extraction; r:gives {i:body3 humanbody:hasWeight i:weight3};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma59> a r:Extraction; r:gives {i:length3 a humanbody:Length};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma60> a r:Extraction; r:gives {i:length3 quant:hasMeasurement i:lengthMeasurement5};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma61> a r:Extraction; r:gives {i:lengthMeasurement5 quant:hasUnit units:meter};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma62> a r:Extraction; r:gives {i:lengthMeasurement5 quant:hasValue 1.715};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma63> a r:Extraction; r:gives {i:lengthMeasurement5 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma64> a r:Extraction; r:gives {i:weight3 a humanbody:Weight};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma65> a r:Extraction; r:gives {i:weight3 quant:hasMeasurement i:weightMeasurement5};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma66> a r:Extraction; r:gives {i:weightMeasurement5 quant:hasUnit units:kilogram};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma67> a r:Extraction; r:gives {i:weightMeasurement5 quant:hasValue 54};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma68> a r:Extraction; r:gives {i:weightMeasurement5 time:hasDateTime "2011-02-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma69> a r:Inference; r:gives {(i:adult5 "2011-02-20T00:00:00+01:00"^^xsd:dateTime) time:calculatingAge 15}; r:evidence (
  <#lemma87>
  [ a r:Fact; r:gives {("2011-02-20T00:00:00+01:00"^^xsd:dateTime "1995-08-07T00:00:00+01:00"^^xsd:dateTime) math:difference 490406400.0}]
  [ a r:Fact; r:gives {490406400.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(490406400.0 "P1M"^^xsd:duration) math:integerQuotient 186}]
  [ a r:Fact; r:gives {("P15Y6M" xsd:yearMonthDuration) log:dtlit 186}]
  [ a r:Fact; r:gives {("P15Y6M" xsd:yearMonthDuration) log:dtlit "P15Y6M"^^xsd:yearMonthDuration}]
  [ a r:Fact; r:gives {("P15Y6M"^^xsd:yearMonthDuration) func:years-from-duration 15}]);
  r:rule <#lemma85>.

<#lemma70> a r:Extraction; r:gives {{?x0 human:hasBodyMassIndex ?x1.
  ?x1 quant:hasValue ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x2 math:notLessThan 16 .
  ?x2 math:notGreaterThan 18.4} => {?x0 human:hasWeightStatus _:x4.
  _:x4 a humanbody:Underweight.
  _:x4 time:hasDateTime ?x3.
  _:x4 event:basedOn ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3>].

<#lemma71> a r:Extraction; r:gives {i:adult1 human:weighs i:weightMeasurement1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma72> a r:Extraction; r:gives {i:weightMeasurement1 quant:hasUnit units:kilogram};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma73> a r:Extraction; r:gives {i:weightMeasurement1 quant:hasValue 200};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma74> a r:Extraction; r:gives {i:weightMeasurement1 time:hasDateTime "2010-02-20T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma75> a r:Inference; r:gives {(i:adult1 "2010-02-20T00:00:00+01:00"^^xsd:dateTime) time:calculatingAge 67}; r:evidence (
  <#lemma88>
  [ a r:Fact; r:gives {("2010-02-20T00:00:00+01:00"^^xsd:dateTime "1943-01-01T00:00:00+01:00"^^xsd:dateTime) math:difference 2118700800.0}]
  [ a r:Fact; r:gives {2118700800.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(2118700800.0 "P1M"^^xsd:duration) math:integerQuotient 805}]
  [ a r:Fact; r:gives {("P67Y1M" xsd:yearMonthDuration) log:dtlit 805}]
  [ a r:Fact; r:gives {("P67Y1M" xsd:yearMonthDuration) log:dtlit "P67Y1M"^^xsd:yearMonthDuration}]
  [ a r:Fact; r:gives {("P67Y1M"^^xsd:yearMonthDuration) func:years-from-duration 67}]);
  r:rule <#lemma85>.

<#lemma76> a r:Extraction; r:gives {{?x0 human:weighs ?x1.
  ?x1 quant:hasUnit units:kilogram.
  ?x1 quant:hasValue ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x4 e:optional {?x0 human:hasLength ?x5.
    ?x5 quant:hasUnit units:meter.
    ?x5 quant:hasValue ?x6.
    ?x5 time:hasDateTime ?x7}.
  ?x4 e:optional {?x0 human:hasLength ?x5.
    ?x5 time:hasDateTime ?x7.
    ?x5 quant:convertedTo ?x8.
    ?x8 quant:hasUnit units:meter.
    ?x8 quant:hasValue ?x6}.
  (?x3 ?x7) math:difference ?x9.
  ?x9 math:notGreaterThan "P0M"^^xsd:duration.
  ?x9 math:notLessThan "-P0M"^^xsd:duration.
  (?x3 ?x7) e:max ?x10.
  (?x11 xsd:dateTime) log:dtlit ?x10.
  (?x11 xsd:dateTime) log:dtlit ?x12.
  (?x0 ?x12) time:calculatingAge ?x13.
  ?x13 math:notLessThan 15 .
  (?x6 2) math:exponentiation ?x14.
  (?x2 ?x14) math:quotient ?x15} => {?x0 human:hasBodyMassIndex _:x16.
  _:x16 quant:hasUnit units:kilogramPerMeterSquare.
  _:x16 quant:hasValue ?x15.
  _:x16 time:hasDateTime ?x12.
  _:x16 event:basedOn ?x1.
  _:x16 event:basedOn ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/bmi_rules.n3>].

<#lemma77> a r:Extraction; r:gives {{?x0 human:hasBodyMassIndex ?x1.
  ?x1 quant:hasValue ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x2 math:notLessThan 45} => {?x0 human:hasWeightStatus _:x4.
  _:x4 a humanbody:SuperObese.
  _:x4 time:hasDateTime ?x3.
  _:x4 event:basedOn ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3>].

<#lemma78> a r:Extraction; r:gives {i:adult2 human:weighs i:weightMeasurement2};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma79> a r:Extraction; r:gives {i:weightMeasurement2 quant:hasUnit units:kilogram};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma80> a r:Extraction; r:gives {i:weightMeasurement2 quant:hasValue 110};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma81> a r:Extraction; r:gives {i:weightMeasurement2 time:hasDateTime "2010-02-25T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma82> a r:Inference; r:gives {(i:adult2 "2010-02-25T00:00:00+01:00"^^xsd:dateTime) time:calculatingAge 44}; r:evidence (
  <#lemma89>
  [ a r:Fact; r:gives {("2010-02-25T00:00:00+01:00"^^xsd:dateTime "1966-01-01T00:00:00+01:00"^^xsd:dateTime) math:difference 1393286400.0}]
  [ a r:Fact; r:gives {1393286400.0 math:greaterThan 0}]
  [ a r:Fact; r:gives {(1393286400.0 "P1M"^^xsd:duration) math:integerQuotient 529}]
  [ a r:Fact; r:gives {("P44Y1M" xsd:yearMonthDuration) log:dtlit 529}]
  [ a r:Fact; r:gives {("P44Y1M" xsd:yearMonthDuration) log:dtlit "P44Y1M"^^xsd:yearMonthDuration}]
  [ a r:Fact; r:gives {("P44Y1M"^^xsd:yearMonthDuration) func:years-from-duration 44}]);
  r:rule <#lemma85>.

<#lemma83> a r:Extraction; r:gives {{?x0 human:hasBodyMassIndex ?x1.
  ?x1 quant:hasValue ?x2.
  ?x1 time:hasDateTime ?x3.
  ?x2 math:notLessThan 25 .
  ?x2 math:notGreaterThan 29.9} => {?x0 human:hasWeightStatus _:x4.
  _:x4 a humanbody:Overweight.
  _:x4 time:hasDateTime ?x3.
  _:x4 event:basedOn ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/weightStatus_rules.n3>].

<#lemma84> a r:Extraction; r:gives {i:adult3 organism:hasBirthDateTime "1987-01-01T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma85> a r:Extraction; r:gives {{(?x0 ?x2) time:calculatingAge ?x7} <= {?x0 organism:hasBirthDateTime ?x1.
  (?x2 ?x1) math:difference ?x3.
  ?x3 math:greaterThan 0 .
  (?x3 "P1M"^^xsd:duration) math:integerQuotient ?x4.
  (?x5 xsd:yearMonthDuration) log:dtlit ?x4.
  (?x5 xsd:yearMonthDuration) log:dtlit ?x6.
  (?x6) func:years-from-duration ?x7}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/age_rules_backward.n3>].

<#lemma86> a r:Extraction; r:gives {i:adult4 organism:hasBirthDateTime "1975-01-01T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma87> a r:Extraction; r:gives {i:adult5 organism:hasBirthDateTime "1995-08-07T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma88> a r:Extraction; r:gives {i:adult1 organism:hasBirthDateTime "1943-01-01T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

<#lemma89> a r:Extraction; r:gives {i:adult2 organism:hasBirthDateTime "1966-01-01T00:00:00+01:00"^^xsd:dateTime};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/bmi_instances.n3>].

#ENDS 1.616 [sec] TC=20 TP=96 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2009/12dtb/test-facts.n3 http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3 --query http://eulersharp.sourceforge.net/2009/12dtb/test-query.n3

PREFIX : <http://eulersharp.sourceforge.net/2009/12dtb/test#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :TestVariable a :A2.
  }].

<#lemma1> a r:Inference; r:gives {:TestVariable a :A2}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {:TestVariable a :A2}; r:evidence (
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma3> a r:Extraction; r:gives {{?x0 a :A2} => {?x0 a :A2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-query.n3>].

<#lemma4> a r:Inference; r:gives {:TestVariable a :N1000}; r:evidence (
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma5> a r:Extraction; r:gives {{?x0 a :N1000} => {?x0 a :A2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma6> a r:Inference; r:gives {:TestVariable a :N999}; r:evidence (
  <#lemma8>);
  r:rule <#lemma9>.

<#lemma7> a r:Extraction; r:gives {{?x0 a :N1000} <= {?x0 a :N999}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma8> a r:Inference; r:gives {:TestVariable a :N998}; r:evidence (
  <#lemma10>);
  r:rule <#lemma11>.

<#lemma9> a r:Extraction; r:gives {{?x0 a :N999} <= {?x0 a :N998}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma10> a r:Inference; r:gives {:TestVariable a :N997}; r:evidence (
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma11> a r:Extraction; r:gives {{?x0 a :N998} <= {?x0 a :N997}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma12> a r:Inference; r:gives {:TestVariable a :N996}; r:evidence (
  <#lemma14>);
  r:rule <#lemma15>.

<#lemma13> a r:Extraction; r:gives {{?x0 a :N997} <= {?x0 a :N996}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma14> a r:Inference; r:gives {:TestVariable a :N995}; r:evidence (
  <#lemma16>);
  r:rule <#lemma17>.

<#lemma15> a r:Extraction; r:gives {{?x0 a :N996} <= {?x0 a :N995}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma16> a r:Inference; r:gives {:TestVariable a :N994}; r:evidence (
  <#lemma18>);
  r:rule <#lemma19>.

<#lemma17> a r:Extraction; r:gives {{?x0 a :N995} <= {?x0 a :N994}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma18> a r:Inference; r:gives {:TestVariable a :N993}; r:evidence (
  <#lemma20>);
  r:rule <#lemma21>.

<#lemma19> a r:Extraction; r:gives {{?x0 a :N994} <= {?x0 a :N993}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma20> a r:Inference; r:gives {:TestVariable a :N992}; r:evidence (
  <#lemma22>);
  r:rule <#lemma23>.

<#lemma21> a r:Extraction; r:gives {{?x0 a :N993} <= {?x0 a :N992}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma22> a r:Inference; r:gives {:TestVariable a :N991}; r:evidence (
  <#lemma24>);
  r:rule <#lemma25>.

<#lemma23> a r:Extraction; r:gives {{?x0 a :N992} <= {?x0 a :N991}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma24> a r:Inference; r:gives {:TestVariable a :N990}; r:evidence (
  <#lemma26>);
  r:rule <#lemma27>.

<#lemma25> a r:Extraction; r:gives {{?x0 a :N991} <= {?x0 a :N990}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma26> a r:Inference; r:gives {:TestVariable a :N989}; r:evidence (
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma27> a r:Extraction; r:gives {{?x0 a :N990} <= {?x0 a :N989}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma28> a r:Inference; r:gives {:TestVariable a :N988}; r:evidence (
  <#lemma30>);
  r:rule <#lemma31>.

<#lemma29> a r:Extraction; r:gives {{?x0 a :N989} <= {?x0 a :N988}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma30> a r:Inference; r:gives {:TestVariable a :N987}; r:evidence (
  <#lemma32>);
  r:rule <#lemma33>.

<#lemma31> a r:Extraction; r:gives {{?x0 a :N988} <= {?x0 a :N987}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma32> a r:Inference; r:gives {:TestVariable a :N986}; r:evidence (
  <#lemma34>);
  r:rule <#lemma35>.

<#lemma33> a r:Extraction; r:gives {{?x0 a :N987} <= {?x0 a :N986}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma34> a r:Inference; r:gives {:TestVariable a :N985}; r:evidence (
  <#lemma36>);
  r:rule <#lemma37>.

<#lemma35> a r:Extraction; r:gives {{?x0 a :N986} <= {?x0 a :N985}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma36> a r:Inference; r:gives {:TestVariable a :N984}; r:evidence (
  <#lemma38>);
  r:rule <#lemma39>.

<#lemma37> a r:Extraction; r:gives {{?x0 a :N985} <= {?x0 a :N984}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma38> a r:Inference; r:gives {:TestVariable a :N983}; r:evidence (
  <#lemma40>);
  r:rule <#lemma41>.

<#lemma39> a r:Extraction; r:gives {{?x0 a :N984} <= {?x0 a :N983}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma40> a r:Inference; r:gives {:TestVariable a :N982}; r:evidence (
  <#lemma42>);
  r:rule <#lemma43>.

<#lemma41> a r:Extraction; r:gives {{?x0 a :N983} <= {?x0 a :N982}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma42> a r:Inference; r:gives {:TestVariable a :N981}; r:evidence (
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma43> a r:Extraction; r:gives {{?x0 a :N982} <= {?x0 a :N981}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma44> a r:Inference; r:gives {:TestVariable a :N980}; r:evidence (
  <#lemma46>);
  r:rule <#lemma47>.

<#lemma45> a r:Extraction; r:gives {{?x0 a :N981} <= {?x0 a :N980}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma46> a r:Inference; r:gives {:TestVariable a :N979}; r:evidence (
  <#lemma48>);
  r:rule <#lemma49>.

<#lemma47> a r:Extraction; r:gives {{?x0 a :N980} <= {?x0 a :N979}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma48> a r:Inference; r:gives {:TestVariable a :N978}; r:evidence (
  <#lemma50>);
  r:rule <#lemma51>.

<#lemma49> a r:Extraction; r:gives {{?x0 a :N979} <= {?x0 a :N978}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma50> a r:Inference; r:gives {:TestVariable a :N977}; r:evidence (
  <#lemma52>);
  r:rule <#lemma53>.

<#lemma51> a r:Extraction; r:gives {{?x0 a :N978} <= {?x0 a :N977}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma52> a r:Inference; r:gives {:TestVariable a :N976}; r:evidence (
  <#lemma54>);
  r:rule <#lemma55>.

<#lemma53> a r:Extraction; r:gives {{?x0 a :N977} <= {?x0 a :N976}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma54> a r:Inference; r:gives {:TestVariable a :N975}; r:evidence (
  <#lemma56>);
  r:rule <#lemma57>.

<#lemma55> a r:Extraction; r:gives {{?x0 a :N976} <= {?x0 a :N975}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma56> a r:Inference; r:gives {:TestVariable a :N974}; r:evidence (
  <#lemma58>);
  r:rule <#lemma59>.

<#lemma57> a r:Extraction; r:gives {{?x0 a :N975} <= {?x0 a :N974}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma58> a r:Inference; r:gives {:TestVariable a :N973}; r:evidence (
  <#lemma60>);
  r:rule <#lemma61>.

<#lemma59> a r:Extraction; r:gives {{?x0 a :N974} <= {?x0 a :N973}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma60> a r:Inference; r:gives {:TestVariable a :N972}; r:evidence (
  <#lemma62>);
  r:rule <#lemma63>.

<#lemma61> a r:Extraction; r:gives {{?x0 a :N973} <= {?x0 a :N972}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma62> a r:Inference; r:gives {:TestVariable a :N971}; r:evidence (
  <#lemma64>);
  r:rule <#lemma65>.

<#lemma63> a r:Extraction; r:gives {{?x0 a :N972} <= {?x0 a :N971}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma64> a r:Inference; r:gives {:TestVariable a :N970}; r:evidence (
  <#lemma66>);
  r:rule <#lemma67>.

<#lemma65> a r:Extraction; r:gives {{?x0 a :N971} <= {?x0 a :N970}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma66> a r:Inference; r:gives {:TestVariable a :N969}; r:evidence (
  <#lemma68>);
  r:rule <#lemma69>.

<#lemma67> a r:Extraction; r:gives {{?x0 a :N970} <= {?x0 a :N969}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma68> a r:Inference; r:gives {:TestVariable a :N968}; r:evidence (
  <#lemma70>);
  r:rule <#lemma71>.

<#lemma69> a r:Extraction; r:gives {{?x0 a :N969} <= {?x0 a :N968}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma70> a r:Inference; r:gives {:TestVariable a :N967}; r:evidence (
  <#lemma72>);
  r:rule <#lemma73>.

<#lemma71> a r:Extraction; r:gives {{?x0 a :N968} <= {?x0 a :N967}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma72> a r:Inference; r:gives {:TestVariable a :N966}; r:evidence (
  <#lemma74>);
  r:rule <#lemma75>.

<#lemma73> a r:Extraction; r:gives {{?x0 a :N967} <= {?x0 a :N966}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma74> a r:Inference; r:gives {:TestVariable a :N965}; r:evidence (
  <#lemma76>);
  r:rule <#lemma77>.

<#lemma75> a r:Extraction; r:gives {{?x0 a :N966} <= {?x0 a :N965}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma76> a r:Inference; r:gives {:TestVariable a :N964}; r:evidence (
  <#lemma78>);
  r:rule <#lemma79>.

<#lemma77> a r:Extraction; r:gives {{?x0 a :N965} <= {?x0 a :N964}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma78> a r:Inference; r:gives {:TestVariable a :N963}; r:evidence (
  <#lemma80>);
  r:rule <#lemma81>.

<#lemma79> a r:Extraction; r:gives {{?x0 a :N964} <= {?x0 a :N963}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma80> a r:Inference; r:gives {:TestVariable a :N962}; r:evidence (
  <#lemma82>);
  r:rule <#lemma83>.

<#lemma81> a r:Extraction; r:gives {{?x0 a :N963} <= {?x0 a :N962}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma82> a r:Inference; r:gives {:TestVariable a :N961}; r:evidence (
  <#lemma84>);
  r:rule <#lemma85>.

<#lemma83> a r:Extraction; r:gives {{?x0 a :N962} <= {?x0 a :N961}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma84> a r:Inference; r:gives {:TestVariable a :N960}; r:evidence (
  <#lemma86>);
  r:rule <#lemma87>.

<#lemma85> a r:Extraction; r:gives {{?x0 a :N961} <= {?x0 a :N960}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma86> a r:Inference; r:gives {:TestVariable a :N959}; r:evidence (
  <#lemma88>);
  r:rule <#lemma89>.

<#lemma87> a r:Extraction; r:gives {{?x0 a :N960} <= {?x0 a :N959}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma88> a r:Inference; r:gives {:TestVariable a :N958}; r:evidence (
  <#lemma90>);
  r:rule <#lemma91>.

<#lemma89> a r:Extraction; r:gives {{?x0 a :N959} <= {?x0 a :N958}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma90> a r:Inference; r:gives {:TestVariable a :N957}; r:evidence (
  <#lemma92>);
  r:rule <#lemma93>.

<#lemma91> a r:Extraction; r:gives {{?x0 a :N958} <= {?x0 a :N957}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma92> a r:Inference; r:gives {:TestVariable a :N956}; r:evidence (
  <#lemma94>);
  r:rule <#lemma95>.

<#lemma93> a r:Extraction; r:gives {{?x0 a :N957} <= {?x0 a :N956}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma94> a r:Inference; r:gives {:TestVariable a :N955}; r:evidence (
  <#lemma96>);
  r:rule <#lemma97>.

<#lemma95> a r:Extraction; r:gives {{?x0 a :N956} <= {?x0 a :N955}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma96> a r:Inference; r:gives {:TestVariable a :N954}; r:evidence (
  <#lemma98>);
  r:rule <#lemma99>.

<#lemma97> a r:Extraction; r:gives {{?x0 a :N955} <= {?x0 a :N954}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma98> a r:Inference; r:gives {:TestVariable a :N953}; r:evidence (
  <#lemma100>);
  r:rule <#lemma101>.

<#lemma99> a r:Extraction; r:gives {{?x0 a :N954} <= {?x0 a :N953}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma100> a r:Inference; r:gives {:TestVariable a :N952}; r:evidence (
  <#lemma102>);
  r:rule <#lemma103>.

<#lemma101> a r:Extraction; r:gives {{?x0 a :N953} <= {?x0 a :N952}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma102> a r:Inference; r:gives {:TestVariable a :N951}; r:evidence (
  <#lemma104>);
  r:rule <#lemma105>.

<#lemma103> a r:Extraction; r:gives {{?x0 a :N952} <= {?x0 a :N951}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma104> a r:Inference; r:gives {:TestVariable a :N950}; r:evidence (
  <#lemma106>);
  r:rule <#lemma107>.

<#lemma105> a r:Extraction; r:gives {{?x0 a :N951} <= {?x0 a :N950}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma106> a r:Inference; r:gives {:TestVariable a :N949}; r:evidence (
  <#lemma108>);
  r:rule <#lemma109>.

<#lemma107> a r:Extraction; r:gives {{?x0 a :N950} <= {?x0 a :N949}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma108> a r:Inference; r:gives {:TestVariable a :N948}; r:evidence (
  <#lemma110>);
  r:rule <#lemma111>.

<#lemma109> a r:Extraction; r:gives {{?x0 a :N949} <= {?x0 a :N948}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma110> a r:Inference; r:gives {:TestVariable a :N947}; r:evidence (
  <#lemma112>);
  r:rule <#lemma113>.

<#lemma111> a r:Extraction; r:gives {{?x0 a :N948} <= {?x0 a :N947}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma112> a r:Inference; r:gives {:TestVariable a :N946}; r:evidence (
  <#lemma114>);
  r:rule <#lemma115>.

<#lemma113> a r:Extraction; r:gives {{?x0 a :N947} <= {?x0 a :N946}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma114> a r:Inference; r:gives {:TestVariable a :N945}; r:evidence (
  <#lemma116>);
  r:rule <#lemma117>.

<#lemma115> a r:Extraction; r:gives {{?x0 a :N946} <= {?x0 a :N945}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma116> a r:Inference; r:gives {:TestVariable a :N944}; r:evidence (
  <#lemma118>);
  r:rule <#lemma119>.

<#lemma117> a r:Extraction; r:gives {{?x0 a :N945} <= {?x0 a :N944}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma118> a r:Inference; r:gives {:TestVariable a :N943}; r:evidence (
  <#lemma120>);
  r:rule <#lemma121>.

<#lemma119> a r:Extraction; r:gives {{?x0 a :N944} <= {?x0 a :N943}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma120> a r:Inference; r:gives {:TestVariable a :N942}; r:evidence (
  <#lemma122>);
  r:rule <#lemma123>.

<#lemma121> a r:Extraction; r:gives {{?x0 a :N943} <= {?x0 a :N942}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma122> a r:Inference; r:gives {:TestVariable a :N941}; r:evidence (
  <#lemma124>);
  r:rule <#lemma125>.

<#lemma123> a r:Extraction; r:gives {{?x0 a :N942} <= {?x0 a :N941}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma124> a r:Inference; r:gives {:TestVariable a :N940}; r:evidence (
  <#lemma126>);
  r:rule <#lemma127>.

<#lemma125> a r:Extraction; r:gives {{?x0 a :N941} <= {?x0 a :N940}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma126> a r:Inference; r:gives {:TestVariable a :N939}; r:evidence (
  <#lemma128>);
  r:rule <#lemma129>.

<#lemma127> a r:Extraction; r:gives {{?x0 a :N940} <= {?x0 a :N939}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma128> a r:Inference; r:gives {:TestVariable a :N938}; r:evidence (
  <#lemma130>);
  r:rule <#lemma131>.

<#lemma129> a r:Extraction; r:gives {{?x0 a :N939} <= {?x0 a :N938}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma130> a r:Inference; r:gives {:TestVariable a :N937}; r:evidence (
  <#lemma132>);
  r:rule <#lemma133>.

<#lemma131> a r:Extraction; r:gives {{?x0 a :N938} <= {?x0 a :N937}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma132> a r:Inference; r:gives {:TestVariable a :N936}; r:evidence (
  <#lemma134>);
  r:rule <#lemma135>.

<#lemma133> a r:Extraction; r:gives {{?x0 a :N937} <= {?x0 a :N936}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma134> a r:Inference; r:gives {:TestVariable a :N935}; r:evidence (
  <#lemma136>);
  r:rule <#lemma137>.

<#lemma135> a r:Extraction; r:gives {{?x0 a :N936} <= {?x0 a :N935}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma136> a r:Inference; r:gives {:TestVariable a :N934}; r:evidence (
  <#lemma138>);
  r:rule <#lemma139>.

<#lemma137> a r:Extraction; r:gives {{?x0 a :N935} <= {?x0 a :N934}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma138> a r:Inference; r:gives {:TestVariable a :N933}; r:evidence (
  <#lemma140>);
  r:rule <#lemma141>.

<#lemma139> a r:Extraction; r:gives {{?x0 a :N934} <= {?x0 a :N933}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma140> a r:Inference; r:gives {:TestVariable a :N932}; r:evidence (
  <#lemma142>);
  r:rule <#lemma143>.

<#lemma141> a r:Extraction; r:gives {{?x0 a :N933} <= {?x0 a :N932}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma142> a r:Inference; r:gives {:TestVariable a :N931}; r:evidence (
  <#lemma144>);
  r:rule <#lemma145>.

<#lemma143> a r:Extraction; r:gives {{?x0 a :N932} <= {?x0 a :N931}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma144> a r:Inference; r:gives {:TestVariable a :N930}; r:evidence (
  <#lemma146>);
  r:rule <#lemma147>.

<#lemma145> a r:Extraction; r:gives {{?x0 a :N931} <= {?x0 a :N930}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma146> a r:Inference; r:gives {:TestVariable a :N929}; r:evidence (
  <#lemma148>);
  r:rule <#lemma149>.

<#lemma147> a r:Extraction; r:gives {{?x0 a :N930} <= {?x0 a :N929}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma148> a r:Inference; r:gives {:TestVariable a :N928}; r:evidence (
  <#lemma150>);
  r:rule <#lemma151>.

<#lemma149> a r:Extraction; r:gives {{?x0 a :N929} <= {?x0 a :N928}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma150> a r:Inference; r:gives {:TestVariable a :N927}; r:evidence (
  <#lemma152>);
  r:rule <#lemma153>.

<#lemma151> a r:Extraction; r:gives {{?x0 a :N928} <= {?x0 a :N927}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma152> a r:Inference; r:gives {:TestVariable a :N926}; r:evidence (
  <#lemma154>);
  r:rule <#lemma155>.

<#lemma153> a r:Extraction; r:gives {{?x0 a :N927} <= {?x0 a :N926}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma154> a r:Inference; r:gives {:TestVariable a :N925}; r:evidence (
  <#lemma156>);
  r:rule <#lemma157>.

<#lemma155> a r:Extraction; r:gives {{?x0 a :N926} <= {?x0 a :N925}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma156> a r:Inference; r:gives {:TestVariable a :N924}; r:evidence (
  <#lemma158>);
  r:rule <#lemma159>.

<#lemma157> a r:Extraction; r:gives {{?x0 a :N925} <= {?x0 a :N924}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma158> a r:Inference; r:gives {:TestVariable a :N923}; r:evidence (
  <#lemma160>);
  r:rule <#lemma161>.

<#lemma159> a r:Extraction; r:gives {{?x0 a :N924} <= {?x0 a :N923}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma160> a r:Inference; r:gives {:TestVariable a :N922}; r:evidence (
  <#lemma162>);
  r:rule <#lemma163>.

<#lemma161> a r:Extraction; r:gives {{?x0 a :N923} <= {?x0 a :N922}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma162> a r:Inference; r:gives {:TestVariable a :N921}; r:evidence (
  <#lemma164>);
  r:rule <#lemma165>.

<#lemma163> a r:Extraction; r:gives {{?x0 a :N922} <= {?x0 a :N921}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma164> a r:Inference; r:gives {:TestVariable a :N920}; r:evidence (
  <#lemma166>);
  r:rule <#lemma167>.

<#lemma165> a r:Extraction; r:gives {{?x0 a :N921} <= {?x0 a :N920}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma166> a r:Inference; r:gives {:TestVariable a :N919}; r:evidence (
  <#lemma168>);
  r:rule <#lemma169>.

<#lemma167> a r:Extraction; r:gives {{?x0 a :N920} <= {?x0 a :N919}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma168> a r:Inference; r:gives {:TestVariable a :N918}; r:evidence (
  <#lemma170>);
  r:rule <#lemma171>.

<#lemma169> a r:Extraction; r:gives {{?x0 a :N919} <= {?x0 a :N918}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma170> a r:Inference; r:gives {:TestVariable a :N917}; r:evidence (
  <#lemma172>);
  r:rule <#lemma173>.

<#lemma171> a r:Extraction; r:gives {{?x0 a :N918} <= {?x0 a :N917}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma172> a r:Inference; r:gives {:TestVariable a :N916}; r:evidence (
  <#lemma174>);
  r:rule <#lemma175>.

<#lemma173> a r:Extraction; r:gives {{?x0 a :N917} <= {?x0 a :N916}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma174> a r:Inference; r:gives {:TestVariable a :N915}; r:evidence (
  <#lemma176>);
  r:rule <#lemma177>.

<#lemma175> a r:Extraction; r:gives {{?x0 a :N916} <= {?x0 a :N915}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma176> a r:Inference; r:gives {:TestVariable a :N914}; r:evidence (
  <#lemma178>);
  r:rule <#lemma179>.

<#lemma177> a r:Extraction; r:gives {{?x0 a :N915} <= {?x0 a :N914}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma178> a r:Inference; r:gives {:TestVariable a :N913}; r:evidence (
  <#lemma180>);
  r:rule <#lemma181>.

<#lemma179> a r:Extraction; r:gives {{?x0 a :N914} <= {?x0 a :N913}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma180> a r:Inference; r:gives {:TestVariable a :N912}; r:evidence (
  <#lemma182>);
  r:rule <#lemma183>.

<#lemma181> a r:Extraction; r:gives {{?x0 a :N913} <= {?x0 a :N912}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma182> a r:Inference; r:gives {:TestVariable a :N911}; r:evidence (
  <#lemma184>);
  r:rule <#lemma185>.

<#lemma183> a r:Extraction; r:gives {{?x0 a :N912} <= {?x0 a :N911}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma184> a r:Inference; r:gives {:TestVariable a :N910}; r:evidence (
  <#lemma186>);
  r:rule <#lemma187>.

<#lemma185> a r:Extraction; r:gives {{?x0 a :N911} <= {?x0 a :N910}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma186> a r:Inference; r:gives {:TestVariable a :N909}; r:evidence (
  <#lemma188>);
  r:rule <#lemma189>.

<#lemma187> a r:Extraction; r:gives {{?x0 a :N910} <= {?x0 a :N909}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma188> a r:Inference; r:gives {:TestVariable a :N908}; r:evidence (
  <#lemma190>);
  r:rule <#lemma191>.

<#lemma189> a r:Extraction; r:gives {{?x0 a :N909} <= {?x0 a :N908}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma190> a r:Inference; r:gives {:TestVariable a :N907}; r:evidence (
  <#lemma192>);
  r:rule <#lemma193>.

<#lemma191> a r:Extraction; r:gives {{?x0 a :N908} <= {?x0 a :N907}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma192> a r:Inference; r:gives {:TestVariable a :N906}; r:evidence (
  <#lemma194>);
  r:rule <#lemma195>.

<#lemma193> a r:Extraction; r:gives {{?x0 a :N907} <= {?x0 a :N906}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma194> a r:Inference; r:gives {:TestVariable a :N905}; r:evidence (
  <#lemma196>);
  r:rule <#lemma197>.

<#lemma195> a r:Extraction; r:gives {{?x0 a :N906} <= {?x0 a :N905}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma196> a r:Inference; r:gives {:TestVariable a :N904}; r:evidence (
  <#lemma198>);
  r:rule <#lemma199>.

<#lemma197> a r:Extraction; r:gives {{?x0 a :N905} <= {?x0 a :N904}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma198> a r:Inference; r:gives {:TestVariable a :N903}; r:evidence (
  <#lemma200>);
  r:rule <#lemma201>.

<#lemma199> a r:Extraction; r:gives {{?x0 a :N904} <= {?x0 a :N903}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma200> a r:Inference; r:gives {:TestVariable a :N902}; r:evidence (
  <#lemma202>);
  r:rule <#lemma203>.

<#lemma201> a r:Extraction; r:gives {{?x0 a :N903} <= {?x0 a :N902}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma202> a r:Inference; r:gives {:TestVariable a :N901}; r:evidence (
  <#lemma204>);
  r:rule <#lemma205>.

<#lemma203> a r:Extraction; r:gives {{?x0 a :N902} <= {?x0 a :N901}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma204> a r:Inference; r:gives {:TestVariable a :N900}; r:evidence (
  <#lemma206>);
  r:rule <#lemma207>.

<#lemma205> a r:Extraction; r:gives {{?x0 a :N901} <= {?x0 a :N900}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma206> a r:Inference; r:gives {:TestVariable a :N899}; r:evidence (
  <#lemma208>);
  r:rule <#lemma209>.

<#lemma207> a r:Extraction; r:gives {{?x0 a :N900} <= {?x0 a :N899}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma208> a r:Inference; r:gives {:TestVariable a :N898}; r:evidence (
  <#lemma210>);
  r:rule <#lemma211>.

<#lemma209> a r:Extraction; r:gives {{?x0 a :N899} <= {?x0 a :N898}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma210> a r:Inference; r:gives {:TestVariable a :N897}; r:evidence (
  <#lemma212>);
  r:rule <#lemma213>.

<#lemma211> a r:Extraction; r:gives {{?x0 a :N898} <= {?x0 a :N897}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma212> a r:Inference; r:gives {:TestVariable a :N896}; r:evidence (
  <#lemma214>);
  r:rule <#lemma215>.

<#lemma213> a r:Extraction; r:gives {{?x0 a :N897} <= {?x0 a :N896}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma214> a r:Inference; r:gives {:TestVariable a :N895}; r:evidence (
  <#lemma216>);
  r:rule <#lemma217>.

<#lemma215> a r:Extraction; r:gives {{?x0 a :N896} <= {?x0 a :N895}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma216> a r:Inference; r:gives {:TestVariable a :N894}; r:evidence (
  <#lemma218>);
  r:rule <#lemma219>.

<#lemma217> a r:Extraction; r:gives {{?x0 a :N895} <= {?x0 a :N894}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma218> a r:Inference; r:gives {:TestVariable a :N893}; r:evidence (
  <#lemma220>);
  r:rule <#lemma221>.

<#lemma219> a r:Extraction; r:gives {{?x0 a :N894} <= {?x0 a :N893}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma220> a r:Inference; r:gives {:TestVariable a :N892}; r:evidence (
  <#lemma222>);
  r:rule <#lemma223>.

<#lemma221> a r:Extraction; r:gives {{?x0 a :N893} <= {?x0 a :N892}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma222> a r:Inference; r:gives {:TestVariable a :N891}; r:evidence (
  <#lemma224>);
  r:rule <#lemma225>.

<#lemma223> a r:Extraction; r:gives {{?x0 a :N892} <= {?x0 a :N891}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma224> a r:Inference; r:gives {:TestVariable a :N890}; r:evidence (
  <#lemma226>);
  r:rule <#lemma227>.

<#lemma225> a r:Extraction; r:gives {{?x0 a :N891} <= {?x0 a :N890}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma226> a r:Inference; r:gives {:TestVariable a :N889}; r:evidence (
  <#lemma228>);
  r:rule <#lemma229>.

<#lemma227> a r:Extraction; r:gives {{?x0 a :N890} <= {?x0 a :N889}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma228> a r:Inference; r:gives {:TestVariable a :N888}; r:evidence (
  <#lemma230>);
  r:rule <#lemma231>.

<#lemma229> a r:Extraction; r:gives {{?x0 a :N889} <= {?x0 a :N888}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma230> a r:Inference; r:gives {:TestVariable a :N887}; r:evidence (
  <#lemma232>);
  r:rule <#lemma233>.

<#lemma231> a r:Extraction; r:gives {{?x0 a :N888} <= {?x0 a :N887}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma232> a r:Inference; r:gives {:TestVariable a :N886}; r:evidence (
  <#lemma234>);
  r:rule <#lemma235>.

<#lemma233> a r:Extraction; r:gives {{?x0 a :N887} <= {?x0 a :N886}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma234> a r:Inference; r:gives {:TestVariable a :N885}; r:evidence (
  <#lemma236>);
  r:rule <#lemma237>.

<#lemma235> a r:Extraction; r:gives {{?x0 a :N886} <= {?x0 a :N885}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma236> a r:Inference; r:gives {:TestVariable a :N884}; r:evidence (
  <#lemma238>);
  r:rule <#lemma239>.

<#lemma237> a r:Extraction; r:gives {{?x0 a :N885} <= {?x0 a :N884}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma238> a r:Inference; r:gives {:TestVariable a :N883}; r:evidence (
  <#lemma240>);
  r:rule <#lemma241>.

<#lemma239> a r:Extraction; r:gives {{?x0 a :N884} <= {?x0 a :N883}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma240> a r:Inference; r:gives {:TestVariable a :N882}; r:evidence (
  <#lemma242>);
  r:rule <#lemma243>.

<#lemma241> a r:Extraction; r:gives {{?x0 a :N883} <= {?x0 a :N882}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma242> a r:Inference; r:gives {:TestVariable a :N881}; r:evidence (
  <#lemma244>);
  r:rule <#lemma245>.

<#lemma243> a r:Extraction; r:gives {{?x0 a :N882} <= {?x0 a :N881}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma244> a r:Inference; r:gives {:TestVariable a :N880}; r:evidence (
  <#lemma246>);
  r:rule <#lemma247>.

<#lemma245> a r:Extraction; r:gives {{?x0 a :N881} <= {?x0 a :N880}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma246> a r:Inference; r:gives {:TestVariable a :N879}; r:evidence (
  <#lemma248>);
  r:rule <#lemma249>.

<#lemma247> a r:Extraction; r:gives {{?x0 a :N880} <= {?x0 a :N879}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma248> a r:Inference; r:gives {:TestVariable a :N878}; r:evidence (
  <#lemma250>);
  r:rule <#lemma251>.

<#lemma249> a r:Extraction; r:gives {{?x0 a :N879} <= {?x0 a :N878}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma250> a r:Inference; r:gives {:TestVariable a :N877}; r:evidence (
  <#lemma252>);
  r:rule <#lemma253>.

<#lemma251> a r:Extraction; r:gives {{?x0 a :N878} <= {?x0 a :N877}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma252> a r:Inference; r:gives {:TestVariable a :N876}; r:evidence (
  <#lemma254>);
  r:rule <#lemma255>.

<#lemma253> a r:Extraction; r:gives {{?x0 a :N877} <= {?x0 a :N876}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma254> a r:Inference; r:gives {:TestVariable a :N875}; r:evidence (
  <#lemma256>);
  r:rule <#lemma257>.

<#lemma255> a r:Extraction; r:gives {{?x0 a :N876} <= {?x0 a :N875}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma256> a r:Inference; r:gives {:TestVariable a :N874}; r:evidence (
  <#lemma258>);
  r:rule <#lemma259>.

<#lemma257> a r:Extraction; r:gives {{?x0 a :N875} <= {?x0 a :N874}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma258> a r:Inference; r:gives {:TestVariable a :N873}; r:evidence (
  <#lemma260>);
  r:rule <#lemma261>.

<#lemma259> a r:Extraction; r:gives {{?x0 a :N874} <= {?x0 a :N873}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma260> a r:Inference; r:gives {:TestVariable a :N872}; r:evidence (
  <#lemma262>);
  r:rule <#lemma263>.

<#lemma261> a r:Extraction; r:gives {{?x0 a :N873} <= {?x0 a :N872}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma262> a r:Inference; r:gives {:TestVariable a :N871}; r:evidence (
  <#lemma264>);
  r:rule <#lemma265>.

<#lemma263> a r:Extraction; r:gives {{?x0 a :N872} <= {?x0 a :N871}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma264> a r:Inference; r:gives {:TestVariable a :N870}; r:evidence (
  <#lemma266>);
  r:rule <#lemma267>.

<#lemma265> a r:Extraction; r:gives {{?x0 a :N871} <= {?x0 a :N870}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma266> a r:Inference; r:gives {:TestVariable a :N869}; r:evidence (
  <#lemma268>);
  r:rule <#lemma269>.

<#lemma267> a r:Extraction; r:gives {{?x0 a :N870} <= {?x0 a :N869}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma268> a r:Inference; r:gives {:TestVariable a :N868}; r:evidence (
  <#lemma270>);
  r:rule <#lemma271>.

<#lemma269> a r:Extraction; r:gives {{?x0 a :N869} <= {?x0 a :N868}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma270> a r:Inference; r:gives {:TestVariable a :N867}; r:evidence (
  <#lemma272>);
  r:rule <#lemma273>.

<#lemma271> a r:Extraction; r:gives {{?x0 a :N868} <= {?x0 a :N867}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma272> a r:Inference; r:gives {:TestVariable a :N866}; r:evidence (
  <#lemma274>);
  r:rule <#lemma275>.

<#lemma273> a r:Extraction; r:gives {{?x0 a :N867} <= {?x0 a :N866}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma274> a r:Inference; r:gives {:TestVariable a :N865}; r:evidence (
  <#lemma276>);
  r:rule <#lemma277>.

<#lemma275> a r:Extraction; r:gives {{?x0 a :N866} <= {?x0 a :N865}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma276> a r:Inference; r:gives {:TestVariable a :N864}; r:evidence (
  <#lemma278>);
  r:rule <#lemma279>.

<#lemma277> a r:Extraction; r:gives {{?x0 a :N865} <= {?x0 a :N864}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma278> a r:Inference; r:gives {:TestVariable a :N863}; r:evidence (
  <#lemma280>);
  r:rule <#lemma281>.

<#lemma279> a r:Extraction; r:gives {{?x0 a :N864} <= {?x0 a :N863}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma280> a r:Inference; r:gives {:TestVariable a :N862}; r:evidence (
  <#lemma282>);
  r:rule <#lemma283>.

<#lemma281> a r:Extraction; r:gives {{?x0 a :N863} <= {?x0 a :N862}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma282> a r:Inference; r:gives {:TestVariable a :N861}; r:evidence (
  <#lemma284>);
  r:rule <#lemma285>.

<#lemma283> a r:Extraction; r:gives {{?x0 a :N862} <= {?x0 a :N861}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma284> a r:Inference; r:gives {:TestVariable a :N860}; r:evidence (
  <#lemma286>);
  r:rule <#lemma287>.

<#lemma285> a r:Extraction; r:gives {{?x0 a :N861} <= {?x0 a :N860}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma286> a r:Inference; r:gives {:TestVariable a :N859}; r:evidence (
  <#lemma288>);
  r:rule <#lemma289>.

<#lemma287> a r:Extraction; r:gives {{?x0 a :N860} <= {?x0 a :N859}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma288> a r:Inference; r:gives {:TestVariable a :N858}; r:evidence (
  <#lemma290>);
  r:rule <#lemma291>.

<#lemma289> a r:Extraction; r:gives {{?x0 a :N859} <= {?x0 a :N858}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma290> a r:Inference; r:gives {:TestVariable a :N857}; r:evidence (
  <#lemma292>);
  r:rule <#lemma293>.

<#lemma291> a r:Extraction; r:gives {{?x0 a :N858} <= {?x0 a :N857}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma292> a r:Inference; r:gives {:TestVariable a :N856}; r:evidence (
  <#lemma294>);
  r:rule <#lemma295>.

<#lemma293> a r:Extraction; r:gives {{?x0 a :N857} <= {?x0 a :N856}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma294> a r:Inference; r:gives {:TestVariable a :N855}; r:evidence (
  <#lemma296>);
  r:rule <#lemma297>.

<#lemma295> a r:Extraction; r:gives {{?x0 a :N856} <= {?x0 a :N855}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma296> a r:Inference; r:gives {:TestVariable a :N854}; r:evidence (
  <#lemma298>);
  r:rule <#lemma299>.

<#lemma297> a r:Extraction; r:gives {{?x0 a :N855} <= {?x0 a :N854}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma298> a r:Inference; r:gives {:TestVariable a :N853}; r:evidence (
  <#lemma300>);
  r:rule <#lemma301>.

<#lemma299> a r:Extraction; r:gives {{?x0 a :N854} <= {?x0 a :N853}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma300> a r:Inference; r:gives {:TestVariable a :N852}; r:evidence (
  <#lemma302>);
  r:rule <#lemma303>.

<#lemma301> a r:Extraction; r:gives {{?x0 a :N853} <= {?x0 a :N852}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma302> a r:Inference; r:gives {:TestVariable a :N851}; r:evidence (
  <#lemma304>);
  r:rule <#lemma305>.

<#lemma303> a r:Extraction; r:gives {{?x0 a :N852} <= {?x0 a :N851}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma304> a r:Inference; r:gives {:TestVariable a :N850}; r:evidence (
  <#lemma306>);
  r:rule <#lemma307>.

<#lemma305> a r:Extraction; r:gives {{?x0 a :N851} <= {?x0 a :N850}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma306> a r:Inference; r:gives {:TestVariable a :N849}; r:evidence (
  <#lemma308>);
  r:rule <#lemma309>.

<#lemma307> a r:Extraction; r:gives {{?x0 a :N850} <= {?x0 a :N849}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma308> a r:Inference; r:gives {:TestVariable a :N848}; r:evidence (
  <#lemma310>);
  r:rule <#lemma311>.

<#lemma309> a r:Extraction; r:gives {{?x0 a :N849} <= {?x0 a :N848}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma310> a r:Inference; r:gives {:TestVariable a :N847}; r:evidence (
  <#lemma312>);
  r:rule <#lemma313>.

<#lemma311> a r:Extraction; r:gives {{?x0 a :N848} <= {?x0 a :N847}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma312> a r:Inference; r:gives {:TestVariable a :N846}; r:evidence (
  <#lemma314>);
  r:rule <#lemma315>.

<#lemma313> a r:Extraction; r:gives {{?x0 a :N847} <= {?x0 a :N846}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma314> a r:Inference; r:gives {:TestVariable a :N845}; r:evidence (
  <#lemma316>);
  r:rule <#lemma317>.

<#lemma315> a r:Extraction; r:gives {{?x0 a :N846} <= {?x0 a :N845}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma316> a r:Inference; r:gives {:TestVariable a :N844}; r:evidence (
  <#lemma318>);
  r:rule <#lemma319>.

<#lemma317> a r:Extraction; r:gives {{?x0 a :N845} <= {?x0 a :N844}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma318> a r:Inference; r:gives {:TestVariable a :N843}; r:evidence (
  <#lemma320>);
  r:rule <#lemma321>.

<#lemma319> a r:Extraction; r:gives {{?x0 a :N844} <= {?x0 a :N843}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma320> a r:Inference; r:gives {:TestVariable a :N842}; r:evidence (
  <#lemma322>);
  r:rule <#lemma323>.

<#lemma321> a r:Extraction; r:gives {{?x0 a :N843} <= {?x0 a :N842}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma322> a r:Inference; r:gives {:TestVariable a :N841}; r:evidence (
  <#lemma324>);
  r:rule <#lemma325>.

<#lemma323> a r:Extraction; r:gives {{?x0 a :N842} <= {?x0 a :N841}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma324> a r:Inference; r:gives {:TestVariable a :N840}; r:evidence (
  <#lemma326>);
  r:rule <#lemma327>.

<#lemma325> a r:Extraction; r:gives {{?x0 a :N841} <= {?x0 a :N840}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma326> a r:Inference; r:gives {:TestVariable a :N839}; r:evidence (
  <#lemma328>);
  r:rule <#lemma329>.

<#lemma327> a r:Extraction; r:gives {{?x0 a :N840} <= {?x0 a :N839}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma328> a r:Inference; r:gives {:TestVariable a :N838}; r:evidence (
  <#lemma330>);
  r:rule <#lemma331>.

<#lemma329> a r:Extraction; r:gives {{?x0 a :N839} <= {?x0 a :N838}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma330> a r:Inference; r:gives {:TestVariable a :N837}; r:evidence (
  <#lemma332>);
  r:rule <#lemma333>.

<#lemma331> a r:Extraction; r:gives {{?x0 a :N838} <= {?x0 a :N837}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma332> a r:Inference; r:gives {:TestVariable a :N836}; r:evidence (
  <#lemma334>);
  r:rule <#lemma335>.

<#lemma333> a r:Extraction; r:gives {{?x0 a :N837} <= {?x0 a :N836}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma334> a r:Inference; r:gives {:TestVariable a :N835}; r:evidence (
  <#lemma336>);
  r:rule <#lemma337>.

<#lemma335> a r:Extraction; r:gives {{?x0 a :N836} <= {?x0 a :N835}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma336> a r:Inference; r:gives {:TestVariable a :N834}; r:evidence (
  <#lemma338>);
  r:rule <#lemma339>.

<#lemma337> a r:Extraction; r:gives {{?x0 a :N835} <= {?x0 a :N834}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma338> a r:Inference; r:gives {:TestVariable a :N833}; r:evidence (
  <#lemma340>);
  r:rule <#lemma341>.

<#lemma339> a r:Extraction; r:gives {{?x0 a :N834} <= {?x0 a :N833}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma340> a r:Inference; r:gives {:TestVariable a :N832}; r:evidence (
  <#lemma342>);
  r:rule <#lemma343>.

<#lemma341> a r:Extraction; r:gives {{?x0 a :N833} <= {?x0 a :N832}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma342> a r:Inference; r:gives {:TestVariable a :N831}; r:evidence (
  <#lemma344>);
  r:rule <#lemma345>.

<#lemma343> a r:Extraction; r:gives {{?x0 a :N832} <= {?x0 a :N831}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma344> a r:Inference; r:gives {:TestVariable a :N830}; r:evidence (
  <#lemma346>);
  r:rule <#lemma347>.

<#lemma345> a r:Extraction; r:gives {{?x0 a :N831} <= {?x0 a :N830}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma346> a r:Inference; r:gives {:TestVariable a :N829}; r:evidence (
  <#lemma348>);
  r:rule <#lemma349>.

<#lemma347> a r:Extraction; r:gives {{?x0 a :N830} <= {?x0 a :N829}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma348> a r:Inference; r:gives {:TestVariable a :N828}; r:evidence (
  <#lemma350>);
  r:rule <#lemma351>.

<#lemma349> a r:Extraction; r:gives {{?x0 a :N829} <= {?x0 a :N828}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma350> a r:Inference; r:gives {:TestVariable a :N827}; r:evidence (
  <#lemma352>);
  r:rule <#lemma353>.

<#lemma351> a r:Extraction; r:gives {{?x0 a :N828} <= {?x0 a :N827}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma352> a r:Inference; r:gives {:TestVariable a :N826}; r:evidence (
  <#lemma354>);
  r:rule <#lemma355>.

<#lemma353> a r:Extraction; r:gives {{?x0 a :N827} <= {?x0 a :N826}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma354> a r:Inference; r:gives {:TestVariable a :N825}; r:evidence (
  <#lemma356>);
  r:rule <#lemma357>.

<#lemma355> a r:Extraction; r:gives {{?x0 a :N826} <= {?x0 a :N825}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma356> a r:Inference; r:gives {:TestVariable a :N824}; r:evidence (
  <#lemma358>);
  r:rule <#lemma359>.

<#lemma357> a r:Extraction; r:gives {{?x0 a :N825} <= {?x0 a :N824}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma358> a r:Inference; r:gives {:TestVariable a :N823}; r:evidence (
  <#lemma360>);
  r:rule <#lemma361>.

<#lemma359> a r:Extraction; r:gives {{?x0 a :N824} <= {?x0 a :N823}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma360> a r:Inference; r:gives {:TestVariable a :N822}; r:evidence (
  <#lemma362>);
  r:rule <#lemma363>.

<#lemma361> a r:Extraction; r:gives {{?x0 a :N823} <= {?x0 a :N822}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma362> a r:Inference; r:gives {:TestVariable a :N821}; r:evidence (
  <#lemma364>);
  r:rule <#lemma365>.

<#lemma363> a r:Extraction; r:gives {{?x0 a :N822} <= {?x0 a :N821}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma364> a r:Inference; r:gives {:TestVariable a :N820}; r:evidence (
  <#lemma366>);
  r:rule <#lemma367>.

<#lemma365> a r:Extraction; r:gives {{?x0 a :N821} <= {?x0 a :N820}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma366> a r:Inference; r:gives {:TestVariable a :N819}; r:evidence (
  <#lemma368>);
  r:rule <#lemma369>.

<#lemma367> a r:Extraction; r:gives {{?x0 a :N820} <= {?x0 a :N819}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma368> a r:Inference; r:gives {:TestVariable a :N818}; r:evidence (
  <#lemma370>);
  r:rule <#lemma371>.

<#lemma369> a r:Extraction; r:gives {{?x0 a :N819} <= {?x0 a :N818}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma370> a r:Inference; r:gives {:TestVariable a :N817}; r:evidence (
  <#lemma372>);
  r:rule <#lemma373>.

<#lemma371> a r:Extraction; r:gives {{?x0 a :N818} <= {?x0 a :N817}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma372> a r:Inference; r:gives {:TestVariable a :N816}; r:evidence (
  <#lemma374>);
  r:rule <#lemma375>.

<#lemma373> a r:Extraction; r:gives {{?x0 a :N817} <= {?x0 a :N816}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma374> a r:Inference; r:gives {:TestVariable a :N815}; r:evidence (
  <#lemma376>);
  r:rule <#lemma377>.

<#lemma375> a r:Extraction; r:gives {{?x0 a :N816} <= {?x0 a :N815}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma376> a r:Inference; r:gives {:TestVariable a :N814}; r:evidence (
  <#lemma378>);
  r:rule <#lemma379>.

<#lemma377> a r:Extraction; r:gives {{?x0 a :N815} <= {?x0 a :N814}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma378> a r:Inference; r:gives {:TestVariable a :N813}; r:evidence (
  <#lemma380>);
  r:rule <#lemma381>.

<#lemma379> a r:Extraction; r:gives {{?x0 a :N814} <= {?x0 a :N813}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma380> a r:Inference; r:gives {:TestVariable a :N812}; r:evidence (
  <#lemma382>);
  r:rule <#lemma383>.

<#lemma381> a r:Extraction; r:gives {{?x0 a :N813} <= {?x0 a :N812}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma382> a r:Inference; r:gives {:TestVariable a :N811}; r:evidence (
  <#lemma384>);
  r:rule <#lemma385>.

<#lemma383> a r:Extraction; r:gives {{?x0 a :N812} <= {?x0 a :N811}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma384> a r:Inference; r:gives {:TestVariable a :N810}; r:evidence (
  <#lemma386>);
  r:rule <#lemma387>.

<#lemma385> a r:Extraction; r:gives {{?x0 a :N811} <= {?x0 a :N810}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma386> a r:Inference; r:gives {:TestVariable a :N809}; r:evidence (
  <#lemma388>);
  r:rule <#lemma389>.

<#lemma387> a r:Extraction; r:gives {{?x0 a :N810} <= {?x0 a :N809}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma388> a r:Inference; r:gives {:TestVariable a :N808}; r:evidence (
  <#lemma390>);
  r:rule <#lemma391>.

<#lemma389> a r:Extraction; r:gives {{?x0 a :N809} <= {?x0 a :N808}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma390> a r:Inference; r:gives {:TestVariable a :N807}; r:evidence (
  <#lemma392>);
  r:rule <#lemma393>.

<#lemma391> a r:Extraction; r:gives {{?x0 a :N808} <= {?x0 a :N807}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma392> a r:Inference; r:gives {:TestVariable a :N806}; r:evidence (
  <#lemma394>);
  r:rule <#lemma395>.

<#lemma393> a r:Extraction; r:gives {{?x0 a :N807} <= {?x0 a :N806}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma394> a r:Inference; r:gives {:TestVariable a :N805}; r:evidence (
  <#lemma396>);
  r:rule <#lemma397>.

<#lemma395> a r:Extraction; r:gives {{?x0 a :N806} <= {?x0 a :N805}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma396> a r:Inference; r:gives {:TestVariable a :N804}; r:evidence (
  <#lemma398>);
  r:rule <#lemma399>.

<#lemma397> a r:Extraction; r:gives {{?x0 a :N805} <= {?x0 a :N804}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma398> a r:Inference; r:gives {:TestVariable a :N803}; r:evidence (
  <#lemma400>);
  r:rule <#lemma401>.

<#lemma399> a r:Extraction; r:gives {{?x0 a :N804} <= {?x0 a :N803}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma400> a r:Inference; r:gives {:TestVariable a :N802}; r:evidence (
  <#lemma402>);
  r:rule <#lemma403>.

<#lemma401> a r:Extraction; r:gives {{?x0 a :N803} <= {?x0 a :N802}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma402> a r:Inference; r:gives {:TestVariable a :N801}; r:evidence (
  <#lemma404>);
  r:rule <#lemma405>.

<#lemma403> a r:Extraction; r:gives {{?x0 a :N802} <= {?x0 a :N801}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma404> a r:Inference; r:gives {:TestVariable a :N800}; r:evidence (
  <#lemma406>);
  r:rule <#lemma407>.

<#lemma405> a r:Extraction; r:gives {{?x0 a :N801} <= {?x0 a :N800}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma406> a r:Inference; r:gives {:TestVariable a :N799}; r:evidence (
  <#lemma408>);
  r:rule <#lemma409>.

<#lemma407> a r:Extraction; r:gives {{?x0 a :N800} <= {?x0 a :N799}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma408> a r:Inference; r:gives {:TestVariable a :N798}; r:evidence (
  <#lemma410>);
  r:rule <#lemma411>.

<#lemma409> a r:Extraction; r:gives {{?x0 a :N799} <= {?x0 a :N798}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma410> a r:Inference; r:gives {:TestVariable a :N797}; r:evidence (
  <#lemma412>);
  r:rule <#lemma413>.

<#lemma411> a r:Extraction; r:gives {{?x0 a :N798} <= {?x0 a :N797}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma412> a r:Inference; r:gives {:TestVariable a :N796}; r:evidence (
  <#lemma414>);
  r:rule <#lemma415>.

<#lemma413> a r:Extraction; r:gives {{?x0 a :N797} <= {?x0 a :N796}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma414> a r:Inference; r:gives {:TestVariable a :N795}; r:evidence (
  <#lemma416>);
  r:rule <#lemma417>.

<#lemma415> a r:Extraction; r:gives {{?x0 a :N796} <= {?x0 a :N795}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma416> a r:Inference; r:gives {:TestVariable a :N794}; r:evidence (
  <#lemma418>);
  r:rule <#lemma419>.

<#lemma417> a r:Extraction; r:gives {{?x0 a :N795} <= {?x0 a :N794}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma418> a r:Inference; r:gives {:TestVariable a :N793}; r:evidence (
  <#lemma420>);
  r:rule <#lemma421>.

<#lemma419> a r:Extraction; r:gives {{?x0 a :N794} <= {?x0 a :N793}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma420> a r:Inference; r:gives {:TestVariable a :N792}; r:evidence (
  <#lemma422>);
  r:rule <#lemma423>.

<#lemma421> a r:Extraction; r:gives {{?x0 a :N793} <= {?x0 a :N792}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma422> a r:Inference; r:gives {:TestVariable a :N791}; r:evidence (
  <#lemma424>);
  r:rule <#lemma425>.

<#lemma423> a r:Extraction; r:gives {{?x0 a :N792} <= {?x0 a :N791}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma424> a r:Inference; r:gives {:TestVariable a :N790}; r:evidence (
  <#lemma426>);
  r:rule <#lemma427>.

<#lemma425> a r:Extraction; r:gives {{?x0 a :N791} <= {?x0 a :N790}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma426> a r:Inference; r:gives {:TestVariable a :N789}; r:evidence (
  <#lemma428>);
  r:rule <#lemma429>.

<#lemma427> a r:Extraction; r:gives {{?x0 a :N790} <= {?x0 a :N789}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma428> a r:Inference; r:gives {:TestVariable a :N788}; r:evidence (
  <#lemma430>);
  r:rule <#lemma431>.

<#lemma429> a r:Extraction; r:gives {{?x0 a :N789} <= {?x0 a :N788}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma430> a r:Inference; r:gives {:TestVariable a :N787}; r:evidence (
  <#lemma432>);
  r:rule <#lemma433>.

<#lemma431> a r:Extraction; r:gives {{?x0 a :N788} <= {?x0 a :N787}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma432> a r:Inference; r:gives {:TestVariable a :N786}; r:evidence (
  <#lemma434>);
  r:rule <#lemma435>.

<#lemma433> a r:Extraction; r:gives {{?x0 a :N787} <= {?x0 a :N786}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma434> a r:Inference; r:gives {:TestVariable a :N785}; r:evidence (
  <#lemma436>);
  r:rule <#lemma437>.

<#lemma435> a r:Extraction; r:gives {{?x0 a :N786} <= {?x0 a :N785}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma436> a r:Inference; r:gives {:TestVariable a :N784}; r:evidence (
  <#lemma438>);
  r:rule <#lemma439>.

<#lemma437> a r:Extraction; r:gives {{?x0 a :N785} <= {?x0 a :N784}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma438> a r:Inference; r:gives {:TestVariable a :N783}; r:evidence (
  <#lemma440>);
  r:rule <#lemma441>.

<#lemma439> a r:Extraction; r:gives {{?x0 a :N784} <= {?x0 a :N783}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma440> a r:Inference; r:gives {:TestVariable a :N782}; r:evidence (
  <#lemma442>);
  r:rule <#lemma443>.

<#lemma441> a r:Extraction; r:gives {{?x0 a :N783} <= {?x0 a :N782}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma442> a r:Inference; r:gives {:TestVariable a :N781}; r:evidence (
  <#lemma444>);
  r:rule <#lemma445>.

<#lemma443> a r:Extraction; r:gives {{?x0 a :N782} <= {?x0 a :N781}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma444> a r:Inference; r:gives {:TestVariable a :N780}; r:evidence (
  <#lemma446>);
  r:rule <#lemma447>.

<#lemma445> a r:Extraction; r:gives {{?x0 a :N781} <= {?x0 a :N780}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma446> a r:Inference; r:gives {:TestVariable a :N779}; r:evidence (
  <#lemma448>);
  r:rule <#lemma449>.

<#lemma447> a r:Extraction; r:gives {{?x0 a :N780} <= {?x0 a :N779}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma448> a r:Inference; r:gives {:TestVariable a :N778}; r:evidence (
  <#lemma450>);
  r:rule <#lemma451>.

<#lemma449> a r:Extraction; r:gives {{?x0 a :N779} <= {?x0 a :N778}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma450> a r:Inference; r:gives {:TestVariable a :N777}; r:evidence (
  <#lemma452>);
  r:rule <#lemma453>.

<#lemma451> a r:Extraction; r:gives {{?x0 a :N778} <= {?x0 a :N777}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma452> a r:Inference; r:gives {:TestVariable a :N776}; r:evidence (
  <#lemma454>);
  r:rule <#lemma455>.

<#lemma453> a r:Extraction; r:gives {{?x0 a :N777} <= {?x0 a :N776}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma454> a r:Inference; r:gives {:TestVariable a :N775}; r:evidence (
  <#lemma456>);
  r:rule <#lemma457>.

<#lemma455> a r:Extraction; r:gives {{?x0 a :N776} <= {?x0 a :N775}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma456> a r:Inference; r:gives {:TestVariable a :N774}; r:evidence (
  <#lemma458>);
  r:rule <#lemma459>.

<#lemma457> a r:Extraction; r:gives {{?x0 a :N775} <= {?x0 a :N774}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma458> a r:Inference; r:gives {:TestVariable a :N773}; r:evidence (
  <#lemma460>);
  r:rule <#lemma461>.

<#lemma459> a r:Extraction; r:gives {{?x0 a :N774} <= {?x0 a :N773}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma460> a r:Inference; r:gives {:TestVariable a :N772}; r:evidence (
  <#lemma462>);
  r:rule <#lemma463>.

<#lemma461> a r:Extraction; r:gives {{?x0 a :N773} <= {?x0 a :N772}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma462> a r:Inference; r:gives {:TestVariable a :N771}; r:evidence (
  <#lemma464>);
  r:rule <#lemma465>.

<#lemma463> a r:Extraction; r:gives {{?x0 a :N772} <= {?x0 a :N771}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma464> a r:Inference; r:gives {:TestVariable a :N770}; r:evidence (
  <#lemma466>);
  r:rule <#lemma467>.

<#lemma465> a r:Extraction; r:gives {{?x0 a :N771} <= {?x0 a :N770}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma466> a r:Inference; r:gives {:TestVariable a :N769}; r:evidence (
  <#lemma468>);
  r:rule <#lemma469>.

<#lemma467> a r:Extraction; r:gives {{?x0 a :N770} <= {?x0 a :N769}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma468> a r:Inference; r:gives {:TestVariable a :N768}; r:evidence (
  <#lemma470>);
  r:rule <#lemma471>.

<#lemma469> a r:Extraction; r:gives {{?x0 a :N769} <= {?x0 a :N768}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma470> a r:Inference; r:gives {:TestVariable a :N767}; r:evidence (
  <#lemma472>);
  r:rule <#lemma473>.

<#lemma471> a r:Extraction; r:gives {{?x0 a :N768} <= {?x0 a :N767}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma472> a r:Inference; r:gives {:TestVariable a :N766}; r:evidence (
  <#lemma474>);
  r:rule <#lemma475>.

<#lemma473> a r:Extraction; r:gives {{?x0 a :N767} <= {?x0 a :N766}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma474> a r:Inference; r:gives {:TestVariable a :N765}; r:evidence (
  <#lemma476>);
  r:rule <#lemma477>.

<#lemma475> a r:Extraction; r:gives {{?x0 a :N766} <= {?x0 a :N765}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma476> a r:Inference; r:gives {:TestVariable a :N764}; r:evidence (
  <#lemma478>);
  r:rule <#lemma479>.

<#lemma477> a r:Extraction; r:gives {{?x0 a :N765} <= {?x0 a :N764}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma478> a r:Inference; r:gives {:TestVariable a :N763}; r:evidence (
  <#lemma480>);
  r:rule <#lemma481>.

<#lemma479> a r:Extraction; r:gives {{?x0 a :N764} <= {?x0 a :N763}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma480> a r:Inference; r:gives {:TestVariable a :N762}; r:evidence (
  <#lemma482>);
  r:rule <#lemma483>.

<#lemma481> a r:Extraction; r:gives {{?x0 a :N763} <= {?x0 a :N762}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma482> a r:Inference; r:gives {:TestVariable a :N761}; r:evidence (
  <#lemma484>);
  r:rule <#lemma485>.

<#lemma483> a r:Extraction; r:gives {{?x0 a :N762} <= {?x0 a :N761}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma484> a r:Inference; r:gives {:TestVariable a :N760}; r:evidence (
  <#lemma486>);
  r:rule <#lemma487>.

<#lemma485> a r:Extraction; r:gives {{?x0 a :N761} <= {?x0 a :N760}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma486> a r:Inference; r:gives {:TestVariable a :N759}; r:evidence (
  <#lemma488>);
  r:rule <#lemma489>.

<#lemma487> a r:Extraction; r:gives {{?x0 a :N760} <= {?x0 a :N759}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma488> a r:Inference; r:gives {:TestVariable a :N758}; r:evidence (
  <#lemma490>);
  r:rule <#lemma491>.

<#lemma489> a r:Extraction; r:gives {{?x0 a :N759} <= {?x0 a :N758}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma490> a r:Inference; r:gives {:TestVariable a :N757}; r:evidence (
  <#lemma492>);
  r:rule <#lemma493>.

<#lemma491> a r:Extraction; r:gives {{?x0 a :N758} <= {?x0 a :N757}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma492> a r:Inference; r:gives {:TestVariable a :N756}; r:evidence (
  <#lemma494>);
  r:rule <#lemma495>.

<#lemma493> a r:Extraction; r:gives {{?x0 a :N757} <= {?x0 a :N756}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma494> a r:Inference; r:gives {:TestVariable a :N755}; r:evidence (
  <#lemma496>);
  r:rule <#lemma497>.

<#lemma495> a r:Extraction; r:gives {{?x0 a :N756} <= {?x0 a :N755}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma496> a r:Inference; r:gives {:TestVariable a :N754}; r:evidence (
  <#lemma498>);
  r:rule <#lemma499>.

<#lemma497> a r:Extraction; r:gives {{?x0 a :N755} <= {?x0 a :N754}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma498> a r:Inference; r:gives {:TestVariable a :N753}; r:evidence (
  <#lemma500>);
  r:rule <#lemma501>.

<#lemma499> a r:Extraction; r:gives {{?x0 a :N754} <= {?x0 a :N753}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma500> a r:Inference; r:gives {:TestVariable a :N752}; r:evidence (
  <#lemma502>);
  r:rule <#lemma503>.

<#lemma501> a r:Extraction; r:gives {{?x0 a :N753} <= {?x0 a :N752}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma502> a r:Inference; r:gives {:TestVariable a :N751}; r:evidence (
  <#lemma504>);
  r:rule <#lemma505>.

<#lemma503> a r:Extraction; r:gives {{?x0 a :N752} <= {?x0 a :N751}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma504> a r:Inference; r:gives {:TestVariable a :N750}; r:evidence (
  <#lemma506>);
  r:rule <#lemma507>.

<#lemma505> a r:Extraction; r:gives {{?x0 a :N751} <= {?x0 a :N750}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma506> a r:Inference; r:gives {:TestVariable a :N749}; r:evidence (
  <#lemma508>);
  r:rule <#lemma509>.

<#lemma507> a r:Extraction; r:gives {{?x0 a :N750} <= {?x0 a :N749}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma508> a r:Inference; r:gives {:TestVariable a :N748}; r:evidence (
  <#lemma510>);
  r:rule <#lemma511>.

<#lemma509> a r:Extraction; r:gives {{?x0 a :N749} <= {?x0 a :N748}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma510> a r:Inference; r:gives {:TestVariable a :N747}; r:evidence (
  <#lemma512>);
  r:rule <#lemma513>.

<#lemma511> a r:Extraction; r:gives {{?x0 a :N748} <= {?x0 a :N747}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma512> a r:Inference; r:gives {:TestVariable a :N746}; r:evidence (
  <#lemma514>);
  r:rule <#lemma515>.

<#lemma513> a r:Extraction; r:gives {{?x0 a :N747} <= {?x0 a :N746}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma514> a r:Inference; r:gives {:TestVariable a :N745}; r:evidence (
  <#lemma516>);
  r:rule <#lemma517>.

<#lemma515> a r:Extraction; r:gives {{?x0 a :N746} <= {?x0 a :N745}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma516> a r:Inference; r:gives {:TestVariable a :N744}; r:evidence (
  <#lemma518>);
  r:rule <#lemma519>.

<#lemma517> a r:Extraction; r:gives {{?x0 a :N745} <= {?x0 a :N744}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma518> a r:Inference; r:gives {:TestVariable a :N743}; r:evidence (
  <#lemma520>);
  r:rule <#lemma521>.

<#lemma519> a r:Extraction; r:gives {{?x0 a :N744} <= {?x0 a :N743}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma520> a r:Inference; r:gives {:TestVariable a :N742}; r:evidence (
  <#lemma522>);
  r:rule <#lemma523>.

<#lemma521> a r:Extraction; r:gives {{?x0 a :N743} <= {?x0 a :N742}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma522> a r:Inference; r:gives {:TestVariable a :N741}; r:evidence (
  <#lemma524>);
  r:rule <#lemma525>.

<#lemma523> a r:Extraction; r:gives {{?x0 a :N742} <= {?x0 a :N741}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma524> a r:Inference; r:gives {:TestVariable a :N740}; r:evidence (
  <#lemma526>);
  r:rule <#lemma527>.

<#lemma525> a r:Extraction; r:gives {{?x0 a :N741} <= {?x0 a :N740}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma526> a r:Inference; r:gives {:TestVariable a :N739}; r:evidence (
  <#lemma528>);
  r:rule <#lemma529>.

<#lemma527> a r:Extraction; r:gives {{?x0 a :N740} <= {?x0 a :N739}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma528> a r:Inference; r:gives {:TestVariable a :N738}; r:evidence (
  <#lemma530>);
  r:rule <#lemma531>.

<#lemma529> a r:Extraction; r:gives {{?x0 a :N739} <= {?x0 a :N738}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma530> a r:Inference; r:gives {:TestVariable a :N737}; r:evidence (
  <#lemma532>);
  r:rule <#lemma533>.

<#lemma531> a r:Extraction; r:gives {{?x0 a :N738} <= {?x0 a :N737}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma532> a r:Inference; r:gives {:TestVariable a :N736}; r:evidence (
  <#lemma534>);
  r:rule <#lemma535>.

<#lemma533> a r:Extraction; r:gives {{?x0 a :N737} <= {?x0 a :N736}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma534> a r:Inference; r:gives {:TestVariable a :N735}; r:evidence (
  <#lemma536>);
  r:rule <#lemma537>.

<#lemma535> a r:Extraction; r:gives {{?x0 a :N736} <= {?x0 a :N735}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma536> a r:Inference; r:gives {:TestVariable a :N734}; r:evidence (
  <#lemma538>);
  r:rule <#lemma539>.

<#lemma537> a r:Extraction; r:gives {{?x0 a :N735} <= {?x0 a :N734}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma538> a r:Inference; r:gives {:TestVariable a :N733}; r:evidence (
  <#lemma540>);
  r:rule <#lemma541>.

<#lemma539> a r:Extraction; r:gives {{?x0 a :N734} <= {?x0 a :N733}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma540> a r:Inference; r:gives {:TestVariable a :N732}; r:evidence (
  <#lemma542>);
  r:rule <#lemma543>.

<#lemma541> a r:Extraction; r:gives {{?x0 a :N733} <= {?x0 a :N732}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma542> a r:Inference; r:gives {:TestVariable a :N731}; r:evidence (
  <#lemma544>);
  r:rule <#lemma545>.

<#lemma543> a r:Extraction; r:gives {{?x0 a :N732} <= {?x0 a :N731}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma544> a r:Inference; r:gives {:TestVariable a :N730}; r:evidence (
  <#lemma546>);
  r:rule <#lemma547>.

<#lemma545> a r:Extraction; r:gives {{?x0 a :N731} <= {?x0 a :N730}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma546> a r:Inference; r:gives {:TestVariable a :N729}; r:evidence (
  <#lemma548>);
  r:rule <#lemma549>.

<#lemma547> a r:Extraction; r:gives {{?x0 a :N730} <= {?x0 a :N729}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma548> a r:Inference; r:gives {:TestVariable a :N728}; r:evidence (
  <#lemma550>);
  r:rule <#lemma551>.

<#lemma549> a r:Extraction; r:gives {{?x0 a :N729} <= {?x0 a :N728}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma550> a r:Inference; r:gives {:TestVariable a :N727}; r:evidence (
  <#lemma552>);
  r:rule <#lemma553>.

<#lemma551> a r:Extraction; r:gives {{?x0 a :N728} <= {?x0 a :N727}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma552> a r:Inference; r:gives {:TestVariable a :N726}; r:evidence (
  <#lemma554>);
  r:rule <#lemma555>.

<#lemma553> a r:Extraction; r:gives {{?x0 a :N727} <= {?x0 a :N726}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma554> a r:Inference; r:gives {:TestVariable a :N725}; r:evidence (
  <#lemma556>);
  r:rule <#lemma557>.

<#lemma555> a r:Extraction; r:gives {{?x0 a :N726} <= {?x0 a :N725}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma556> a r:Inference; r:gives {:TestVariable a :N724}; r:evidence (
  <#lemma558>);
  r:rule <#lemma559>.

<#lemma557> a r:Extraction; r:gives {{?x0 a :N725} <= {?x0 a :N724}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma558> a r:Inference; r:gives {:TestVariable a :N723}; r:evidence (
  <#lemma560>);
  r:rule <#lemma561>.

<#lemma559> a r:Extraction; r:gives {{?x0 a :N724} <= {?x0 a :N723}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma560> a r:Inference; r:gives {:TestVariable a :N722}; r:evidence (
  <#lemma562>);
  r:rule <#lemma563>.

<#lemma561> a r:Extraction; r:gives {{?x0 a :N723} <= {?x0 a :N722}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma562> a r:Inference; r:gives {:TestVariable a :N721}; r:evidence (
  <#lemma564>);
  r:rule <#lemma565>.

<#lemma563> a r:Extraction; r:gives {{?x0 a :N722} <= {?x0 a :N721}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma564> a r:Inference; r:gives {:TestVariable a :N720}; r:evidence (
  <#lemma566>);
  r:rule <#lemma567>.

<#lemma565> a r:Extraction; r:gives {{?x0 a :N721} <= {?x0 a :N720}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma566> a r:Inference; r:gives {:TestVariable a :N719}; r:evidence (
  <#lemma568>);
  r:rule <#lemma569>.

<#lemma567> a r:Extraction; r:gives {{?x0 a :N720} <= {?x0 a :N719}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma568> a r:Inference; r:gives {:TestVariable a :N718}; r:evidence (
  <#lemma570>);
  r:rule <#lemma571>.

<#lemma569> a r:Extraction; r:gives {{?x0 a :N719} <= {?x0 a :N718}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma570> a r:Inference; r:gives {:TestVariable a :N717}; r:evidence (
  <#lemma572>);
  r:rule <#lemma573>.

<#lemma571> a r:Extraction; r:gives {{?x0 a :N718} <= {?x0 a :N717}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma572> a r:Inference; r:gives {:TestVariable a :N716}; r:evidence (
  <#lemma574>);
  r:rule <#lemma575>.

<#lemma573> a r:Extraction; r:gives {{?x0 a :N717} <= {?x0 a :N716}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma574> a r:Inference; r:gives {:TestVariable a :N715}; r:evidence (
  <#lemma576>);
  r:rule <#lemma577>.

<#lemma575> a r:Extraction; r:gives {{?x0 a :N716} <= {?x0 a :N715}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma576> a r:Inference; r:gives {:TestVariable a :N714}; r:evidence (
  <#lemma578>);
  r:rule <#lemma579>.

<#lemma577> a r:Extraction; r:gives {{?x0 a :N715} <= {?x0 a :N714}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma578> a r:Inference; r:gives {:TestVariable a :N713}; r:evidence (
  <#lemma580>);
  r:rule <#lemma581>.

<#lemma579> a r:Extraction; r:gives {{?x0 a :N714} <= {?x0 a :N713}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma580> a r:Inference; r:gives {:TestVariable a :N712}; r:evidence (
  <#lemma582>);
  r:rule <#lemma583>.

<#lemma581> a r:Extraction; r:gives {{?x0 a :N713} <= {?x0 a :N712}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma582> a r:Inference; r:gives {:TestVariable a :N711}; r:evidence (
  <#lemma584>);
  r:rule <#lemma585>.

<#lemma583> a r:Extraction; r:gives {{?x0 a :N712} <= {?x0 a :N711}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma584> a r:Inference; r:gives {:TestVariable a :N710}; r:evidence (
  <#lemma586>);
  r:rule <#lemma587>.

<#lemma585> a r:Extraction; r:gives {{?x0 a :N711} <= {?x0 a :N710}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma586> a r:Inference; r:gives {:TestVariable a :N709}; r:evidence (
  <#lemma588>);
  r:rule <#lemma589>.

<#lemma587> a r:Extraction; r:gives {{?x0 a :N710} <= {?x0 a :N709}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma588> a r:Inference; r:gives {:TestVariable a :N708}; r:evidence (
  <#lemma590>);
  r:rule <#lemma591>.

<#lemma589> a r:Extraction; r:gives {{?x0 a :N709} <= {?x0 a :N708}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma590> a r:Inference; r:gives {:TestVariable a :N707}; r:evidence (
  <#lemma592>);
  r:rule <#lemma593>.

<#lemma591> a r:Extraction; r:gives {{?x0 a :N708} <= {?x0 a :N707}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma592> a r:Inference; r:gives {:TestVariable a :N706}; r:evidence (
  <#lemma594>);
  r:rule <#lemma595>.

<#lemma593> a r:Extraction; r:gives {{?x0 a :N707} <= {?x0 a :N706}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma594> a r:Inference; r:gives {:TestVariable a :N705}; r:evidence (
  <#lemma596>);
  r:rule <#lemma597>.

<#lemma595> a r:Extraction; r:gives {{?x0 a :N706} <= {?x0 a :N705}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma596> a r:Inference; r:gives {:TestVariable a :N704}; r:evidence (
  <#lemma598>);
  r:rule <#lemma599>.

<#lemma597> a r:Extraction; r:gives {{?x0 a :N705} <= {?x0 a :N704}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma598> a r:Inference; r:gives {:TestVariable a :N703}; r:evidence (
  <#lemma600>);
  r:rule <#lemma601>.

<#lemma599> a r:Extraction; r:gives {{?x0 a :N704} <= {?x0 a :N703}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma600> a r:Inference; r:gives {:TestVariable a :N702}; r:evidence (
  <#lemma602>);
  r:rule <#lemma603>.

<#lemma601> a r:Extraction; r:gives {{?x0 a :N703} <= {?x0 a :N702}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma602> a r:Inference; r:gives {:TestVariable a :N701}; r:evidence (
  <#lemma604>);
  r:rule <#lemma605>.

<#lemma603> a r:Extraction; r:gives {{?x0 a :N702} <= {?x0 a :N701}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma604> a r:Inference; r:gives {:TestVariable a :N700}; r:evidence (
  <#lemma606>);
  r:rule <#lemma607>.

<#lemma605> a r:Extraction; r:gives {{?x0 a :N701} <= {?x0 a :N700}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma606> a r:Inference; r:gives {:TestVariable a :N699}; r:evidence (
  <#lemma608>);
  r:rule <#lemma609>.

<#lemma607> a r:Extraction; r:gives {{?x0 a :N700} <= {?x0 a :N699}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma608> a r:Inference; r:gives {:TestVariable a :N698}; r:evidence (
  <#lemma610>);
  r:rule <#lemma611>.

<#lemma609> a r:Extraction; r:gives {{?x0 a :N699} <= {?x0 a :N698}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma610> a r:Inference; r:gives {:TestVariable a :N697}; r:evidence (
  <#lemma612>);
  r:rule <#lemma613>.

<#lemma611> a r:Extraction; r:gives {{?x0 a :N698} <= {?x0 a :N697}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma612> a r:Inference; r:gives {:TestVariable a :N696}; r:evidence (
  <#lemma614>);
  r:rule <#lemma615>.

<#lemma613> a r:Extraction; r:gives {{?x0 a :N697} <= {?x0 a :N696}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma614> a r:Inference; r:gives {:TestVariable a :N695}; r:evidence (
  <#lemma616>);
  r:rule <#lemma617>.

<#lemma615> a r:Extraction; r:gives {{?x0 a :N696} <= {?x0 a :N695}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma616> a r:Inference; r:gives {:TestVariable a :N694}; r:evidence (
  <#lemma618>);
  r:rule <#lemma619>.

<#lemma617> a r:Extraction; r:gives {{?x0 a :N695} <= {?x0 a :N694}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma618> a r:Inference; r:gives {:TestVariable a :N693}; r:evidence (
  <#lemma620>);
  r:rule <#lemma621>.

<#lemma619> a r:Extraction; r:gives {{?x0 a :N694} <= {?x0 a :N693}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma620> a r:Inference; r:gives {:TestVariable a :N692}; r:evidence (
  <#lemma622>);
  r:rule <#lemma623>.

<#lemma621> a r:Extraction; r:gives {{?x0 a :N693} <= {?x0 a :N692}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma622> a r:Inference; r:gives {:TestVariable a :N691}; r:evidence (
  <#lemma624>);
  r:rule <#lemma625>.

<#lemma623> a r:Extraction; r:gives {{?x0 a :N692} <= {?x0 a :N691}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma624> a r:Inference; r:gives {:TestVariable a :N690}; r:evidence (
  <#lemma626>);
  r:rule <#lemma627>.

<#lemma625> a r:Extraction; r:gives {{?x0 a :N691} <= {?x0 a :N690}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma626> a r:Inference; r:gives {:TestVariable a :N689}; r:evidence (
  <#lemma628>);
  r:rule <#lemma629>.

<#lemma627> a r:Extraction; r:gives {{?x0 a :N690} <= {?x0 a :N689}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma628> a r:Inference; r:gives {:TestVariable a :N688}; r:evidence (
  <#lemma630>);
  r:rule <#lemma631>.

<#lemma629> a r:Extraction; r:gives {{?x0 a :N689} <= {?x0 a :N688}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma630> a r:Inference; r:gives {:TestVariable a :N687}; r:evidence (
  <#lemma632>);
  r:rule <#lemma633>.

<#lemma631> a r:Extraction; r:gives {{?x0 a :N688} <= {?x0 a :N687}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma632> a r:Inference; r:gives {:TestVariable a :N686}; r:evidence (
  <#lemma634>);
  r:rule <#lemma635>.

<#lemma633> a r:Extraction; r:gives {{?x0 a :N687} <= {?x0 a :N686}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma634> a r:Inference; r:gives {:TestVariable a :N685}; r:evidence (
  <#lemma636>);
  r:rule <#lemma637>.

<#lemma635> a r:Extraction; r:gives {{?x0 a :N686} <= {?x0 a :N685}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma636> a r:Inference; r:gives {:TestVariable a :N684}; r:evidence (
  <#lemma638>);
  r:rule <#lemma639>.

<#lemma637> a r:Extraction; r:gives {{?x0 a :N685} <= {?x0 a :N684}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma638> a r:Inference; r:gives {:TestVariable a :N683}; r:evidence (
  <#lemma640>);
  r:rule <#lemma641>.

<#lemma639> a r:Extraction; r:gives {{?x0 a :N684} <= {?x0 a :N683}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma640> a r:Inference; r:gives {:TestVariable a :N682}; r:evidence (
  <#lemma642>);
  r:rule <#lemma643>.

<#lemma641> a r:Extraction; r:gives {{?x0 a :N683} <= {?x0 a :N682}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma642> a r:Inference; r:gives {:TestVariable a :N681}; r:evidence (
  <#lemma644>);
  r:rule <#lemma645>.

<#lemma643> a r:Extraction; r:gives {{?x0 a :N682} <= {?x0 a :N681}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma644> a r:Inference; r:gives {:TestVariable a :N680}; r:evidence (
  <#lemma646>);
  r:rule <#lemma647>.

<#lemma645> a r:Extraction; r:gives {{?x0 a :N681} <= {?x0 a :N680}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma646> a r:Inference; r:gives {:TestVariable a :N679}; r:evidence (
  <#lemma648>);
  r:rule <#lemma649>.

<#lemma647> a r:Extraction; r:gives {{?x0 a :N680} <= {?x0 a :N679}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma648> a r:Inference; r:gives {:TestVariable a :N678}; r:evidence (
  <#lemma650>);
  r:rule <#lemma651>.

<#lemma649> a r:Extraction; r:gives {{?x0 a :N679} <= {?x0 a :N678}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma650> a r:Inference; r:gives {:TestVariable a :N677}; r:evidence (
  <#lemma652>);
  r:rule <#lemma653>.

<#lemma651> a r:Extraction; r:gives {{?x0 a :N678} <= {?x0 a :N677}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma652> a r:Inference; r:gives {:TestVariable a :N676}; r:evidence (
  <#lemma654>);
  r:rule <#lemma655>.

<#lemma653> a r:Extraction; r:gives {{?x0 a :N677} <= {?x0 a :N676}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma654> a r:Inference; r:gives {:TestVariable a :N675}; r:evidence (
  <#lemma656>);
  r:rule <#lemma657>.

<#lemma655> a r:Extraction; r:gives {{?x0 a :N676} <= {?x0 a :N675}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma656> a r:Inference; r:gives {:TestVariable a :N674}; r:evidence (
  <#lemma658>);
  r:rule <#lemma659>.

<#lemma657> a r:Extraction; r:gives {{?x0 a :N675} <= {?x0 a :N674}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma658> a r:Inference; r:gives {:TestVariable a :N673}; r:evidence (
  <#lemma660>);
  r:rule <#lemma661>.

<#lemma659> a r:Extraction; r:gives {{?x0 a :N674} <= {?x0 a :N673}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma660> a r:Inference; r:gives {:TestVariable a :N672}; r:evidence (
  <#lemma662>);
  r:rule <#lemma663>.

<#lemma661> a r:Extraction; r:gives {{?x0 a :N673} <= {?x0 a :N672}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma662> a r:Inference; r:gives {:TestVariable a :N671}; r:evidence (
  <#lemma664>);
  r:rule <#lemma665>.

<#lemma663> a r:Extraction; r:gives {{?x0 a :N672} <= {?x0 a :N671}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma664> a r:Inference; r:gives {:TestVariable a :N670}; r:evidence (
  <#lemma666>);
  r:rule <#lemma667>.

<#lemma665> a r:Extraction; r:gives {{?x0 a :N671} <= {?x0 a :N670}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma666> a r:Inference; r:gives {:TestVariable a :N669}; r:evidence (
  <#lemma668>);
  r:rule <#lemma669>.

<#lemma667> a r:Extraction; r:gives {{?x0 a :N670} <= {?x0 a :N669}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma668> a r:Inference; r:gives {:TestVariable a :N668}; r:evidence (
  <#lemma670>);
  r:rule <#lemma671>.

<#lemma669> a r:Extraction; r:gives {{?x0 a :N669} <= {?x0 a :N668}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma670> a r:Inference; r:gives {:TestVariable a :N667}; r:evidence (
  <#lemma672>);
  r:rule <#lemma673>.

<#lemma671> a r:Extraction; r:gives {{?x0 a :N668} <= {?x0 a :N667}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma672> a r:Inference; r:gives {:TestVariable a :N666}; r:evidence (
  <#lemma674>);
  r:rule <#lemma675>.

<#lemma673> a r:Extraction; r:gives {{?x0 a :N667} <= {?x0 a :N666}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma674> a r:Inference; r:gives {:TestVariable a :N665}; r:evidence (
  <#lemma676>);
  r:rule <#lemma677>.

<#lemma675> a r:Extraction; r:gives {{?x0 a :N666} <= {?x0 a :N665}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma676> a r:Inference; r:gives {:TestVariable a :N664}; r:evidence (
  <#lemma678>);
  r:rule <#lemma679>.

<#lemma677> a r:Extraction; r:gives {{?x0 a :N665} <= {?x0 a :N664}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma678> a r:Inference; r:gives {:TestVariable a :N663}; r:evidence (
  <#lemma680>);
  r:rule <#lemma681>.

<#lemma679> a r:Extraction; r:gives {{?x0 a :N664} <= {?x0 a :N663}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma680> a r:Inference; r:gives {:TestVariable a :N662}; r:evidence (
  <#lemma682>);
  r:rule <#lemma683>.

<#lemma681> a r:Extraction; r:gives {{?x0 a :N663} <= {?x0 a :N662}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma682> a r:Inference; r:gives {:TestVariable a :N661}; r:evidence (
  <#lemma684>);
  r:rule <#lemma685>.

<#lemma683> a r:Extraction; r:gives {{?x0 a :N662} <= {?x0 a :N661}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma684> a r:Inference; r:gives {:TestVariable a :N660}; r:evidence (
  <#lemma686>);
  r:rule <#lemma687>.

<#lemma685> a r:Extraction; r:gives {{?x0 a :N661} <= {?x0 a :N660}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma686> a r:Inference; r:gives {:TestVariable a :N659}; r:evidence (
  <#lemma688>);
  r:rule <#lemma689>.

<#lemma687> a r:Extraction; r:gives {{?x0 a :N660} <= {?x0 a :N659}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma688> a r:Inference; r:gives {:TestVariable a :N658}; r:evidence (
  <#lemma690>);
  r:rule <#lemma691>.

<#lemma689> a r:Extraction; r:gives {{?x0 a :N659} <= {?x0 a :N658}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma690> a r:Inference; r:gives {:TestVariable a :N657}; r:evidence (
  <#lemma692>);
  r:rule <#lemma693>.

<#lemma691> a r:Extraction; r:gives {{?x0 a :N658} <= {?x0 a :N657}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma692> a r:Inference; r:gives {:TestVariable a :N656}; r:evidence (
  <#lemma694>);
  r:rule <#lemma695>.

<#lemma693> a r:Extraction; r:gives {{?x0 a :N657} <= {?x0 a :N656}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma694> a r:Inference; r:gives {:TestVariable a :N655}; r:evidence (
  <#lemma696>);
  r:rule <#lemma697>.

<#lemma695> a r:Extraction; r:gives {{?x0 a :N656} <= {?x0 a :N655}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma696> a r:Inference; r:gives {:TestVariable a :N654}; r:evidence (
  <#lemma698>);
  r:rule <#lemma699>.

<#lemma697> a r:Extraction; r:gives {{?x0 a :N655} <= {?x0 a :N654}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma698> a r:Inference; r:gives {:TestVariable a :N653}; r:evidence (
  <#lemma700>);
  r:rule <#lemma701>.

<#lemma699> a r:Extraction; r:gives {{?x0 a :N654} <= {?x0 a :N653}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma700> a r:Inference; r:gives {:TestVariable a :N652}; r:evidence (
  <#lemma702>);
  r:rule <#lemma703>.

<#lemma701> a r:Extraction; r:gives {{?x0 a :N653} <= {?x0 a :N652}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma702> a r:Inference; r:gives {:TestVariable a :N651}; r:evidence (
  <#lemma704>);
  r:rule <#lemma705>.

<#lemma703> a r:Extraction; r:gives {{?x0 a :N652} <= {?x0 a :N651}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma704> a r:Inference; r:gives {:TestVariable a :N650}; r:evidence (
  <#lemma706>);
  r:rule <#lemma707>.

<#lemma705> a r:Extraction; r:gives {{?x0 a :N651} <= {?x0 a :N650}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma706> a r:Inference; r:gives {:TestVariable a :N649}; r:evidence (
  <#lemma708>);
  r:rule <#lemma709>.

<#lemma707> a r:Extraction; r:gives {{?x0 a :N650} <= {?x0 a :N649}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma708> a r:Inference; r:gives {:TestVariable a :N648}; r:evidence (
  <#lemma710>);
  r:rule <#lemma711>.

<#lemma709> a r:Extraction; r:gives {{?x0 a :N649} <= {?x0 a :N648}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma710> a r:Inference; r:gives {:TestVariable a :N647}; r:evidence (
  <#lemma712>);
  r:rule <#lemma713>.

<#lemma711> a r:Extraction; r:gives {{?x0 a :N648} <= {?x0 a :N647}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma712> a r:Inference; r:gives {:TestVariable a :N646}; r:evidence (
  <#lemma714>);
  r:rule <#lemma715>.

<#lemma713> a r:Extraction; r:gives {{?x0 a :N647} <= {?x0 a :N646}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma714> a r:Inference; r:gives {:TestVariable a :N645}; r:evidence (
  <#lemma716>);
  r:rule <#lemma717>.

<#lemma715> a r:Extraction; r:gives {{?x0 a :N646} <= {?x0 a :N645}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma716> a r:Inference; r:gives {:TestVariable a :N644}; r:evidence (
  <#lemma718>);
  r:rule <#lemma719>.

<#lemma717> a r:Extraction; r:gives {{?x0 a :N645} <= {?x0 a :N644}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma718> a r:Inference; r:gives {:TestVariable a :N643}; r:evidence (
  <#lemma720>);
  r:rule <#lemma721>.

<#lemma719> a r:Extraction; r:gives {{?x0 a :N644} <= {?x0 a :N643}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma720> a r:Inference; r:gives {:TestVariable a :N642}; r:evidence (
  <#lemma722>);
  r:rule <#lemma723>.

<#lemma721> a r:Extraction; r:gives {{?x0 a :N643} <= {?x0 a :N642}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma722> a r:Inference; r:gives {:TestVariable a :N641}; r:evidence (
  <#lemma724>);
  r:rule <#lemma725>.

<#lemma723> a r:Extraction; r:gives {{?x0 a :N642} <= {?x0 a :N641}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma724> a r:Inference; r:gives {:TestVariable a :N640}; r:evidence (
  <#lemma726>);
  r:rule <#lemma727>.

<#lemma725> a r:Extraction; r:gives {{?x0 a :N641} <= {?x0 a :N640}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma726> a r:Inference; r:gives {:TestVariable a :N639}; r:evidence (
  <#lemma728>);
  r:rule <#lemma729>.

<#lemma727> a r:Extraction; r:gives {{?x0 a :N640} <= {?x0 a :N639}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma728> a r:Inference; r:gives {:TestVariable a :N638}; r:evidence (
  <#lemma730>);
  r:rule <#lemma731>.

<#lemma729> a r:Extraction; r:gives {{?x0 a :N639} <= {?x0 a :N638}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma730> a r:Inference; r:gives {:TestVariable a :N637}; r:evidence (
  <#lemma732>);
  r:rule <#lemma733>.

<#lemma731> a r:Extraction; r:gives {{?x0 a :N638} <= {?x0 a :N637}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma732> a r:Inference; r:gives {:TestVariable a :N636}; r:evidence (
  <#lemma734>);
  r:rule <#lemma735>.

<#lemma733> a r:Extraction; r:gives {{?x0 a :N637} <= {?x0 a :N636}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma734> a r:Inference; r:gives {:TestVariable a :N635}; r:evidence (
  <#lemma736>);
  r:rule <#lemma737>.

<#lemma735> a r:Extraction; r:gives {{?x0 a :N636} <= {?x0 a :N635}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma736> a r:Inference; r:gives {:TestVariable a :N634}; r:evidence (
  <#lemma738>);
  r:rule <#lemma739>.

<#lemma737> a r:Extraction; r:gives {{?x0 a :N635} <= {?x0 a :N634}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma738> a r:Inference; r:gives {:TestVariable a :N633}; r:evidence (
  <#lemma740>);
  r:rule <#lemma741>.

<#lemma739> a r:Extraction; r:gives {{?x0 a :N634} <= {?x0 a :N633}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma740> a r:Inference; r:gives {:TestVariable a :N632}; r:evidence (
  <#lemma742>);
  r:rule <#lemma743>.

<#lemma741> a r:Extraction; r:gives {{?x0 a :N633} <= {?x0 a :N632}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma742> a r:Inference; r:gives {:TestVariable a :N631}; r:evidence (
  <#lemma744>);
  r:rule <#lemma745>.

<#lemma743> a r:Extraction; r:gives {{?x0 a :N632} <= {?x0 a :N631}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma744> a r:Inference; r:gives {:TestVariable a :N630}; r:evidence (
  <#lemma746>);
  r:rule <#lemma747>.

<#lemma745> a r:Extraction; r:gives {{?x0 a :N631} <= {?x0 a :N630}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma746> a r:Inference; r:gives {:TestVariable a :N629}; r:evidence (
  <#lemma748>);
  r:rule <#lemma749>.

<#lemma747> a r:Extraction; r:gives {{?x0 a :N630} <= {?x0 a :N629}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma748> a r:Inference; r:gives {:TestVariable a :N628}; r:evidence (
  <#lemma750>);
  r:rule <#lemma751>.

<#lemma749> a r:Extraction; r:gives {{?x0 a :N629} <= {?x0 a :N628}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma750> a r:Inference; r:gives {:TestVariable a :N627}; r:evidence (
  <#lemma752>);
  r:rule <#lemma753>.

<#lemma751> a r:Extraction; r:gives {{?x0 a :N628} <= {?x0 a :N627}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma752> a r:Inference; r:gives {:TestVariable a :N626}; r:evidence (
  <#lemma754>);
  r:rule <#lemma755>.

<#lemma753> a r:Extraction; r:gives {{?x0 a :N627} <= {?x0 a :N626}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma754> a r:Inference; r:gives {:TestVariable a :N625}; r:evidence (
  <#lemma756>);
  r:rule <#lemma757>.

<#lemma755> a r:Extraction; r:gives {{?x0 a :N626} <= {?x0 a :N625}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma756> a r:Inference; r:gives {:TestVariable a :N624}; r:evidence (
  <#lemma758>);
  r:rule <#lemma759>.

<#lemma757> a r:Extraction; r:gives {{?x0 a :N625} <= {?x0 a :N624}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma758> a r:Inference; r:gives {:TestVariable a :N623}; r:evidence (
  <#lemma760>);
  r:rule <#lemma761>.

<#lemma759> a r:Extraction; r:gives {{?x0 a :N624} <= {?x0 a :N623}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma760> a r:Inference; r:gives {:TestVariable a :N622}; r:evidence (
  <#lemma762>);
  r:rule <#lemma763>.

<#lemma761> a r:Extraction; r:gives {{?x0 a :N623} <= {?x0 a :N622}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma762> a r:Inference; r:gives {:TestVariable a :N621}; r:evidence (
  <#lemma764>);
  r:rule <#lemma765>.

<#lemma763> a r:Extraction; r:gives {{?x0 a :N622} <= {?x0 a :N621}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma764> a r:Inference; r:gives {:TestVariable a :N620}; r:evidence (
  <#lemma766>);
  r:rule <#lemma767>.

<#lemma765> a r:Extraction; r:gives {{?x0 a :N621} <= {?x0 a :N620}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma766> a r:Inference; r:gives {:TestVariable a :N619}; r:evidence (
  <#lemma768>);
  r:rule <#lemma769>.

<#lemma767> a r:Extraction; r:gives {{?x0 a :N620} <= {?x0 a :N619}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma768> a r:Inference; r:gives {:TestVariable a :N618}; r:evidence (
  <#lemma770>);
  r:rule <#lemma771>.

<#lemma769> a r:Extraction; r:gives {{?x0 a :N619} <= {?x0 a :N618}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma770> a r:Inference; r:gives {:TestVariable a :N617}; r:evidence (
  <#lemma772>);
  r:rule <#lemma773>.

<#lemma771> a r:Extraction; r:gives {{?x0 a :N618} <= {?x0 a :N617}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma772> a r:Inference; r:gives {:TestVariable a :N616}; r:evidence (
  <#lemma774>);
  r:rule <#lemma775>.

<#lemma773> a r:Extraction; r:gives {{?x0 a :N617} <= {?x0 a :N616}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma774> a r:Inference; r:gives {:TestVariable a :N615}; r:evidence (
  <#lemma776>);
  r:rule <#lemma777>.

<#lemma775> a r:Extraction; r:gives {{?x0 a :N616} <= {?x0 a :N615}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma776> a r:Inference; r:gives {:TestVariable a :N614}; r:evidence (
  <#lemma778>);
  r:rule <#lemma779>.

<#lemma777> a r:Extraction; r:gives {{?x0 a :N615} <= {?x0 a :N614}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma778> a r:Inference; r:gives {:TestVariable a :N613}; r:evidence (
  <#lemma780>);
  r:rule <#lemma781>.

<#lemma779> a r:Extraction; r:gives {{?x0 a :N614} <= {?x0 a :N613}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma780> a r:Inference; r:gives {:TestVariable a :N612}; r:evidence (
  <#lemma782>);
  r:rule <#lemma783>.

<#lemma781> a r:Extraction; r:gives {{?x0 a :N613} <= {?x0 a :N612}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma782> a r:Inference; r:gives {:TestVariable a :N611}; r:evidence (
  <#lemma784>);
  r:rule <#lemma785>.

<#lemma783> a r:Extraction; r:gives {{?x0 a :N612} <= {?x0 a :N611}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma784> a r:Inference; r:gives {:TestVariable a :N610}; r:evidence (
  <#lemma786>);
  r:rule <#lemma787>.

<#lemma785> a r:Extraction; r:gives {{?x0 a :N611} <= {?x0 a :N610}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma786> a r:Inference; r:gives {:TestVariable a :N609}; r:evidence (
  <#lemma788>);
  r:rule <#lemma789>.

<#lemma787> a r:Extraction; r:gives {{?x0 a :N610} <= {?x0 a :N609}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma788> a r:Inference; r:gives {:TestVariable a :N608}; r:evidence (
  <#lemma790>);
  r:rule <#lemma791>.

<#lemma789> a r:Extraction; r:gives {{?x0 a :N609} <= {?x0 a :N608}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma790> a r:Inference; r:gives {:TestVariable a :N607}; r:evidence (
  <#lemma792>);
  r:rule <#lemma793>.

<#lemma791> a r:Extraction; r:gives {{?x0 a :N608} <= {?x0 a :N607}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma792> a r:Inference; r:gives {:TestVariable a :N606}; r:evidence (
  <#lemma794>);
  r:rule <#lemma795>.

<#lemma793> a r:Extraction; r:gives {{?x0 a :N607} <= {?x0 a :N606}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma794> a r:Inference; r:gives {:TestVariable a :N605}; r:evidence (
  <#lemma796>);
  r:rule <#lemma797>.

<#lemma795> a r:Extraction; r:gives {{?x0 a :N606} <= {?x0 a :N605}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma796> a r:Inference; r:gives {:TestVariable a :N604}; r:evidence (
  <#lemma798>);
  r:rule <#lemma799>.

<#lemma797> a r:Extraction; r:gives {{?x0 a :N605} <= {?x0 a :N604}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma798> a r:Inference; r:gives {:TestVariable a :N603}; r:evidence (
  <#lemma800>);
  r:rule <#lemma801>.

<#lemma799> a r:Extraction; r:gives {{?x0 a :N604} <= {?x0 a :N603}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma800> a r:Inference; r:gives {:TestVariable a :N602}; r:evidence (
  <#lemma802>);
  r:rule <#lemma803>.

<#lemma801> a r:Extraction; r:gives {{?x0 a :N603} <= {?x0 a :N602}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma802> a r:Inference; r:gives {:TestVariable a :N601}; r:evidence (
  <#lemma804>);
  r:rule <#lemma805>.

<#lemma803> a r:Extraction; r:gives {{?x0 a :N602} <= {?x0 a :N601}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma804> a r:Inference; r:gives {:TestVariable a :N600}; r:evidence (
  <#lemma806>);
  r:rule <#lemma807>.

<#lemma805> a r:Extraction; r:gives {{?x0 a :N601} <= {?x0 a :N600}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma806> a r:Inference; r:gives {:TestVariable a :N599}; r:evidence (
  <#lemma808>);
  r:rule <#lemma809>.

<#lemma807> a r:Extraction; r:gives {{?x0 a :N600} <= {?x0 a :N599}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma808> a r:Inference; r:gives {:TestVariable a :N598}; r:evidence (
  <#lemma810>);
  r:rule <#lemma811>.

<#lemma809> a r:Extraction; r:gives {{?x0 a :N599} <= {?x0 a :N598}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma810> a r:Inference; r:gives {:TestVariable a :N597}; r:evidence (
  <#lemma812>);
  r:rule <#lemma813>.

<#lemma811> a r:Extraction; r:gives {{?x0 a :N598} <= {?x0 a :N597}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma812> a r:Inference; r:gives {:TestVariable a :N596}; r:evidence (
  <#lemma814>);
  r:rule <#lemma815>.

<#lemma813> a r:Extraction; r:gives {{?x0 a :N597} <= {?x0 a :N596}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma814> a r:Inference; r:gives {:TestVariable a :N595}; r:evidence (
  <#lemma816>);
  r:rule <#lemma817>.

<#lemma815> a r:Extraction; r:gives {{?x0 a :N596} <= {?x0 a :N595}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma816> a r:Inference; r:gives {:TestVariable a :N594}; r:evidence (
  <#lemma818>);
  r:rule <#lemma819>.

<#lemma817> a r:Extraction; r:gives {{?x0 a :N595} <= {?x0 a :N594}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma818> a r:Inference; r:gives {:TestVariable a :N593}; r:evidence (
  <#lemma820>);
  r:rule <#lemma821>.

<#lemma819> a r:Extraction; r:gives {{?x0 a :N594} <= {?x0 a :N593}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma820> a r:Inference; r:gives {:TestVariable a :N592}; r:evidence (
  <#lemma822>);
  r:rule <#lemma823>.

<#lemma821> a r:Extraction; r:gives {{?x0 a :N593} <= {?x0 a :N592}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma822> a r:Inference; r:gives {:TestVariable a :N591}; r:evidence (
  <#lemma824>);
  r:rule <#lemma825>.

<#lemma823> a r:Extraction; r:gives {{?x0 a :N592} <= {?x0 a :N591}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma824> a r:Inference; r:gives {:TestVariable a :N590}; r:evidence (
  <#lemma826>);
  r:rule <#lemma827>.

<#lemma825> a r:Extraction; r:gives {{?x0 a :N591} <= {?x0 a :N590}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma826> a r:Inference; r:gives {:TestVariable a :N589}; r:evidence (
  <#lemma828>);
  r:rule <#lemma829>.

<#lemma827> a r:Extraction; r:gives {{?x0 a :N590} <= {?x0 a :N589}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma828> a r:Inference; r:gives {:TestVariable a :N588}; r:evidence (
  <#lemma830>);
  r:rule <#lemma831>.

<#lemma829> a r:Extraction; r:gives {{?x0 a :N589} <= {?x0 a :N588}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma830> a r:Inference; r:gives {:TestVariable a :N587}; r:evidence (
  <#lemma832>);
  r:rule <#lemma833>.

<#lemma831> a r:Extraction; r:gives {{?x0 a :N588} <= {?x0 a :N587}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma832> a r:Inference; r:gives {:TestVariable a :N586}; r:evidence (
  <#lemma834>);
  r:rule <#lemma835>.

<#lemma833> a r:Extraction; r:gives {{?x0 a :N587} <= {?x0 a :N586}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma834> a r:Inference; r:gives {:TestVariable a :N585}; r:evidence (
  <#lemma836>);
  r:rule <#lemma837>.

<#lemma835> a r:Extraction; r:gives {{?x0 a :N586} <= {?x0 a :N585}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma836> a r:Inference; r:gives {:TestVariable a :N584}; r:evidence (
  <#lemma838>);
  r:rule <#lemma839>.

<#lemma837> a r:Extraction; r:gives {{?x0 a :N585} <= {?x0 a :N584}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma838> a r:Inference; r:gives {:TestVariable a :N583}; r:evidence (
  <#lemma840>);
  r:rule <#lemma841>.

<#lemma839> a r:Extraction; r:gives {{?x0 a :N584} <= {?x0 a :N583}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma840> a r:Inference; r:gives {:TestVariable a :N582}; r:evidence (
  <#lemma842>);
  r:rule <#lemma843>.

<#lemma841> a r:Extraction; r:gives {{?x0 a :N583} <= {?x0 a :N582}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma842> a r:Inference; r:gives {:TestVariable a :N581}; r:evidence (
  <#lemma844>);
  r:rule <#lemma845>.

<#lemma843> a r:Extraction; r:gives {{?x0 a :N582} <= {?x0 a :N581}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma844> a r:Inference; r:gives {:TestVariable a :N580}; r:evidence (
  <#lemma846>);
  r:rule <#lemma847>.

<#lemma845> a r:Extraction; r:gives {{?x0 a :N581} <= {?x0 a :N580}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma846> a r:Inference; r:gives {:TestVariable a :N579}; r:evidence (
  <#lemma848>);
  r:rule <#lemma849>.

<#lemma847> a r:Extraction; r:gives {{?x0 a :N580} <= {?x0 a :N579}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma848> a r:Inference; r:gives {:TestVariable a :N578}; r:evidence (
  <#lemma850>);
  r:rule <#lemma851>.

<#lemma849> a r:Extraction; r:gives {{?x0 a :N579} <= {?x0 a :N578}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma850> a r:Inference; r:gives {:TestVariable a :N577}; r:evidence (
  <#lemma852>);
  r:rule <#lemma853>.

<#lemma851> a r:Extraction; r:gives {{?x0 a :N578} <= {?x0 a :N577}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma852> a r:Inference; r:gives {:TestVariable a :N576}; r:evidence (
  <#lemma854>);
  r:rule <#lemma855>.

<#lemma853> a r:Extraction; r:gives {{?x0 a :N577} <= {?x0 a :N576}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma854> a r:Inference; r:gives {:TestVariable a :N575}; r:evidence (
  <#lemma856>);
  r:rule <#lemma857>.

<#lemma855> a r:Extraction; r:gives {{?x0 a :N576} <= {?x0 a :N575}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma856> a r:Inference; r:gives {:TestVariable a :N574}; r:evidence (
  <#lemma858>);
  r:rule <#lemma859>.

<#lemma857> a r:Extraction; r:gives {{?x0 a :N575} <= {?x0 a :N574}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma858> a r:Inference; r:gives {:TestVariable a :N573}; r:evidence (
  <#lemma860>);
  r:rule <#lemma861>.

<#lemma859> a r:Extraction; r:gives {{?x0 a :N574} <= {?x0 a :N573}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma860> a r:Inference; r:gives {:TestVariable a :N572}; r:evidence (
  <#lemma862>);
  r:rule <#lemma863>.

<#lemma861> a r:Extraction; r:gives {{?x0 a :N573} <= {?x0 a :N572}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma862> a r:Inference; r:gives {:TestVariable a :N571}; r:evidence (
  <#lemma864>);
  r:rule <#lemma865>.

<#lemma863> a r:Extraction; r:gives {{?x0 a :N572} <= {?x0 a :N571}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma864> a r:Inference; r:gives {:TestVariable a :N570}; r:evidence (
  <#lemma866>);
  r:rule <#lemma867>.

<#lemma865> a r:Extraction; r:gives {{?x0 a :N571} <= {?x0 a :N570}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma866> a r:Inference; r:gives {:TestVariable a :N569}; r:evidence (
  <#lemma868>);
  r:rule <#lemma869>.

<#lemma867> a r:Extraction; r:gives {{?x0 a :N570} <= {?x0 a :N569}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma868> a r:Inference; r:gives {:TestVariable a :N568}; r:evidence (
  <#lemma870>);
  r:rule <#lemma871>.

<#lemma869> a r:Extraction; r:gives {{?x0 a :N569} <= {?x0 a :N568}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma870> a r:Inference; r:gives {:TestVariable a :N567}; r:evidence (
  <#lemma872>);
  r:rule <#lemma873>.

<#lemma871> a r:Extraction; r:gives {{?x0 a :N568} <= {?x0 a :N567}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma872> a r:Inference; r:gives {:TestVariable a :N566}; r:evidence (
  <#lemma874>);
  r:rule <#lemma875>.

<#lemma873> a r:Extraction; r:gives {{?x0 a :N567} <= {?x0 a :N566}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma874> a r:Inference; r:gives {:TestVariable a :N565}; r:evidence (
  <#lemma876>);
  r:rule <#lemma877>.

<#lemma875> a r:Extraction; r:gives {{?x0 a :N566} <= {?x0 a :N565}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma876> a r:Inference; r:gives {:TestVariable a :N564}; r:evidence (
  <#lemma878>);
  r:rule <#lemma879>.

<#lemma877> a r:Extraction; r:gives {{?x0 a :N565} <= {?x0 a :N564}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma878> a r:Inference; r:gives {:TestVariable a :N563}; r:evidence (
  <#lemma880>);
  r:rule <#lemma881>.

<#lemma879> a r:Extraction; r:gives {{?x0 a :N564} <= {?x0 a :N563}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma880> a r:Inference; r:gives {:TestVariable a :N562}; r:evidence (
  <#lemma882>);
  r:rule <#lemma883>.

<#lemma881> a r:Extraction; r:gives {{?x0 a :N563} <= {?x0 a :N562}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma882> a r:Inference; r:gives {:TestVariable a :N561}; r:evidence (
  <#lemma884>);
  r:rule <#lemma885>.

<#lemma883> a r:Extraction; r:gives {{?x0 a :N562} <= {?x0 a :N561}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma884> a r:Inference; r:gives {:TestVariable a :N560}; r:evidence (
  <#lemma886>);
  r:rule <#lemma887>.

<#lemma885> a r:Extraction; r:gives {{?x0 a :N561} <= {?x0 a :N560}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma886> a r:Inference; r:gives {:TestVariable a :N559}; r:evidence (
  <#lemma888>);
  r:rule <#lemma889>.

<#lemma887> a r:Extraction; r:gives {{?x0 a :N560} <= {?x0 a :N559}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma888> a r:Inference; r:gives {:TestVariable a :N558}; r:evidence (
  <#lemma890>);
  r:rule <#lemma891>.

<#lemma889> a r:Extraction; r:gives {{?x0 a :N559} <= {?x0 a :N558}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma890> a r:Inference; r:gives {:TestVariable a :N557}; r:evidence (
  <#lemma892>);
  r:rule <#lemma893>.

<#lemma891> a r:Extraction; r:gives {{?x0 a :N558} <= {?x0 a :N557}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma892> a r:Inference; r:gives {:TestVariable a :N556}; r:evidence (
  <#lemma894>);
  r:rule <#lemma895>.

<#lemma893> a r:Extraction; r:gives {{?x0 a :N557} <= {?x0 a :N556}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma894> a r:Inference; r:gives {:TestVariable a :N555}; r:evidence (
  <#lemma896>);
  r:rule <#lemma897>.

<#lemma895> a r:Extraction; r:gives {{?x0 a :N556} <= {?x0 a :N555}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma896> a r:Inference; r:gives {:TestVariable a :N554}; r:evidence (
  <#lemma898>);
  r:rule <#lemma899>.

<#lemma897> a r:Extraction; r:gives {{?x0 a :N555} <= {?x0 a :N554}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma898> a r:Inference; r:gives {:TestVariable a :N553}; r:evidence (
  <#lemma900>);
  r:rule <#lemma901>.

<#lemma899> a r:Extraction; r:gives {{?x0 a :N554} <= {?x0 a :N553}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma900> a r:Inference; r:gives {:TestVariable a :N552}; r:evidence (
  <#lemma902>);
  r:rule <#lemma903>.

<#lemma901> a r:Extraction; r:gives {{?x0 a :N553} <= {?x0 a :N552}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma902> a r:Inference; r:gives {:TestVariable a :N551}; r:evidence (
  <#lemma904>);
  r:rule <#lemma905>.

<#lemma903> a r:Extraction; r:gives {{?x0 a :N552} <= {?x0 a :N551}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma904> a r:Inference; r:gives {:TestVariable a :N550}; r:evidence (
  <#lemma906>);
  r:rule <#lemma907>.

<#lemma905> a r:Extraction; r:gives {{?x0 a :N551} <= {?x0 a :N550}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma906> a r:Inference; r:gives {:TestVariable a :N549}; r:evidence (
  <#lemma908>);
  r:rule <#lemma909>.

<#lemma907> a r:Extraction; r:gives {{?x0 a :N550} <= {?x0 a :N549}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma908> a r:Inference; r:gives {:TestVariable a :N548}; r:evidence (
  <#lemma910>);
  r:rule <#lemma911>.

<#lemma909> a r:Extraction; r:gives {{?x0 a :N549} <= {?x0 a :N548}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma910> a r:Inference; r:gives {:TestVariable a :N547}; r:evidence (
  <#lemma912>);
  r:rule <#lemma913>.

<#lemma911> a r:Extraction; r:gives {{?x0 a :N548} <= {?x0 a :N547}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma912> a r:Inference; r:gives {:TestVariable a :N546}; r:evidence (
  <#lemma914>);
  r:rule <#lemma915>.

<#lemma913> a r:Extraction; r:gives {{?x0 a :N547} <= {?x0 a :N546}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma914> a r:Inference; r:gives {:TestVariable a :N545}; r:evidence (
  <#lemma916>);
  r:rule <#lemma917>.

<#lemma915> a r:Extraction; r:gives {{?x0 a :N546} <= {?x0 a :N545}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma916> a r:Inference; r:gives {:TestVariable a :N544}; r:evidence (
  <#lemma918>);
  r:rule <#lemma919>.

<#lemma917> a r:Extraction; r:gives {{?x0 a :N545} <= {?x0 a :N544}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma918> a r:Inference; r:gives {:TestVariable a :N543}; r:evidence (
  <#lemma920>);
  r:rule <#lemma921>.

<#lemma919> a r:Extraction; r:gives {{?x0 a :N544} <= {?x0 a :N543}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma920> a r:Inference; r:gives {:TestVariable a :N542}; r:evidence (
  <#lemma922>);
  r:rule <#lemma923>.

<#lemma921> a r:Extraction; r:gives {{?x0 a :N543} <= {?x0 a :N542}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma922> a r:Inference; r:gives {:TestVariable a :N541}; r:evidence (
  <#lemma924>);
  r:rule <#lemma925>.

<#lemma923> a r:Extraction; r:gives {{?x0 a :N542} <= {?x0 a :N541}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma924> a r:Inference; r:gives {:TestVariable a :N540}; r:evidence (
  <#lemma926>);
  r:rule <#lemma927>.

<#lemma925> a r:Extraction; r:gives {{?x0 a :N541} <= {?x0 a :N540}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma926> a r:Inference; r:gives {:TestVariable a :N539}; r:evidence (
  <#lemma928>);
  r:rule <#lemma929>.

<#lemma927> a r:Extraction; r:gives {{?x0 a :N540} <= {?x0 a :N539}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma928> a r:Inference; r:gives {:TestVariable a :N538}; r:evidence (
  <#lemma930>);
  r:rule <#lemma931>.

<#lemma929> a r:Extraction; r:gives {{?x0 a :N539} <= {?x0 a :N538}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma930> a r:Inference; r:gives {:TestVariable a :N537}; r:evidence (
  <#lemma932>);
  r:rule <#lemma933>.

<#lemma931> a r:Extraction; r:gives {{?x0 a :N538} <= {?x0 a :N537}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma932> a r:Inference; r:gives {:TestVariable a :N536}; r:evidence (
  <#lemma934>);
  r:rule <#lemma935>.

<#lemma933> a r:Extraction; r:gives {{?x0 a :N537} <= {?x0 a :N536}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma934> a r:Inference; r:gives {:TestVariable a :N535}; r:evidence (
  <#lemma936>);
  r:rule <#lemma937>.

<#lemma935> a r:Extraction; r:gives {{?x0 a :N536} <= {?x0 a :N535}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma936> a r:Inference; r:gives {:TestVariable a :N534}; r:evidence (
  <#lemma938>);
  r:rule <#lemma939>.

<#lemma937> a r:Extraction; r:gives {{?x0 a :N535} <= {?x0 a :N534}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma938> a r:Inference; r:gives {:TestVariable a :N533}; r:evidence (
  <#lemma940>);
  r:rule <#lemma941>.

<#lemma939> a r:Extraction; r:gives {{?x0 a :N534} <= {?x0 a :N533}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma940> a r:Inference; r:gives {:TestVariable a :N532}; r:evidence (
  <#lemma942>);
  r:rule <#lemma943>.

<#lemma941> a r:Extraction; r:gives {{?x0 a :N533} <= {?x0 a :N532}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma942> a r:Inference; r:gives {:TestVariable a :N531}; r:evidence (
  <#lemma944>);
  r:rule <#lemma945>.

<#lemma943> a r:Extraction; r:gives {{?x0 a :N532} <= {?x0 a :N531}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma944> a r:Inference; r:gives {:TestVariable a :N530}; r:evidence (
  <#lemma946>);
  r:rule <#lemma947>.

<#lemma945> a r:Extraction; r:gives {{?x0 a :N531} <= {?x0 a :N530}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma946> a r:Inference; r:gives {:TestVariable a :N529}; r:evidence (
  <#lemma948>);
  r:rule <#lemma949>.

<#lemma947> a r:Extraction; r:gives {{?x0 a :N530} <= {?x0 a :N529}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma948> a r:Inference; r:gives {:TestVariable a :N528}; r:evidence (
  <#lemma950>);
  r:rule <#lemma951>.

<#lemma949> a r:Extraction; r:gives {{?x0 a :N529} <= {?x0 a :N528}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma950> a r:Inference; r:gives {:TestVariable a :N527}; r:evidence (
  <#lemma952>);
  r:rule <#lemma953>.

<#lemma951> a r:Extraction; r:gives {{?x0 a :N528} <= {?x0 a :N527}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma952> a r:Inference; r:gives {:TestVariable a :N526}; r:evidence (
  <#lemma954>);
  r:rule <#lemma955>.

<#lemma953> a r:Extraction; r:gives {{?x0 a :N527} <= {?x0 a :N526}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma954> a r:Inference; r:gives {:TestVariable a :N525}; r:evidence (
  <#lemma956>);
  r:rule <#lemma957>.

<#lemma955> a r:Extraction; r:gives {{?x0 a :N526} <= {?x0 a :N525}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma956> a r:Inference; r:gives {:TestVariable a :N524}; r:evidence (
  <#lemma958>);
  r:rule <#lemma959>.

<#lemma957> a r:Extraction; r:gives {{?x0 a :N525} <= {?x0 a :N524}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma958> a r:Inference; r:gives {:TestVariable a :N523}; r:evidence (
  <#lemma960>);
  r:rule <#lemma961>.

<#lemma959> a r:Extraction; r:gives {{?x0 a :N524} <= {?x0 a :N523}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma960> a r:Inference; r:gives {:TestVariable a :N522}; r:evidence (
  <#lemma962>);
  r:rule <#lemma963>.

<#lemma961> a r:Extraction; r:gives {{?x0 a :N523} <= {?x0 a :N522}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma962> a r:Inference; r:gives {:TestVariable a :N521}; r:evidence (
  <#lemma964>);
  r:rule <#lemma965>.

<#lemma963> a r:Extraction; r:gives {{?x0 a :N522} <= {?x0 a :N521}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma964> a r:Inference; r:gives {:TestVariable a :N520}; r:evidence (
  <#lemma966>);
  r:rule <#lemma967>.

<#lemma965> a r:Extraction; r:gives {{?x0 a :N521} <= {?x0 a :N520}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma966> a r:Inference; r:gives {:TestVariable a :N519}; r:evidence (
  <#lemma968>);
  r:rule <#lemma969>.

<#lemma967> a r:Extraction; r:gives {{?x0 a :N520} <= {?x0 a :N519}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma968> a r:Inference; r:gives {:TestVariable a :N518}; r:evidence (
  <#lemma970>);
  r:rule <#lemma971>.

<#lemma969> a r:Extraction; r:gives {{?x0 a :N519} <= {?x0 a :N518}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma970> a r:Inference; r:gives {:TestVariable a :N517}; r:evidence (
  <#lemma972>);
  r:rule <#lemma973>.

<#lemma971> a r:Extraction; r:gives {{?x0 a :N518} <= {?x0 a :N517}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma972> a r:Inference; r:gives {:TestVariable a :N516}; r:evidence (
  <#lemma974>);
  r:rule <#lemma975>.

<#lemma973> a r:Extraction; r:gives {{?x0 a :N517} <= {?x0 a :N516}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma974> a r:Inference; r:gives {:TestVariable a :N515}; r:evidence (
  <#lemma976>);
  r:rule <#lemma977>.

<#lemma975> a r:Extraction; r:gives {{?x0 a :N516} <= {?x0 a :N515}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma976> a r:Inference; r:gives {:TestVariable a :N514}; r:evidence (
  <#lemma978>);
  r:rule <#lemma979>.

<#lemma977> a r:Extraction; r:gives {{?x0 a :N515} <= {?x0 a :N514}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma978> a r:Inference; r:gives {:TestVariable a :N513}; r:evidence (
  <#lemma980>);
  r:rule <#lemma981>.

<#lemma979> a r:Extraction; r:gives {{?x0 a :N514} <= {?x0 a :N513}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma980> a r:Inference; r:gives {:TestVariable a :N512}; r:evidence (
  <#lemma982>);
  r:rule <#lemma983>.

<#lemma981> a r:Extraction; r:gives {{?x0 a :N513} <= {?x0 a :N512}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma982> a r:Inference; r:gives {:TestVariable a :N511}; r:evidence (
  <#lemma984>);
  r:rule <#lemma985>.

<#lemma983> a r:Extraction; r:gives {{?x0 a :N512} <= {?x0 a :N511}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma984> a r:Inference; r:gives {:TestVariable a :N510}; r:evidence (
  <#lemma986>);
  r:rule <#lemma987>.

<#lemma985> a r:Extraction; r:gives {{?x0 a :N511} <= {?x0 a :N510}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma986> a r:Inference; r:gives {:TestVariable a :N509}; r:evidence (
  <#lemma988>);
  r:rule <#lemma989>.

<#lemma987> a r:Extraction; r:gives {{?x0 a :N510} <= {?x0 a :N509}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma988> a r:Inference; r:gives {:TestVariable a :N508}; r:evidence (
  <#lemma990>);
  r:rule <#lemma991>.

<#lemma989> a r:Extraction; r:gives {{?x0 a :N509} <= {?x0 a :N508}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma990> a r:Inference; r:gives {:TestVariable a :N507}; r:evidence (
  <#lemma992>);
  r:rule <#lemma993>.

<#lemma991> a r:Extraction; r:gives {{?x0 a :N508} <= {?x0 a :N507}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma992> a r:Inference; r:gives {:TestVariable a :N506}; r:evidence (
  <#lemma994>);
  r:rule <#lemma995>.

<#lemma993> a r:Extraction; r:gives {{?x0 a :N507} <= {?x0 a :N506}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma994> a r:Inference; r:gives {:TestVariable a :N505}; r:evidence (
  <#lemma996>);
  r:rule <#lemma997>.

<#lemma995> a r:Extraction; r:gives {{?x0 a :N506} <= {?x0 a :N505}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma996> a r:Inference; r:gives {:TestVariable a :N504}; r:evidence (
  <#lemma998>);
  r:rule <#lemma999>.

<#lemma997> a r:Extraction; r:gives {{?x0 a :N505} <= {?x0 a :N504}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma998> a r:Inference; r:gives {:TestVariable a :N503}; r:evidence (
  <#lemma1000>);
  r:rule <#lemma1001>.

<#lemma999> a r:Extraction; r:gives {{?x0 a :N504} <= {?x0 a :N503}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1000> a r:Inference; r:gives {:TestVariable a :N502}; r:evidence (
  <#lemma1002>);
  r:rule <#lemma1003>.

<#lemma1001> a r:Extraction; r:gives {{?x0 a :N503} <= {?x0 a :N502}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1002> a r:Inference; r:gives {:TestVariable a :N501}; r:evidence (
  <#lemma1004>);
  r:rule <#lemma1005>.

<#lemma1003> a r:Extraction; r:gives {{?x0 a :N502} <= {?x0 a :N501}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1004> a r:Inference; r:gives {:TestVariable a :N500}; r:evidence (
  <#lemma1006>);
  r:rule <#lemma1007>.

<#lemma1005> a r:Extraction; r:gives {{?x0 a :N501} <= {?x0 a :N500}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1006> a r:Inference; r:gives {:TestVariable a :N499}; r:evidence (
  <#lemma1008>);
  r:rule <#lemma1009>.

<#lemma1007> a r:Extraction; r:gives {{?x0 a :N500} <= {?x0 a :N499}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1008> a r:Inference; r:gives {:TestVariable a :N498}; r:evidence (
  <#lemma1010>);
  r:rule <#lemma1011>.

<#lemma1009> a r:Extraction; r:gives {{?x0 a :N499} <= {?x0 a :N498}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1010> a r:Inference; r:gives {:TestVariable a :N497}; r:evidence (
  <#lemma1012>);
  r:rule <#lemma1013>.

<#lemma1011> a r:Extraction; r:gives {{?x0 a :N498} <= {?x0 a :N497}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1012> a r:Inference; r:gives {:TestVariable a :N496}; r:evidence (
  <#lemma1014>);
  r:rule <#lemma1015>.

<#lemma1013> a r:Extraction; r:gives {{?x0 a :N497} <= {?x0 a :N496}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1014> a r:Inference; r:gives {:TestVariable a :N495}; r:evidence (
  <#lemma1016>);
  r:rule <#lemma1017>.

<#lemma1015> a r:Extraction; r:gives {{?x0 a :N496} <= {?x0 a :N495}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1016> a r:Inference; r:gives {:TestVariable a :N494}; r:evidence (
  <#lemma1018>);
  r:rule <#lemma1019>.

<#lemma1017> a r:Extraction; r:gives {{?x0 a :N495} <= {?x0 a :N494}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1018> a r:Inference; r:gives {:TestVariable a :N493}; r:evidence (
  <#lemma1020>);
  r:rule <#lemma1021>.

<#lemma1019> a r:Extraction; r:gives {{?x0 a :N494} <= {?x0 a :N493}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1020> a r:Inference; r:gives {:TestVariable a :N492}; r:evidence (
  <#lemma1022>);
  r:rule <#lemma1023>.

<#lemma1021> a r:Extraction; r:gives {{?x0 a :N493} <= {?x0 a :N492}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1022> a r:Inference; r:gives {:TestVariable a :N491}; r:evidence (
  <#lemma1024>);
  r:rule <#lemma1025>.

<#lemma1023> a r:Extraction; r:gives {{?x0 a :N492} <= {?x0 a :N491}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1024> a r:Inference; r:gives {:TestVariable a :N490}; r:evidence (
  <#lemma1026>);
  r:rule <#lemma1027>.

<#lemma1025> a r:Extraction; r:gives {{?x0 a :N491} <= {?x0 a :N490}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1026> a r:Inference; r:gives {:TestVariable a :N489}; r:evidence (
  <#lemma1028>);
  r:rule <#lemma1029>.

<#lemma1027> a r:Extraction; r:gives {{?x0 a :N490} <= {?x0 a :N489}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1028> a r:Inference; r:gives {:TestVariable a :N488}; r:evidence (
  <#lemma1030>);
  r:rule <#lemma1031>.

<#lemma1029> a r:Extraction; r:gives {{?x0 a :N489} <= {?x0 a :N488}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1030> a r:Inference; r:gives {:TestVariable a :N487}; r:evidence (
  <#lemma1032>);
  r:rule <#lemma1033>.

<#lemma1031> a r:Extraction; r:gives {{?x0 a :N488} <= {?x0 a :N487}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1032> a r:Inference; r:gives {:TestVariable a :N486}; r:evidence (
  <#lemma1034>);
  r:rule <#lemma1035>.

<#lemma1033> a r:Extraction; r:gives {{?x0 a :N487} <= {?x0 a :N486}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1034> a r:Inference; r:gives {:TestVariable a :N485}; r:evidence (
  <#lemma1036>);
  r:rule <#lemma1037>.

<#lemma1035> a r:Extraction; r:gives {{?x0 a :N486} <= {?x0 a :N485}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1036> a r:Inference; r:gives {:TestVariable a :N484}; r:evidence (
  <#lemma1038>);
  r:rule <#lemma1039>.

<#lemma1037> a r:Extraction; r:gives {{?x0 a :N485} <= {?x0 a :N484}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1038> a r:Inference; r:gives {:TestVariable a :N483}; r:evidence (
  <#lemma1040>);
  r:rule <#lemma1041>.

<#lemma1039> a r:Extraction; r:gives {{?x0 a :N484} <= {?x0 a :N483}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1040> a r:Inference; r:gives {:TestVariable a :N482}; r:evidence (
  <#lemma1042>);
  r:rule <#lemma1043>.

<#lemma1041> a r:Extraction; r:gives {{?x0 a :N483} <= {?x0 a :N482}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1042> a r:Inference; r:gives {:TestVariable a :N481}; r:evidence (
  <#lemma1044>);
  r:rule <#lemma1045>.

<#lemma1043> a r:Extraction; r:gives {{?x0 a :N482} <= {?x0 a :N481}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1044> a r:Inference; r:gives {:TestVariable a :N480}; r:evidence (
  <#lemma1046>);
  r:rule <#lemma1047>.

<#lemma1045> a r:Extraction; r:gives {{?x0 a :N481} <= {?x0 a :N480}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1046> a r:Inference; r:gives {:TestVariable a :N479}; r:evidence (
  <#lemma1048>);
  r:rule <#lemma1049>.

<#lemma1047> a r:Extraction; r:gives {{?x0 a :N480} <= {?x0 a :N479}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1048> a r:Inference; r:gives {:TestVariable a :N478}; r:evidence (
  <#lemma1050>);
  r:rule <#lemma1051>.

<#lemma1049> a r:Extraction; r:gives {{?x0 a :N479} <= {?x0 a :N478}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1050> a r:Inference; r:gives {:TestVariable a :N477}; r:evidence (
  <#lemma1052>);
  r:rule <#lemma1053>.

<#lemma1051> a r:Extraction; r:gives {{?x0 a :N478} <= {?x0 a :N477}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1052> a r:Inference; r:gives {:TestVariable a :N476}; r:evidence (
  <#lemma1054>);
  r:rule <#lemma1055>.

<#lemma1053> a r:Extraction; r:gives {{?x0 a :N477} <= {?x0 a :N476}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1054> a r:Inference; r:gives {:TestVariable a :N475}; r:evidence (
  <#lemma1056>);
  r:rule <#lemma1057>.

<#lemma1055> a r:Extraction; r:gives {{?x0 a :N476} <= {?x0 a :N475}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1056> a r:Inference; r:gives {:TestVariable a :N474}; r:evidence (
  <#lemma1058>);
  r:rule <#lemma1059>.

<#lemma1057> a r:Extraction; r:gives {{?x0 a :N475} <= {?x0 a :N474}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1058> a r:Inference; r:gives {:TestVariable a :N473}; r:evidence (
  <#lemma1060>);
  r:rule <#lemma1061>.

<#lemma1059> a r:Extraction; r:gives {{?x0 a :N474} <= {?x0 a :N473}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1060> a r:Inference; r:gives {:TestVariable a :N472}; r:evidence (
  <#lemma1062>);
  r:rule <#lemma1063>.

<#lemma1061> a r:Extraction; r:gives {{?x0 a :N473} <= {?x0 a :N472}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1062> a r:Inference; r:gives {:TestVariable a :N471}; r:evidence (
  <#lemma1064>);
  r:rule <#lemma1065>.

<#lemma1063> a r:Extraction; r:gives {{?x0 a :N472} <= {?x0 a :N471}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1064> a r:Inference; r:gives {:TestVariable a :N470}; r:evidence (
  <#lemma1066>);
  r:rule <#lemma1067>.

<#lemma1065> a r:Extraction; r:gives {{?x0 a :N471} <= {?x0 a :N470}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1066> a r:Inference; r:gives {:TestVariable a :N469}; r:evidence (
  <#lemma1068>);
  r:rule <#lemma1069>.

<#lemma1067> a r:Extraction; r:gives {{?x0 a :N470} <= {?x0 a :N469}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1068> a r:Inference; r:gives {:TestVariable a :N468}; r:evidence (
  <#lemma1070>);
  r:rule <#lemma1071>.

<#lemma1069> a r:Extraction; r:gives {{?x0 a :N469} <= {?x0 a :N468}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1070> a r:Inference; r:gives {:TestVariable a :N467}; r:evidence (
  <#lemma1072>);
  r:rule <#lemma1073>.

<#lemma1071> a r:Extraction; r:gives {{?x0 a :N468} <= {?x0 a :N467}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1072> a r:Inference; r:gives {:TestVariable a :N466}; r:evidence (
  <#lemma1074>);
  r:rule <#lemma1075>.

<#lemma1073> a r:Extraction; r:gives {{?x0 a :N467} <= {?x0 a :N466}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1074> a r:Inference; r:gives {:TestVariable a :N465}; r:evidence (
  <#lemma1076>);
  r:rule <#lemma1077>.

<#lemma1075> a r:Extraction; r:gives {{?x0 a :N466} <= {?x0 a :N465}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1076> a r:Inference; r:gives {:TestVariable a :N464}; r:evidence (
  <#lemma1078>);
  r:rule <#lemma1079>.

<#lemma1077> a r:Extraction; r:gives {{?x0 a :N465} <= {?x0 a :N464}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1078> a r:Inference; r:gives {:TestVariable a :N463}; r:evidence (
  <#lemma1080>);
  r:rule <#lemma1081>.

<#lemma1079> a r:Extraction; r:gives {{?x0 a :N464} <= {?x0 a :N463}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1080> a r:Inference; r:gives {:TestVariable a :N462}; r:evidence (
  <#lemma1082>);
  r:rule <#lemma1083>.

<#lemma1081> a r:Extraction; r:gives {{?x0 a :N463} <= {?x0 a :N462}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1082> a r:Inference; r:gives {:TestVariable a :N461}; r:evidence (
  <#lemma1084>);
  r:rule <#lemma1085>.

<#lemma1083> a r:Extraction; r:gives {{?x0 a :N462} <= {?x0 a :N461}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1084> a r:Inference; r:gives {:TestVariable a :N460}; r:evidence (
  <#lemma1086>);
  r:rule <#lemma1087>.

<#lemma1085> a r:Extraction; r:gives {{?x0 a :N461} <= {?x0 a :N460}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1086> a r:Inference; r:gives {:TestVariable a :N459}; r:evidence (
  <#lemma1088>);
  r:rule <#lemma1089>.

<#lemma1087> a r:Extraction; r:gives {{?x0 a :N460} <= {?x0 a :N459}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1088> a r:Inference; r:gives {:TestVariable a :N458}; r:evidence (
  <#lemma1090>);
  r:rule <#lemma1091>.

<#lemma1089> a r:Extraction; r:gives {{?x0 a :N459} <= {?x0 a :N458}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1090> a r:Inference; r:gives {:TestVariable a :N457}; r:evidence (
  <#lemma1092>);
  r:rule <#lemma1093>.

<#lemma1091> a r:Extraction; r:gives {{?x0 a :N458} <= {?x0 a :N457}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1092> a r:Inference; r:gives {:TestVariable a :N456}; r:evidence (
  <#lemma1094>);
  r:rule <#lemma1095>.

<#lemma1093> a r:Extraction; r:gives {{?x0 a :N457} <= {?x0 a :N456}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1094> a r:Inference; r:gives {:TestVariable a :N455}; r:evidence (
  <#lemma1096>);
  r:rule <#lemma1097>.

<#lemma1095> a r:Extraction; r:gives {{?x0 a :N456} <= {?x0 a :N455}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1096> a r:Inference; r:gives {:TestVariable a :N454}; r:evidence (
  <#lemma1098>);
  r:rule <#lemma1099>.

<#lemma1097> a r:Extraction; r:gives {{?x0 a :N455} <= {?x0 a :N454}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1098> a r:Inference; r:gives {:TestVariable a :N453}; r:evidence (
  <#lemma1100>);
  r:rule <#lemma1101>.

<#lemma1099> a r:Extraction; r:gives {{?x0 a :N454} <= {?x0 a :N453}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1100> a r:Inference; r:gives {:TestVariable a :N452}; r:evidence (
  <#lemma1102>);
  r:rule <#lemma1103>.

<#lemma1101> a r:Extraction; r:gives {{?x0 a :N453} <= {?x0 a :N452}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1102> a r:Inference; r:gives {:TestVariable a :N451}; r:evidence (
  <#lemma1104>);
  r:rule <#lemma1105>.

<#lemma1103> a r:Extraction; r:gives {{?x0 a :N452} <= {?x0 a :N451}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1104> a r:Inference; r:gives {:TestVariable a :N450}; r:evidence (
  <#lemma1106>);
  r:rule <#lemma1107>.

<#lemma1105> a r:Extraction; r:gives {{?x0 a :N451} <= {?x0 a :N450}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1106> a r:Inference; r:gives {:TestVariable a :N449}; r:evidence (
  <#lemma1108>);
  r:rule <#lemma1109>.

<#lemma1107> a r:Extraction; r:gives {{?x0 a :N450} <= {?x0 a :N449}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1108> a r:Inference; r:gives {:TestVariable a :N448}; r:evidence (
  <#lemma1110>);
  r:rule <#lemma1111>.

<#lemma1109> a r:Extraction; r:gives {{?x0 a :N449} <= {?x0 a :N448}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1110> a r:Inference; r:gives {:TestVariable a :N447}; r:evidence (
  <#lemma1112>);
  r:rule <#lemma1113>.

<#lemma1111> a r:Extraction; r:gives {{?x0 a :N448} <= {?x0 a :N447}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1112> a r:Inference; r:gives {:TestVariable a :N446}; r:evidence (
  <#lemma1114>);
  r:rule <#lemma1115>.

<#lemma1113> a r:Extraction; r:gives {{?x0 a :N447} <= {?x0 a :N446}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1114> a r:Inference; r:gives {:TestVariable a :N445}; r:evidence (
  <#lemma1116>);
  r:rule <#lemma1117>.

<#lemma1115> a r:Extraction; r:gives {{?x0 a :N446} <= {?x0 a :N445}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1116> a r:Inference; r:gives {:TestVariable a :N444}; r:evidence (
  <#lemma1118>);
  r:rule <#lemma1119>.

<#lemma1117> a r:Extraction; r:gives {{?x0 a :N445} <= {?x0 a :N444}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1118> a r:Inference; r:gives {:TestVariable a :N443}; r:evidence (
  <#lemma1120>);
  r:rule <#lemma1121>.

<#lemma1119> a r:Extraction; r:gives {{?x0 a :N444} <= {?x0 a :N443}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1120> a r:Inference; r:gives {:TestVariable a :N442}; r:evidence (
  <#lemma1122>);
  r:rule <#lemma1123>.

<#lemma1121> a r:Extraction; r:gives {{?x0 a :N443} <= {?x0 a :N442}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1122> a r:Inference; r:gives {:TestVariable a :N441}; r:evidence (
  <#lemma1124>);
  r:rule <#lemma1125>.

<#lemma1123> a r:Extraction; r:gives {{?x0 a :N442} <= {?x0 a :N441}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1124> a r:Inference; r:gives {:TestVariable a :N440}; r:evidence (
  <#lemma1126>);
  r:rule <#lemma1127>.

<#lemma1125> a r:Extraction; r:gives {{?x0 a :N441} <= {?x0 a :N440}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1126> a r:Inference; r:gives {:TestVariable a :N439}; r:evidence (
  <#lemma1128>);
  r:rule <#lemma1129>.

<#lemma1127> a r:Extraction; r:gives {{?x0 a :N440} <= {?x0 a :N439}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1128> a r:Inference; r:gives {:TestVariable a :N438}; r:evidence (
  <#lemma1130>);
  r:rule <#lemma1131>.

<#lemma1129> a r:Extraction; r:gives {{?x0 a :N439} <= {?x0 a :N438}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1130> a r:Inference; r:gives {:TestVariable a :N437}; r:evidence (
  <#lemma1132>);
  r:rule <#lemma1133>.

<#lemma1131> a r:Extraction; r:gives {{?x0 a :N438} <= {?x0 a :N437}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1132> a r:Inference; r:gives {:TestVariable a :N436}; r:evidence (
  <#lemma1134>);
  r:rule <#lemma1135>.

<#lemma1133> a r:Extraction; r:gives {{?x0 a :N437} <= {?x0 a :N436}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1134> a r:Inference; r:gives {:TestVariable a :N435}; r:evidence (
  <#lemma1136>);
  r:rule <#lemma1137>.

<#lemma1135> a r:Extraction; r:gives {{?x0 a :N436} <= {?x0 a :N435}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1136> a r:Inference; r:gives {:TestVariable a :N434}; r:evidence (
  <#lemma1138>);
  r:rule <#lemma1139>.

<#lemma1137> a r:Extraction; r:gives {{?x0 a :N435} <= {?x0 a :N434}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1138> a r:Inference; r:gives {:TestVariable a :N433}; r:evidence (
  <#lemma1140>);
  r:rule <#lemma1141>.

<#lemma1139> a r:Extraction; r:gives {{?x0 a :N434} <= {?x0 a :N433}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1140> a r:Inference; r:gives {:TestVariable a :N432}; r:evidence (
  <#lemma1142>);
  r:rule <#lemma1143>.

<#lemma1141> a r:Extraction; r:gives {{?x0 a :N433} <= {?x0 a :N432}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1142> a r:Inference; r:gives {:TestVariable a :N431}; r:evidence (
  <#lemma1144>);
  r:rule <#lemma1145>.

<#lemma1143> a r:Extraction; r:gives {{?x0 a :N432} <= {?x0 a :N431}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1144> a r:Inference; r:gives {:TestVariable a :N430}; r:evidence (
  <#lemma1146>);
  r:rule <#lemma1147>.

<#lemma1145> a r:Extraction; r:gives {{?x0 a :N431} <= {?x0 a :N430}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1146> a r:Inference; r:gives {:TestVariable a :N429}; r:evidence (
  <#lemma1148>);
  r:rule <#lemma1149>.

<#lemma1147> a r:Extraction; r:gives {{?x0 a :N430} <= {?x0 a :N429}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1148> a r:Inference; r:gives {:TestVariable a :N428}; r:evidence (
  <#lemma1150>);
  r:rule <#lemma1151>.

<#lemma1149> a r:Extraction; r:gives {{?x0 a :N429} <= {?x0 a :N428}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1150> a r:Inference; r:gives {:TestVariable a :N427}; r:evidence (
  <#lemma1152>);
  r:rule <#lemma1153>.

<#lemma1151> a r:Extraction; r:gives {{?x0 a :N428} <= {?x0 a :N427}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1152> a r:Inference; r:gives {:TestVariable a :N426}; r:evidence (
  <#lemma1154>);
  r:rule <#lemma1155>.

<#lemma1153> a r:Extraction; r:gives {{?x0 a :N427} <= {?x0 a :N426}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1154> a r:Inference; r:gives {:TestVariable a :N425}; r:evidence (
  <#lemma1156>);
  r:rule <#lemma1157>.

<#lemma1155> a r:Extraction; r:gives {{?x0 a :N426} <= {?x0 a :N425}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1156> a r:Inference; r:gives {:TestVariable a :N424}; r:evidence (
  <#lemma1158>);
  r:rule <#lemma1159>.

<#lemma1157> a r:Extraction; r:gives {{?x0 a :N425} <= {?x0 a :N424}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1158> a r:Inference; r:gives {:TestVariable a :N423}; r:evidence (
  <#lemma1160>);
  r:rule <#lemma1161>.

<#lemma1159> a r:Extraction; r:gives {{?x0 a :N424} <= {?x0 a :N423}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1160> a r:Inference; r:gives {:TestVariable a :N422}; r:evidence (
  <#lemma1162>);
  r:rule <#lemma1163>.

<#lemma1161> a r:Extraction; r:gives {{?x0 a :N423} <= {?x0 a :N422}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1162> a r:Inference; r:gives {:TestVariable a :N421}; r:evidence (
  <#lemma1164>);
  r:rule <#lemma1165>.

<#lemma1163> a r:Extraction; r:gives {{?x0 a :N422} <= {?x0 a :N421}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1164> a r:Inference; r:gives {:TestVariable a :N420}; r:evidence (
  <#lemma1166>);
  r:rule <#lemma1167>.

<#lemma1165> a r:Extraction; r:gives {{?x0 a :N421} <= {?x0 a :N420}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1166> a r:Inference; r:gives {:TestVariable a :N419}; r:evidence (
  <#lemma1168>);
  r:rule <#lemma1169>.

<#lemma1167> a r:Extraction; r:gives {{?x0 a :N420} <= {?x0 a :N419}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1168> a r:Inference; r:gives {:TestVariable a :N418}; r:evidence (
  <#lemma1170>);
  r:rule <#lemma1171>.

<#lemma1169> a r:Extraction; r:gives {{?x0 a :N419} <= {?x0 a :N418}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1170> a r:Inference; r:gives {:TestVariable a :N417}; r:evidence (
  <#lemma1172>);
  r:rule <#lemma1173>.

<#lemma1171> a r:Extraction; r:gives {{?x0 a :N418} <= {?x0 a :N417}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1172> a r:Inference; r:gives {:TestVariable a :N416}; r:evidence (
  <#lemma1174>);
  r:rule <#lemma1175>.

<#lemma1173> a r:Extraction; r:gives {{?x0 a :N417} <= {?x0 a :N416}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1174> a r:Inference; r:gives {:TestVariable a :N415}; r:evidence (
  <#lemma1176>);
  r:rule <#lemma1177>.

<#lemma1175> a r:Extraction; r:gives {{?x0 a :N416} <= {?x0 a :N415}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1176> a r:Inference; r:gives {:TestVariable a :N414}; r:evidence (
  <#lemma1178>);
  r:rule <#lemma1179>.

<#lemma1177> a r:Extraction; r:gives {{?x0 a :N415} <= {?x0 a :N414}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1178> a r:Inference; r:gives {:TestVariable a :N413}; r:evidence (
  <#lemma1180>);
  r:rule <#lemma1181>.

<#lemma1179> a r:Extraction; r:gives {{?x0 a :N414} <= {?x0 a :N413}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1180> a r:Inference; r:gives {:TestVariable a :N412}; r:evidence (
  <#lemma1182>);
  r:rule <#lemma1183>.

<#lemma1181> a r:Extraction; r:gives {{?x0 a :N413} <= {?x0 a :N412}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1182> a r:Inference; r:gives {:TestVariable a :N411}; r:evidence (
  <#lemma1184>);
  r:rule <#lemma1185>.

<#lemma1183> a r:Extraction; r:gives {{?x0 a :N412} <= {?x0 a :N411}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1184> a r:Inference; r:gives {:TestVariable a :N410}; r:evidence (
  <#lemma1186>);
  r:rule <#lemma1187>.

<#lemma1185> a r:Extraction; r:gives {{?x0 a :N411} <= {?x0 a :N410}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1186> a r:Inference; r:gives {:TestVariable a :N409}; r:evidence (
  <#lemma1188>);
  r:rule <#lemma1189>.

<#lemma1187> a r:Extraction; r:gives {{?x0 a :N410} <= {?x0 a :N409}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1188> a r:Inference; r:gives {:TestVariable a :N408}; r:evidence (
  <#lemma1190>);
  r:rule <#lemma1191>.

<#lemma1189> a r:Extraction; r:gives {{?x0 a :N409} <= {?x0 a :N408}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1190> a r:Inference; r:gives {:TestVariable a :N407}; r:evidence (
  <#lemma1192>);
  r:rule <#lemma1193>.

<#lemma1191> a r:Extraction; r:gives {{?x0 a :N408} <= {?x0 a :N407}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1192> a r:Inference; r:gives {:TestVariable a :N406}; r:evidence (
  <#lemma1194>);
  r:rule <#lemma1195>.

<#lemma1193> a r:Extraction; r:gives {{?x0 a :N407} <= {?x0 a :N406}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1194> a r:Inference; r:gives {:TestVariable a :N405}; r:evidence (
  <#lemma1196>);
  r:rule <#lemma1197>.

<#lemma1195> a r:Extraction; r:gives {{?x0 a :N406} <= {?x0 a :N405}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1196> a r:Inference; r:gives {:TestVariable a :N404}; r:evidence (
  <#lemma1198>);
  r:rule <#lemma1199>.

<#lemma1197> a r:Extraction; r:gives {{?x0 a :N405} <= {?x0 a :N404}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1198> a r:Inference; r:gives {:TestVariable a :N403}; r:evidence (
  <#lemma1200>);
  r:rule <#lemma1201>.

<#lemma1199> a r:Extraction; r:gives {{?x0 a :N404} <= {?x0 a :N403}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1200> a r:Inference; r:gives {:TestVariable a :N402}; r:evidence (
  <#lemma1202>);
  r:rule <#lemma1203>.

<#lemma1201> a r:Extraction; r:gives {{?x0 a :N403} <= {?x0 a :N402}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1202> a r:Inference; r:gives {:TestVariable a :N401}; r:evidence (
  <#lemma1204>);
  r:rule <#lemma1205>.

<#lemma1203> a r:Extraction; r:gives {{?x0 a :N402} <= {?x0 a :N401}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1204> a r:Inference; r:gives {:TestVariable a :N400}; r:evidence (
  <#lemma1206>);
  r:rule <#lemma1207>.

<#lemma1205> a r:Extraction; r:gives {{?x0 a :N401} <= {?x0 a :N400}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1206> a r:Inference; r:gives {:TestVariable a :N399}; r:evidence (
  <#lemma1208>);
  r:rule <#lemma1209>.

<#lemma1207> a r:Extraction; r:gives {{?x0 a :N400} <= {?x0 a :N399}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1208> a r:Inference; r:gives {:TestVariable a :N398}; r:evidence (
  <#lemma1210>);
  r:rule <#lemma1211>.

<#lemma1209> a r:Extraction; r:gives {{?x0 a :N399} <= {?x0 a :N398}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1210> a r:Inference; r:gives {:TestVariable a :N397}; r:evidence (
  <#lemma1212>);
  r:rule <#lemma1213>.

<#lemma1211> a r:Extraction; r:gives {{?x0 a :N398} <= {?x0 a :N397}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1212> a r:Inference; r:gives {:TestVariable a :N396}; r:evidence (
  <#lemma1214>);
  r:rule <#lemma1215>.

<#lemma1213> a r:Extraction; r:gives {{?x0 a :N397} <= {?x0 a :N396}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1214> a r:Inference; r:gives {:TestVariable a :N395}; r:evidence (
  <#lemma1216>);
  r:rule <#lemma1217>.

<#lemma1215> a r:Extraction; r:gives {{?x0 a :N396} <= {?x0 a :N395}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1216> a r:Inference; r:gives {:TestVariable a :N394}; r:evidence (
  <#lemma1218>);
  r:rule <#lemma1219>.

<#lemma1217> a r:Extraction; r:gives {{?x0 a :N395} <= {?x0 a :N394}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1218> a r:Inference; r:gives {:TestVariable a :N393}; r:evidence (
  <#lemma1220>);
  r:rule <#lemma1221>.

<#lemma1219> a r:Extraction; r:gives {{?x0 a :N394} <= {?x0 a :N393}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1220> a r:Inference; r:gives {:TestVariable a :N392}; r:evidence (
  <#lemma1222>);
  r:rule <#lemma1223>.

<#lemma1221> a r:Extraction; r:gives {{?x0 a :N393} <= {?x0 a :N392}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1222> a r:Inference; r:gives {:TestVariable a :N391}; r:evidence (
  <#lemma1224>);
  r:rule <#lemma1225>.

<#lemma1223> a r:Extraction; r:gives {{?x0 a :N392} <= {?x0 a :N391}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1224> a r:Inference; r:gives {:TestVariable a :N390}; r:evidence (
  <#lemma1226>);
  r:rule <#lemma1227>.

<#lemma1225> a r:Extraction; r:gives {{?x0 a :N391} <= {?x0 a :N390}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1226> a r:Inference; r:gives {:TestVariable a :N389}; r:evidence (
  <#lemma1228>);
  r:rule <#lemma1229>.

<#lemma1227> a r:Extraction; r:gives {{?x0 a :N390} <= {?x0 a :N389}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1228> a r:Inference; r:gives {:TestVariable a :N388}; r:evidence (
  <#lemma1230>);
  r:rule <#lemma1231>.

<#lemma1229> a r:Extraction; r:gives {{?x0 a :N389} <= {?x0 a :N388}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1230> a r:Inference; r:gives {:TestVariable a :N387}; r:evidence (
  <#lemma1232>);
  r:rule <#lemma1233>.

<#lemma1231> a r:Extraction; r:gives {{?x0 a :N388} <= {?x0 a :N387}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1232> a r:Inference; r:gives {:TestVariable a :N386}; r:evidence (
  <#lemma1234>);
  r:rule <#lemma1235>.

<#lemma1233> a r:Extraction; r:gives {{?x0 a :N387} <= {?x0 a :N386}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1234> a r:Inference; r:gives {:TestVariable a :N385}; r:evidence (
  <#lemma1236>);
  r:rule <#lemma1237>.

<#lemma1235> a r:Extraction; r:gives {{?x0 a :N386} <= {?x0 a :N385}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1236> a r:Inference; r:gives {:TestVariable a :N384}; r:evidence (
  <#lemma1238>);
  r:rule <#lemma1239>.

<#lemma1237> a r:Extraction; r:gives {{?x0 a :N385} <= {?x0 a :N384}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1238> a r:Inference; r:gives {:TestVariable a :N383}; r:evidence (
  <#lemma1240>);
  r:rule <#lemma1241>.

<#lemma1239> a r:Extraction; r:gives {{?x0 a :N384} <= {?x0 a :N383}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1240> a r:Inference; r:gives {:TestVariable a :N382}; r:evidence (
  <#lemma1242>);
  r:rule <#lemma1243>.

<#lemma1241> a r:Extraction; r:gives {{?x0 a :N383} <= {?x0 a :N382}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1242> a r:Inference; r:gives {:TestVariable a :N381}; r:evidence (
  <#lemma1244>);
  r:rule <#lemma1245>.

<#lemma1243> a r:Extraction; r:gives {{?x0 a :N382} <= {?x0 a :N381}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1244> a r:Inference; r:gives {:TestVariable a :N380}; r:evidence (
  <#lemma1246>);
  r:rule <#lemma1247>.

<#lemma1245> a r:Extraction; r:gives {{?x0 a :N381} <= {?x0 a :N380}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1246> a r:Inference; r:gives {:TestVariable a :N379}; r:evidence (
  <#lemma1248>);
  r:rule <#lemma1249>.

<#lemma1247> a r:Extraction; r:gives {{?x0 a :N380} <= {?x0 a :N379}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1248> a r:Inference; r:gives {:TestVariable a :N378}; r:evidence (
  <#lemma1250>);
  r:rule <#lemma1251>.

<#lemma1249> a r:Extraction; r:gives {{?x0 a :N379} <= {?x0 a :N378}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1250> a r:Inference; r:gives {:TestVariable a :N377}; r:evidence (
  <#lemma1252>);
  r:rule <#lemma1253>.

<#lemma1251> a r:Extraction; r:gives {{?x0 a :N378} <= {?x0 a :N377}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1252> a r:Inference; r:gives {:TestVariable a :N376}; r:evidence (
  <#lemma1254>);
  r:rule <#lemma1255>.

<#lemma1253> a r:Extraction; r:gives {{?x0 a :N377} <= {?x0 a :N376}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1254> a r:Inference; r:gives {:TestVariable a :N375}; r:evidence (
  <#lemma1256>);
  r:rule <#lemma1257>.

<#lemma1255> a r:Extraction; r:gives {{?x0 a :N376} <= {?x0 a :N375}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1256> a r:Inference; r:gives {:TestVariable a :N374}; r:evidence (
  <#lemma1258>);
  r:rule <#lemma1259>.

<#lemma1257> a r:Extraction; r:gives {{?x0 a :N375} <= {?x0 a :N374}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1258> a r:Inference; r:gives {:TestVariable a :N373}; r:evidence (
  <#lemma1260>);
  r:rule <#lemma1261>.

<#lemma1259> a r:Extraction; r:gives {{?x0 a :N374} <= {?x0 a :N373}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1260> a r:Inference; r:gives {:TestVariable a :N372}; r:evidence (
  <#lemma1262>);
  r:rule <#lemma1263>.

<#lemma1261> a r:Extraction; r:gives {{?x0 a :N373} <= {?x0 a :N372}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1262> a r:Inference; r:gives {:TestVariable a :N371}; r:evidence (
  <#lemma1264>);
  r:rule <#lemma1265>.

<#lemma1263> a r:Extraction; r:gives {{?x0 a :N372} <= {?x0 a :N371}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1264> a r:Inference; r:gives {:TestVariable a :N370}; r:evidence (
  <#lemma1266>);
  r:rule <#lemma1267>.

<#lemma1265> a r:Extraction; r:gives {{?x0 a :N371} <= {?x0 a :N370}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1266> a r:Inference; r:gives {:TestVariable a :N369}; r:evidence (
  <#lemma1268>);
  r:rule <#lemma1269>.

<#lemma1267> a r:Extraction; r:gives {{?x0 a :N370} <= {?x0 a :N369}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1268> a r:Inference; r:gives {:TestVariable a :N368}; r:evidence (
  <#lemma1270>);
  r:rule <#lemma1271>.

<#lemma1269> a r:Extraction; r:gives {{?x0 a :N369} <= {?x0 a :N368}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1270> a r:Inference; r:gives {:TestVariable a :N367}; r:evidence (
  <#lemma1272>);
  r:rule <#lemma1273>.

<#lemma1271> a r:Extraction; r:gives {{?x0 a :N368} <= {?x0 a :N367}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1272> a r:Inference; r:gives {:TestVariable a :N366}; r:evidence (
  <#lemma1274>);
  r:rule <#lemma1275>.

<#lemma1273> a r:Extraction; r:gives {{?x0 a :N367} <= {?x0 a :N366}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1274> a r:Inference; r:gives {:TestVariable a :N365}; r:evidence (
  <#lemma1276>);
  r:rule <#lemma1277>.

<#lemma1275> a r:Extraction; r:gives {{?x0 a :N366} <= {?x0 a :N365}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1276> a r:Inference; r:gives {:TestVariable a :N364}; r:evidence (
  <#lemma1278>);
  r:rule <#lemma1279>.

<#lemma1277> a r:Extraction; r:gives {{?x0 a :N365} <= {?x0 a :N364}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1278> a r:Inference; r:gives {:TestVariable a :N363}; r:evidence (
  <#lemma1280>);
  r:rule <#lemma1281>.

<#lemma1279> a r:Extraction; r:gives {{?x0 a :N364} <= {?x0 a :N363}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1280> a r:Inference; r:gives {:TestVariable a :N362}; r:evidence (
  <#lemma1282>);
  r:rule <#lemma1283>.

<#lemma1281> a r:Extraction; r:gives {{?x0 a :N363} <= {?x0 a :N362}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1282> a r:Inference; r:gives {:TestVariable a :N361}; r:evidence (
  <#lemma1284>);
  r:rule <#lemma1285>.

<#lemma1283> a r:Extraction; r:gives {{?x0 a :N362} <= {?x0 a :N361}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1284> a r:Inference; r:gives {:TestVariable a :N360}; r:evidence (
  <#lemma1286>);
  r:rule <#lemma1287>.

<#lemma1285> a r:Extraction; r:gives {{?x0 a :N361} <= {?x0 a :N360}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1286> a r:Inference; r:gives {:TestVariable a :N359}; r:evidence (
  <#lemma1288>);
  r:rule <#lemma1289>.

<#lemma1287> a r:Extraction; r:gives {{?x0 a :N360} <= {?x0 a :N359}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1288> a r:Inference; r:gives {:TestVariable a :N358}; r:evidence (
  <#lemma1290>);
  r:rule <#lemma1291>.

<#lemma1289> a r:Extraction; r:gives {{?x0 a :N359} <= {?x0 a :N358}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1290> a r:Inference; r:gives {:TestVariable a :N357}; r:evidence (
  <#lemma1292>);
  r:rule <#lemma1293>.

<#lemma1291> a r:Extraction; r:gives {{?x0 a :N358} <= {?x0 a :N357}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1292> a r:Inference; r:gives {:TestVariable a :N356}; r:evidence (
  <#lemma1294>);
  r:rule <#lemma1295>.

<#lemma1293> a r:Extraction; r:gives {{?x0 a :N357} <= {?x0 a :N356}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1294> a r:Inference; r:gives {:TestVariable a :N355}; r:evidence (
  <#lemma1296>);
  r:rule <#lemma1297>.

<#lemma1295> a r:Extraction; r:gives {{?x0 a :N356} <= {?x0 a :N355}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1296> a r:Inference; r:gives {:TestVariable a :N354}; r:evidence (
  <#lemma1298>);
  r:rule <#lemma1299>.

<#lemma1297> a r:Extraction; r:gives {{?x0 a :N355} <= {?x0 a :N354}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1298> a r:Inference; r:gives {:TestVariable a :N353}; r:evidence (
  <#lemma1300>);
  r:rule <#lemma1301>.

<#lemma1299> a r:Extraction; r:gives {{?x0 a :N354} <= {?x0 a :N353}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1300> a r:Inference; r:gives {:TestVariable a :N352}; r:evidence (
  <#lemma1302>);
  r:rule <#lemma1303>.

<#lemma1301> a r:Extraction; r:gives {{?x0 a :N353} <= {?x0 a :N352}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1302> a r:Inference; r:gives {:TestVariable a :N351}; r:evidence (
  <#lemma1304>);
  r:rule <#lemma1305>.

<#lemma1303> a r:Extraction; r:gives {{?x0 a :N352} <= {?x0 a :N351}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1304> a r:Inference; r:gives {:TestVariable a :N350}; r:evidence (
  <#lemma1306>);
  r:rule <#lemma1307>.

<#lemma1305> a r:Extraction; r:gives {{?x0 a :N351} <= {?x0 a :N350}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1306> a r:Inference; r:gives {:TestVariable a :N349}; r:evidence (
  <#lemma1308>);
  r:rule <#lemma1309>.

<#lemma1307> a r:Extraction; r:gives {{?x0 a :N350} <= {?x0 a :N349}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1308> a r:Inference; r:gives {:TestVariable a :N348}; r:evidence (
  <#lemma1310>);
  r:rule <#lemma1311>.

<#lemma1309> a r:Extraction; r:gives {{?x0 a :N349} <= {?x0 a :N348}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1310> a r:Inference; r:gives {:TestVariable a :N347}; r:evidence (
  <#lemma1312>);
  r:rule <#lemma1313>.

<#lemma1311> a r:Extraction; r:gives {{?x0 a :N348} <= {?x0 a :N347}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1312> a r:Inference; r:gives {:TestVariable a :N346}; r:evidence (
  <#lemma1314>);
  r:rule <#lemma1315>.

<#lemma1313> a r:Extraction; r:gives {{?x0 a :N347} <= {?x0 a :N346}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1314> a r:Inference; r:gives {:TestVariable a :N345}; r:evidence (
  <#lemma1316>);
  r:rule <#lemma1317>.

<#lemma1315> a r:Extraction; r:gives {{?x0 a :N346} <= {?x0 a :N345}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1316> a r:Inference; r:gives {:TestVariable a :N344}; r:evidence (
  <#lemma1318>);
  r:rule <#lemma1319>.

<#lemma1317> a r:Extraction; r:gives {{?x0 a :N345} <= {?x0 a :N344}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1318> a r:Inference; r:gives {:TestVariable a :N343}; r:evidence (
  <#lemma1320>);
  r:rule <#lemma1321>.

<#lemma1319> a r:Extraction; r:gives {{?x0 a :N344} <= {?x0 a :N343}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1320> a r:Inference; r:gives {:TestVariable a :N342}; r:evidence (
  <#lemma1322>);
  r:rule <#lemma1323>.

<#lemma1321> a r:Extraction; r:gives {{?x0 a :N343} <= {?x0 a :N342}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1322> a r:Inference; r:gives {:TestVariable a :N341}; r:evidence (
  <#lemma1324>);
  r:rule <#lemma1325>.

<#lemma1323> a r:Extraction; r:gives {{?x0 a :N342} <= {?x0 a :N341}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1324> a r:Inference; r:gives {:TestVariable a :N340}; r:evidence (
  <#lemma1326>);
  r:rule <#lemma1327>.

<#lemma1325> a r:Extraction; r:gives {{?x0 a :N341} <= {?x0 a :N340}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1326> a r:Inference; r:gives {:TestVariable a :N339}; r:evidence (
  <#lemma1328>);
  r:rule <#lemma1329>.

<#lemma1327> a r:Extraction; r:gives {{?x0 a :N340} <= {?x0 a :N339}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1328> a r:Inference; r:gives {:TestVariable a :N338}; r:evidence (
  <#lemma1330>);
  r:rule <#lemma1331>.

<#lemma1329> a r:Extraction; r:gives {{?x0 a :N339} <= {?x0 a :N338}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1330> a r:Inference; r:gives {:TestVariable a :N337}; r:evidence (
  <#lemma1332>);
  r:rule <#lemma1333>.

<#lemma1331> a r:Extraction; r:gives {{?x0 a :N338} <= {?x0 a :N337}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1332> a r:Inference; r:gives {:TestVariable a :N336}; r:evidence (
  <#lemma1334>);
  r:rule <#lemma1335>.

<#lemma1333> a r:Extraction; r:gives {{?x0 a :N337} <= {?x0 a :N336}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1334> a r:Inference; r:gives {:TestVariable a :N335}; r:evidence (
  <#lemma1336>);
  r:rule <#lemma1337>.

<#lemma1335> a r:Extraction; r:gives {{?x0 a :N336} <= {?x0 a :N335}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1336> a r:Inference; r:gives {:TestVariable a :N334}; r:evidence (
  <#lemma1338>);
  r:rule <#lemma1339>.

<#lemma1337> a r:Extraction; r:gives {{?x0 a :N335} <= {?x0 a :N334}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1338> a r:Inference; r:gives {:TestVariable a :N333}; r:evidence (
  <#lemma1340>);
  r:rule <#lemma1341>.

<#lemma1339> a r:Extraction; r:gives {{?x0 a :N334} <= {?x0 a :N333}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1340> a r:Inference; r:gives {:TestVariable a :N332}; r:evidence (
  <#lemma1342>);
  r:rule <#lemma1343>.

<#lemma1341> a r:Extraction; r:gives {{?x0 a :N333} <= {?x0 a :N332}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1342> a r:Inference; r:gives {:TestVariable a :N331}; r:evidence (
  <#lemma1344>);
  r:rule <#lemma1345>.

<#lemma1343> a r:Extraction; r:gives {{?x0 a :N332} <= {?x0 a :N331}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1344> a r:Inference; r:gives {:TestVariable a :N330}; r:evidence (
  <#lemma1346>);
  r:rule <#lemma1347>.

<#lemma1345> a r:Extraction; r:gives {{?x0 a :N331} <= {?x0 a :N330}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1346> a r:Inference; r:gives {:TestVariable a :N329}; r:evidence (
  <#lemma1348>);
  r:rule <#lemma1349>.

<#lemma1347> a r:Extraction; r:gives {{?x0 a :N330} <= {?x0 a :N329}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1348> a r:Inference; r:gives {:TestVariable a :N328}; r:evidence (
  <#lemma1350>);
  r:rule <#lemma1351>.

<#lemma1349> a r:Extraction; r:gives {{?x0 a :N329} <= {?x0 a :N328}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1350> a r:Inference; r:gives {:TestVariable a :N327}; r:evidence (
  <#lemma1352>);
  r:rule <#lemma1353>.

<#lemma1351> a r:Extraction; r:gives {{?x0 a :N328} <= {?x0 a :N327}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1352> a r:Inference; r:gives {:TestVariable a :N326}; r:evidence (
  <#lemma1354>);
  r:rule <#lemma1355>.

<#lemma1353> a r:Extraction; r:gives {{?x0 a :N327} <= {?x0 a :N326}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1354> a r:Inference; r:gives {:TestVariable a :N325}; r:evidence (
  <#lemma1356>);
  r:rule <#lemma1357>.

<#lemma1355> a r:Extraction; r:gives {{?x0 a :N326} <= {?x0 a :N325}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1356> a r:Inference; r:gives {:TestVariable a :N324}; r:evidence (
  <#lemma1358>);
  r:rule <#lemma1359>.

<#lemma1357> a r:Extraction; r:gives {{?x0 a :N325} <= {?x0 a :N324}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1358> a r:Inference; r:gives {:TestVariable a :N323}; r:evidence (
  <#lemma1360>);
  r:rule <#lemma1361>.

<#lemma1359> a r:Extraction; r:gives {{?x0 a :N324} <= {?x0 a :N323}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1360> a r:Inference; r:gives {:TestVariable a :N322}; r:evidence (
  <#lemma1362>);
  r:rule <#lemma1363>.

<#lemma1361> a r:Extraction; r:gives {{?x0 a :N323} <= {?x0 a :N322}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1362> a r:Inference; r:gives {:TestVariable a :N321}; r:evidence (
  <#lemma1364>);
  r:rule <#lemma1365>.

<#lemma1363> a r:Extraction; r:gives {{?x0 a :N322} <= {?x0 a :N321}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1364> a r:Inference; r:gives {:TestVariable a :N320}; r:evidence (
  <#lemma1366>);
  r:rule <#lemma1367>.

<#lemma1365> a r:Extraction; r:gives {{?x0 a :N321} <= {?x0 a :N320}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1366> a r:Inference; r:gives {:TestVariable a :N319}; r:evidence (
  <#lemma1368>);
  r:rule <#lemma1369>.

<#lemma1367> a r:Extraction; r:gives {{?x0 a :N320} <= {?x0 a :N319}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1368> a r:Inference; r:gives {:TestVariable a :N318}; r:evidence (
  <#lemma1370>);
  r:rule <#lemma1371>.

<#lemma1369> a r:Extraction; r:gives {{?x0 a :N319} <= {?x0 a :N318}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1370> a r:Inference; r:gives {:TestVariable a :N317}; r:evidence (
  <#lemma1372>);
  r:rule <#lemma1373>.

<#lemma1371> a r:Extraction; r:gives {{?x0 a :N318} <= {?x0 a :N317}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1372> a r:Inference; r:gives {:TestVariable a :N316}; r:evidence (
  <#lemma1374>);
  r:rule <#lemma1375>.

<#lemma1373> a r:Extraction; r:gives {{?x0 a :N317} <= {?x0 a :N316}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1374> a r:Inference; r:gives {:TestVariable a :N315}; r:evidence (
  <#lemma1376>);
  r:rule <#lemma1377>.

<#lemma1375> a r:Extraction; r:gives {{?x0 a :N316} <= {?x0 a :N315}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1376> a r:Inference; r:gives {:TestVariable a :N314}; r:evidence (
  <#lemma1378>);
  r:rule <#lemma1379>.

<#lemma1377> a r:Extraction; r:gives {{?x0 a :N315} <= {?x0 a :N314}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1378> a r:Inference; r:gives {:TestVariable a :N313}; r:evidence (
  <#lemma1380>);
  r:rule <#lemma1381>.

<#lemma1379> a r:Extraction; r:gives {{?x0 a :N314} <= {?x0 a :N313}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1380> a r:Inference; r:gives {:TestVariable a :N312}; r:evidence (
  <#lemma1382>);
  r:rule <#lemma1383>.

<#lemma1381> a r:Extraction; r:gives {{?x0 a :N313} <= {?x0 a :N312}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1382> a r:Inference; r:gives {:TestVariable a :N311}; r:evidence (
  <#lemma1384>);
  r:rule <#lemma1385>.

<#lemma1383> a r:Extraction; r:gives {{?x0 a :N312} <= {?x0 a :N311}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1384> a r:Inference; r:gives {:TestVariable a :N310}; r:evidence (
  <#lemma1386>);
  r:rule <#lemma1387>.

<#lemma1385> a r:Extraction; r:gives {{?x0 a :N311} <= {?x0 a :N310}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1386> a r:Inference; r:gives {:TestVariable a :N309}; r:evidence (
  <#lemma1388>);
  r:rule <#lemma1389>.

<#lemma1387> a r:Extraction; r:gives {{?x0 a :N310} <= {?x0 a :N309}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1388> a r:Inference; r:gives {:TestVariable a :N308}; r:evidence (
  <#lemma1390>);
  r:rule <#lemma1391>.

<#lemma1389> a r:Extraction; r:gives {{?x0 a :N309} <= {?x0 a :N308}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1390> a r:Inference; r:gives {:TestVariable a :N307}; r:evidence (
  <#lemma1392>);
  r:rule <#lemma1393>.

<#lemma1391> a r:Extraction; r:gives {{?x0 a :N308} <= {?x0 a :N307}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1392> a r:Inference; r:gives {:TestVariable a :N306}; r:evidence (
  <#lemma1394>);
  r:rule <#lemma1395>.

<#lemma1393> a r:Extraction; r:gives {{?x0 a :N307} <= {?x0 a :N306}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1394> a r:Inference; r:gives {:TestVariable a :N305}; r:evidence (
  <#lemma1396>);
  r:rule <#lemma1397>.

<#lemma1395> a r:Extraction; r:gives {{?x0 a :N306} <= {?x0 a :N305}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1396> a r:Inference; r:gives {:TestVariable a :N304}; r:evidence (
  <#lemma1398>);
  r:rule <#lemma1399>.

<#lemma1397> a r:Extraction; r:gives {{?x0 a :N305} <= {?x0 a :N304}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1398> a r:Inference; r:gives {:TestVariable a :N303}; r:evidence (
  <#lemma1400>);
  r:rule <#lemma1401>.

<#lemma1399> a r:Extraction; r:gives {{?x0 a :N304} <= {?x0 a :N303}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1400> a r:Inference; r:gives {:TestVariable a :N302}; r:evidence (
  <#lemma1402>);
  r:rule <#lemma1403>.

<#lemma1401> a r:Extraction; r:gives {{?x0 a :N303} <= {?x0 a :N302}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1402> a r:Inference; r:gives {:TestVariable a :N301}; r:evidence (
  <#lemma1404>);
  r:rule <#lemma1405>.

<#lemma1403> a r:Extraction; r:gives {{?x0 a :N302} <= {?x0 a :N301}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1404> a r:Inference; r:gives {:TestVariable a :N300}; r:evidence (
  <#lemma1406>);
  r:rule <#lemma1407>.

<#lemma1405> a r:Extraction; r:gives {{?x0 a :N301} <= {?x0 a :N300}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1406> a r:Inference; r:gives {:TestVariable a :N299}; r:evidence (
  <#lemma1408>);
  r:rule <#lemma1409>.

<#lemma1407> a r:Extraction; r:gives {{?x0 a :N300} <= {?x0 a :N299}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1408> a r:Inference; r:gives {:TestVariable a :N298}; r:evidence (
  <#lemma1410>);
  r:rule <#lemma1411>.

<#lemma1409> a r:Extraction; r:gives {{?x0 a :N299} <= {?x0 a :N298}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1410> a r:Inference; r:gives {:TestVariable a :N297}; r:evidence (
  <#lemma1412>);
  r:rule <#lemma1413>.

<#lemma1411> a r:Extraction; r:gives {{?x0 a :N298} <= {?x0 a :N297}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1412> a r:Inference; r:gives {:TestVariable a :N296}; r:evidence (
  <#lemma1414>);
  r:rule <#lemma1415>.

<#lemma1413> a r:Extraction; r:gives {{?x0 a :N297} <= {?x0 a :N296}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1414> a r:Inference; r:gives {:TestVariable a :N295}; r:evidence (
  <#lemma1416>);
  r:rule <#lemma1417>.

<#lemma1415> a r:Extraction; r:gives {{?x0 a :N296} <= {?x0 a :N295}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1416> a r:Inference; r:gives {:TestVariable a :N294}; r:evidence (
  <#lemma1418>);
  r:rule <#lemma1419>.

<#lemma1417> a r:Extraction; r:gives {{?x0 a :N295} <= {?x0 a :N294}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1418> a r:Inference; r:gives {:TestVariable a :N293}; r:evidence (
  <#lemma1420>);
  r:rule <#lemma1421>.

<#lemma1419> a r:Extraction; r:gives {{?x0 a :N294} <= {?x0 a :N293}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1420> a r:Inference; r:gives {:TestVariable a :N292}; r:evidence (
  <#lemma1422>);
  r:rule <#lemma1423>.

<#lemma1421> a r:Extraction; r:gives {{?x0 a :N293} <= {?x0 a :N292}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1422> a r:Inference; r:gives {:TestVariable a :N291}; r:evidence (
  <#lemma1424>);
  r:rule <#lemma1425>.

<#lemma1423> a r:Extraction; r:gives {{?x0 a :N292} <= {?x0 a :N291}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1424> a r:Inference; r:gives {:TestVariable a :N290}; r:evidence (
  <#lemma1426>);
  r:rule <#lemma1427>.

<#lemma1425> a r:Extraction; r:gives {{?x0 a :N291} <= {?x0 a :N290}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1426> a r:Inference; r:gives {:TestVariable a :N289}; r:evidence (
  <#lemma1428>);
  r:rule <#lemma1429>.

<#lemma1427> a r:Extraction; r:gives {{?x0 a :N290} <= {?x0 a :N289}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1428> a r:Inference; r:gives {:TestVariable a :N288}; r:evidence (
  <#lemma1430>);
  r:rule <#lemma1431>.

<#lemma1429> a r:Extraction; r:gives {{?x0 a :N289} <= {?x0 a :N288}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1430> a r:Inference; r:gives {:TestVariable a :N287}; r:evidence (
  <#lemma1432>);
  r:rule <#lemma1433>.

<#lemma1431> a r:Extraction; r:gives {{?x0 a :N288} <= {?x0 a :N287}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1432> a r:Inference; r:gives {:TestVariable a :N286}; r:evidence (
  <#lemma1434>);
  r:rule <#lemma1435>.

<#lemma1433> a r:Extraction; r:gives {{?x0 a :N287} <= {?x0 a :N286}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1434> a r:Inference; r:gives {:TestVariable a :N285}; r:evidence (
  <#lemma1436>);
  r:rule <#lemma1437>.

<#lemma1435> a r:Extraction; r:gives {{?x0 a :N286} <= {?x0 a :N285}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1436> a r:Inference; r:gives {:TestVariable a :N284}; r:evidence (
  <#lemma1438>);
  r:rule <#lemma1439>.

<#lemma1437> a r:Extraction; r:gives {{?x0 a :N285} <= {?x0 a :N284}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1438> a r:Inference; r:gives {:TestVariable a :N283}; r:evidence (
  <#lemma1440>);
  r:rule <#lemma1441>.

<#lemma1439> a r:Extraction; r:gives {{?x0 a :N284} <= {?x0 a :N283}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1440> a r:Inference; r:gives {:TestVariable a :N282}; r:evidence (
  <#lemma1442>);
  r:rule <#lemma1443>.

<#lemma1441> a r:Extraction; r:gives {{?x0 a :N283} <= {?x0 a :N282}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1442> a r:Inference; r:gives {:TestVariable a :N281}; r:evidence (
  <#lemma1444>);
  r:rule <#lemma1445>.

<#lemma1443> a r:Extraction; r:gives {{?x0 a :N282} <= {?x0 a :N281}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1444> a r:Inference; r:gives {:TestVariable a :N280}; r:evidence (
  <#lemma1446>);
  r:rule <#lemma1447>.

<#lemma1445> a r:Extraction; r:gives {{?x0 a :N281} <= {?x0 a :N280}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1446> a r:Inference; r:gives {:TestVariable a :N279}; r:evidence (
  <#lemma1448>);
  r:rule <#lemma1449>.

<#lemma1447> a r:Extraction; r:gives {{?x0 a :N280} <= {?x0 a :N279}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1448> a r:Inference; r:gives {:TestVariable a :N278}; r:evidence (
  <#lemma1450>);
  r:rule <#lemma1451>.

<#lemma1449> a r:Extraction; r:gives {{?x0 a :N279} <= {?x0 a :N278}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1450> a r:Inference; r:gives {:TestVariable a :N277}; r:evidence (
  <#lemma1452>);
  r:rule <#lemma1453>.

<#lemma1451> a r:Extraction; r:gives {{?x0 a :N278} <= {?x0 a :N277}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1452> a r:Inference; r:gives {:TestVariable a :N276}; r:evidence (
  <#lemma1454>);
  r:rule <#lemma1455>.

<#lemma1453> a r:Extraction; r:gives {{?x0 a :N277} <= {?x0 a :N276}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1454> a r:Inference; r:gives {:TestVariable a :N275}; r:evidence (
  <#lemma1456>);
  r:rule <#lemma1457>.

<#lemma1455> a r:Extraction; r:gives {{?x0 a :N276} <= {?x0 a :N275}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1456> a r:Inference; r:gives {:TestVariable a :N274}; r:evidence (
  <#lemma1458>);
  r:rule <#lemma1459>.

<#lemma1457> a r:Extraction; r:gives {{?x0 a :N275} <= {?x0 a :N274}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1458> a r:Inference; r:gives {:TestVariable a :N273}; r:evidence (
  <#lemma1460>);
  r:rule <#lemma1461>.

<#lemma1459> a r:Extraction; r:gives {{?x0 a :N274} <= {?x0 a :N273}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1460> a r:Inference; r:gives {:TestVariable a :N272}; r:evidence (
  <#lemma1462>);
  r:rule <#lemma1463>.

<#lemma1461> a r:Extraction; r:gives {{?x0 a :N273} <= {?x0 a :N272}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1462> a r:Inference; r:gives {:TestVariable a :N271}; r:evidence (
  <#lemma1464>);
  r:rule <#lemma1465>.

<#lemma1463> a r:Extraction; r:gives {{?x0 a :N272} <= {?x0 a :N271}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1464> a r:Inference; r:gives {:TestVariable a :N270}; r:evidence (
  <#lemma1466>);
  r:rule <#lemma1467>.

<#lemma1465> a r:Extraction; r:gives {{?x0 a :N271} <= {?x0 a :N270}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1466> a r:Inference; r:gives {:TestVariable a :N269}; r:evidence (
  <#lemma1468>);
  r:rule <#lemma1469>.

<#lemma1467> a r:Extraction; r:gives {{?x0 a :N270} <= {?x0 a :N269}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1468> a r:Inference; r:gives {:TestVariable a :N268}; r:evidence (
  <#lemma1470>);
  r:rule <#lemma1471>.

<#lemma1469> a r:Extraction; r:gives {{?x0 a :N269} <= {?x0 a :N268}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1470> a r:Inference; r:gives {:TestVariable a :N267}; r:evidence (
  <#lemma1472>);
  r:rule <#lemma1473>.

<#lemma1471> a r:Extraction; r:gives {{?x0 a :N268} <= {?x0 a :N267}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1472> a r:Inference; r:gives {:TestVariable a :N266}; r:evidence (
  <#lemma1474>);
  r:rule <#lemma1475>.

<#lemma1473> a r:Extraction; r:gives {{?x0 a :N267} <= {?x0 a :N266}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1474> a r:Inference; r:gives {:TestVariable a :N265}; r:evidence (
  <#lemma1476>);
  r:rule <#lemma1477>.

<#lemma1475> a r:Extraction; r:gives {{?x0 a :N266} <= {?x0 a :N265}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1476> a r:Inference; r:gives {:TestVariable a :N264}; r:evidence (
  <#lemma1478>);
  r:rule <#lemma1479>.

<#lemma1477> a r:Extraction; r:gives {{?x0 a :N265} <= {?x0 a :N264}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1478> a r:Inference; r:gives {:TestVariable a :N263}; r:evidence (
  <#lemma1480>);
  r:rule <#lemma1481>.

<#lemma1479> a r:Extraction; r:gives {{?x0 a :N264} <= {?x0 a :N263}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1480> a r:Inference; r:gives {:TestVariable a :N262}; r:evidence (
  <#lemma1482>);
  r:rule <#lemma1483>.

<#lemma1481> a r:Extraction; r:gives {{?x0 a :N263} <= {?x0 a :N262}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1482> a r:Inference; r:gives {:TestVariable a :N261}; r:evidence (
  <#lemma1484>);
  r:rule <#lemma1485>.

<#lemma1483> a r:Extraction; r:gives {{?x0 a :N262} <= {?x0 a :N261}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1484> a r:Inference; r:gives {:TestVariable a :N260}; r:evidence (
  <#lemma1486>);
  r:rule <#lemma1487>.

<#lemma1485> a r:Extraction; r:gives {{?x0 a :N261} <= {?x0 a :N260}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1486> a r:Inference; r:gives {:TestVariable a :N259}; r:evidence (
  <#lemma1488>);
  r:rule <#lemma1489>.

<#lemma1487> a r:Extraction; r:gives {{?x0 a :N260} <= {?x0 a :N259}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1488> a r:Inference; r:gives {:TestVariable a :N258}; r:evidence (
  <#lemma1490>);
  r:rule <#lemma1491>.

<#lemma1489> a r:Extraction; r:gives {{?x0 a :N259} <= {?x0 a :N258}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1490> a r:Inference; r:gives {:TestVariable a :N257}; r:evidence (
  <#lemma1492>);
  r:rule <#lemma1493>.

<#lemma1491> a r:Extraction; r:gives {{?x0 a :N258} <= {?x0 a :N257}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1492> a r:Inference; r:gives {:TestVariable a :N256}; r:evidence (
  <#lemma1494>);
  r:rule <#lemma1495>.

<#lemma1493> a r:Extraction; r:gives {{?x0 a :N257} <= {?x0 a :N256}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1494> a r:Inference; r:gives {:TestVariable a :N255}; r:evidence (
  <#lemma1496>);
  r:rule <#lemma1497>.

<#lemma1495> a r:Extraction; r:gives {{?x0 a :N256} <= {?x0 a :N255}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1496> a r:Inference; r:gives {:TestVariable a :N254}; r:evidence (
  <#lemma1498>);
  r:rule <#lemma1499>.

<#lemma1497> a r:Extraction; r:gives {{?x0 a :N255} <= {?x0 a :N254}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1498> a r:Inference; r:gives {:TestVariable a :N253}; r:evidence (
  <#lemma1500>);
  r:rule <#lemma1501>.

<#lemma1499> a r:Extraction; r:gives {{?x0 a :N254} <= {?x0 a :N253}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1500> a r:Inference; r:gives {:TestVariable a :N252}; r:evidence (
  <#lemma1502>);
  r:rule <#lemma1503>.

<#lemma1501> a r:Extraction; r:gives {{?x0 a :N253} <= {?x0 a :N252}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1502> a r:Inference; r:gives {:TestVariable a :N251}; r:evidence (
  <#lemma1504>);
  r:rule <#lemma1505>.

<#lemma1503> a r:Extraction; r:gives {{?x0 a :N252} <= {?x0 a :N251}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1504> a r:Inference; r:gives {:TestVariable a :N250}; r:evidence (
  <#lemma1506>);
  r:rule <#lemma1507>.

<#lemma1505> a r:Extraction; r:gives {{?x0 a :N251} <= {?x0 a :N250}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1506> a r:Inference; r:gives {:TestVariable a :N249}; r:evidence (
  <#lemma1508>);
  r:rule <#lemma1509>.

<#lemma1507> a r:Extraction; r:gives {{?x0 a :N250} <= {?x0 a :N249}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1508> a r:Inference; r:gives {:TestVariable a :N248}; r:evidence (
  <#lemma1510>);
  r:rule <#lemma1511>.

<#lemma1509> a r:Extraction; r:gives {{?x0 a :N249} <= {?x0 a :N248}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1510> a r:Inference; r:gives {:TestVariable a :N247}; r:evidence (
  <#lemma1512>);
  r:rule <#lemma1513>.

<#lemma1511> a r:Extraction; r:gives {{?x0 a :N248} <= {?x0 a :N247}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1512> a r:Inference; r:gives {:TestVariable a :N246}; r:evidence (
  <#lemma1514>);
  r:rule <#lemma1515>.

<#lemma1513> a r:Extraction; r:gives {{?x0 a :N247} <= {?x0 a :N246}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1514> a r:Inference; r:gives {:TestVariable a :N245}; r:evidence (
  <#lemma1516>);
  r:rule <#lemma1517>.

<#lemma1515> a r:Extraction; r:gives {{?x0 a :N246} <= {?x0 a :N245}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1516> a r:Inference; r:gives {:TestVariable a :N244}; r:evidence (
  <#lemma1518>);
  r:rule <#lemma1519>.

<#lemma1517> a r:Extraction; r:gives {{?x0 a :N245} <= {?x0 a :N244}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1518> a r:Inference; r:gives {:TestVariable a :N243}; r:evidence (
  <#lemma1520>);
  r:rule <#lemma1521>.

<#lemma1519> a r:Extraction; r:gives {{?x0 a :N244} <= {?x0 a :N243}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1520> a r:Inference; r:gives {:TestVariable a :N242}; r:evidence (
  <#lemma1522>);
  r:rule <#lemma1523>.

<#lemma1521> a r:Extraction; r:gives {{?x0 a :N243} <= {?x0 a :N242}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1522> a r:Inference; r:gives {:TestVariable a :N241}; r:evidence (
  <#lemma1524>);
  r:rule <#lemma1525>.

<#lemma1523> a r:Extraction; r:gives {{?x0 a :N242} <= {?x0 a :N241}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1524> a r:Inference; r:gives {:TestVariable a :N240}; r:evidence (
  <#lemma1526>);
  r:rule <#lemma1527>.

<#lemma1525> a r:Extraction; r:gives {{?x0 a :N241} <= {?x0 a :N240}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1526> a r:Inference; r:gives {:TestVariable a :N239}; r:evidence (
  <#lemma1528>);
  r:rule <#lemma1529>.

<#lemma1527> a r:Extraction; r:gives {{?x0 a :N240} <= {?x0 a :N239}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1528> a r:Inference; r:gives {:TestVariable a :N238}; r:evidence (
  <#lemma1530>);
  r:rule <#lemma1531>.

<#lemma1529> a r:Extraction; r:gives {{?x0 a :N239} <= {?x0 a :N238}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1530> a r:Inference; r:gives {:TestVariable a :N237}; r:evidence (
  <#lemma1532>);
  r:rule <#lemma1533>.

<#lemma1531> a r:Extraction; r:gives {{?x0 a :N238} <= {?x0 a :N237}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1532> a r:Inference; r:gives {:TestVariable a :N236}; r:evidence (
  <#lemma1534>);
  r:rule <#lemma1535>.

<#lemma1533> a r:Extraction; r:gives {{?x0 a :N237} <= {?x0 a :N236}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1534> a r:Inference; r:gives {:TestVariable a :N235}; r:evidence (
  <#lemma1536>);
  r:rule <#lemma1537>.

<#lemma1535> a r:Extraction; r:gives {{?x0 a :N236} <= {?x0 a :N235}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1536> a r:Inference; r:gives {:TestVariable a :N234}; r:evidence (
  <#lemma1538>);
  r:rule <#lemma1539>.

<#lemma1537> a r:Extraction; r:gives {{?x0 a :N235} <= {?x0 a :N234}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1538> a r:Inference; r:gives {:TestVariable a :N233}; r:evidence (
  <#lemma1540>);
  r:rule <#lemma1541>.

<#lemma1539> a r:Extraction; r:gives {{?x0 a :N234} <= {?x0 a :N233}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1540> a r:Inference; r:gives {:TestVariable a :N232}; r:evidence (
  <#lemma1542>);
  r:rule <#lemma1543>.

<#lemma1541> a r:Extraction; r:gives {{?x0 a :N233} <= {?x0 a :N232}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1542> a r:Inference; r:gives {:TestVariable a :N231}; r:evidence (
  <#lemma1544>);
  r:rule <#lemma1545>.

<#lemma1543> a r:Extraction; r:gives {{?x0 a :N232} <= {?x0 a :N231}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1544> a r:Inference; r:gives {:TestVariable a :N230}; r:evidence (
  <#lemma1546>);
  r:rule <#lemma1547>.

<#lemma1545> a r:Extraction; r:gives {{?x0 a :N231} <= {?x0 a :N230}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1546> a r:Inference; r:gives {:TestVariable a :N229}; r:evidence (
  <#lemma1548>);
  r:rule <#lemma1549>.

<#lemma1547> a r:Extraction; r:gives {{?x0 a :N230} <= {?x0 a :N229}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1548> a r:Inference; r:gives {:TestVariable a :N228}; r:evidence (
  <#lemma1550>);
  r:rule <#lemma1551>.

<#lemma1549> a r:Extraction; r:gives {{?x0 a :N229} <= {?x0 a :N228}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1550> a r:Inference; r:gives {:TestVariable a :N227}; r:evidence (
  <#lemma1552>);
  r:rule <#lemma1553>.

<#lemma1551> a r:Extraction; r:gives {{?x0 a :N228} <= {?x0 a :N227}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1552> a r:Inference; r:gives {:TestVariable a :N226}; r:evidence (
  <#lemma1554>);
  r:rule <#lemma1555>.

<#lemma1553> a r:Extraction; r:gives {{?x0 a :N227} <= {?x0 a :N226}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1554> a r:Inference; r:gives {:TestVariable a :N225}; r:evidence (
  <#lemma1556>);
  r:rule <#lemma1557>.

<#lemma1555> a r:Extraction; r:gives {{?x0 a :N226} <= {?x0 a :N225}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1556> a r:Inference; r:gives {:TestVariable a :N224}; r:evidence (
  <#lemma1558>);
  r:rule <#lemma1559>.

<#lemma1557> a r:Extraction; r:gives {{?x0 a :N225} <= {?x0 a :N224}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1558> a r:Inference; r:gives {:TestVariable a :N223}; r:evidence (
  <#lemma1560>);
  r:rule <#lemma1561>.

<#lemma1559> a r:Extraction; r:gives {{?x0 a :N224} <= {?x0 a :N223}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1560> a r:Inference; r:gives {:TestVariable a :N222}; r:evidence (
  <#lemma1562>);
  r:rule <#lemma1563>.

<#lemma1561> a r:Extraction; r:gives {{?x0 a :N223} <= {?x0 a :N222}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1562> a r:Inference; r:gives {:TestVariable a :N221}; r:evidence (
  <#lemma1564>);
  r:rule <#lemma1565>.

<#lemma1563> a r:Extraction; r:gives {{?x0 a :N222} <= {?x0 a :N221}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1564> a r:Inference; r:gives {:TestVariable a :N220}; r:evidence (
  <#lemma1566>);
  r:rule <#lemma1567>.

<#lemma1565> a r:Extraction; r:gives {{?x0 a :N221} <= {?x0 a :N220}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1566> a r:Inference; r:gives {:TestVariable a :N219}; r:evidence (
  <#lemma1568>);
  r:rule <#lemma1569>.

<#lemma1567> a r:Extraction; r:gives {{?x0 a :N220} <= {?x0 a :N219}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1568> a r:Inference; r:gives {:TestVariable a :N218}; r:evidence (
  <#lemma1570>);
  r:rule <#lemma1571>.

<#lemma1569> a r:Extraction; r:gives {{?x0 a :N219} <= {?x0 a :N218}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1570> a r:Inference; r:gives {:TestVariable a :N217}; r:evidence (
  <#lemma1572>);
  r:rule <#lemma1573>.

<#lemma1571> a r:Extraction; r:gives {{?x0 a :N218} <= {?x0 a :N217}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1572> a r:Inference; r:gives {:TestVariable a :N216}; r:evidence (
  <#lemma1574>);
  r:rule <#lemma1575>.

<#lemma1573> a r:Extraction; r:gives {{?x0 a :N217} <= {?x0 a :N216}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1574> a r:Inference; r:gives {:TestVariable a :N215}; r:evidence (
  <#lemma1576>);
  r:rule <#lemma1577>.

<#lemma1575> a r:Extraction; r:gives {{?x0 a :N216} <= {?x0 a :N215}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1576> a r:Inference; r:gives {:TestVariable a :N214}; r:evidence (
  <#lemma1578>);
  r:rule <#lemma1579>.

<#lemma1577> a r:Extraction; r:gives {{?x0 a :N215} <= {?x0 a :N214}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1578> a r:Inference; r:gives {:TestVariable a :N213}; r:evidence (
  <#lemma1580>);
  r:rule <#lemma1581>.

<#lemma1579> a r:Extraction; r:gives {{?x0 a :N214} <= {?x0 a :N213}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1580> a r:Inference; r:gives {:TestVariable a :N212}; r:evidence (
  <#lemma1582>);
  r:rule <#lemma1583>.

<#lemma1581> a r:Extraction; r:gives {{?x0 a :N213} <= {?x0 a :N212}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1582> a r:Inference; r:gives {:TestVariable a :N211}; r:evidence (
  <#lemma1584>);
  r:rule <#lemma1585>.

<#lemma1583> a r:Extraction; r:gives {{?x0 a :N212} <= {?x0 a :N211}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1584> a r:Inference; r:gives {:TestVariable a :N210}; r:evidence (
  <#lemma1586>);
  r:rule <#lemma1587>.

<#lemma1585> a r:Extraction; r:gives {{?x0 a :N211} <= {?x0 a :N210}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1586> a r:Inference; r:gives {:TestVariable a :N209}; r:evidence (
  <#lemma1588>);
  r:rule <#lemma1589>.

<#lemma1587> a r:Extraction; r:gives {{?x0 a :N210} <= {?x0 a :N209}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1588> a r:Inference; r:gives {:TestVariable a :N208}; r:evidence (
  <#lemma1590>);
  r:rule <#lemma1591>.

<#lemma1589> a r:Extraction; r:gives {{?x0 a :N209} <= {?x0 a :N208}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1590> a r:Inference; r:gives {:TestVariable a :N207}; r:evidence (
  <#lemma1592>);
  r:rule <#lemma1593>.

<#lemma1591> a r:Extraction; r:gives {{?x0 a :N208} <= {?x0 a :N207}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1592> a r:Inference; r:gives {:TestVariable a :N206}; r:evidence (
  <#lemma1594>);
  r:rule <#lemma1595>.

<#lemma1593> a r:Extraction; r:gives {{?x0 a :N207} <= {?x0 a :N206}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1594> a r:Inference; r:gives {:TestVariable a :N205}; r:evidence (
  <#lemma1596>);
  r:rule <#lemma1597>.

<#lemma1595> a r:Extraction; r:gives {{?x0 a :N206} <= {?x0 a :N205}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1596> a r:Inference; r:gives {:TestVariable a :N204}; r:evidence (
  <#lemma1598>);
  r:rule <#lemma1599>.

<#lemma1597> a r:Extraction; r:gives {{?x0 a :N205} <= {?x0 a :N204}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1598> a r:Inference; r:gives {:TestVariable a :N203}; r:evidence (
  <#lemma1600>);
  r:rule <#lemma1601>.

<#lemma1599> a r:Extraction; r:gives {{?x0 a :N204} <= {?x0 a :N203}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1600> a r:Inference; r:gives {:TestVariable a :N202}; r:evidence (
  <#lemma1602>);
  r:rule <#lemma1603>.

<#lemma1601> a r:Extraction; r:gives {{?x0 a :N203} <= {?x0 a :N202}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1602> a r:Inference; r:gives {:TestVariable a :N201}; r:evidence (
  <#lemma1604>);
  r:rule <#lemma1605>.

<#lemma1603> a r:Extraction; r:gives {{?x0 a :N202} <= {?x0 a :N201}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1604> a r:Inference; r:gives {:TestVariable a :N200}; r:evidence (
  <#lemma1606>);
  r:rule <#lemma1607>.

<#lemma1605> a r:Extraction; r:gives {{?x0 a :N201} <= {?x0 a :N200}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1606> a r:Inference; r:gives {:TestVariable a :N199}; r:evidence (
  <#lemma1608>);
  r:rule <#lemma1609>.

<#lemma1607> a r:Extraction; r:gives {{?x0 a :N200} <= {?x0 a :N199}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1608> a r:Inference; r:gives {:TestVariable a :N198}; r:evidence (
  <#lemma1610>);
  r:rule <#lemma1611>.

<#lemma1609> a r:Extraction; r:gives {{?x0 a :N199} <= {?x0 a :N198}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1610> a r:Inference; r:gives {:TestVariable a :N197}; r:evidence (
  <#lemma1612>);
  r:rule <#lemma1613>.

<#lemma1611> a r:Extraction; r:gives {{?x0 a :N198} <= {?x0 a :N197}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1612> a r:Inference; r:gives {:TestVariable a :N196}; r:evidence (
  <#lemma1614>);
  r:rule <#lemma1615>.

<#lemma1613> a r:Extraction; r:gives {{?x0 a :N197} <= {?x0 a :N196}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1614> a r:Inference; r:gives {:TestVariable a :N195}; r:evidence (
  <#lemma1616>);
  r:rule <#lemma1617>.

<#lemma1615> a r:Extraction; r:gives {{?x0 a :N196} <= {?x0 a :N195}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1616> a r:Inference; r:gives {:TestVariable a :N194}; r:evidence (
  <#lemma1618>);
  r:rule <#lemma1619>.

<#lemma1617> a r:Extraction; r:gives {{?x0 a :N195} <= {?x0 a :N194}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1618> a r:Inference; r:gives {:TestVariable a :N193}; r:evidence (
  <#lemma1620>);
  r:rule <#lemma1621>.

<#lemma1619> a r:Extraction; r:gives {{?x0 a :N194} <= {?x0 a :N193}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1620> a r:Inference; r:gives {:TestVariable a :N192}; r:evidence (
  <#lemma1622>);
  r:rule <#lemma1623>.

<#lemma1621> a r:Extraction; r:gives {{?x0 a :N193} <= {?x0 a :N192}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1622> a r:Inference; r:gives {:TestVariable a :N191}; r:evidence (
  <#lemma1624>);
  r:rule <#lemma1625>.

<#lemma1623> a r:Extraction; r:gives {{?x0 a :N192} <= {?x0 a :N191}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1624> a r:Inference; r:gives {:TestVariable a :N190}; r:evidence (
  <#lemma1626>);
  r:rule <#lemma1627>.

<#lemma1625> a r:Extraction; r:gives {{?x0 a :N191} <= {?x0 a :N190}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1626> a r:Inference; r:gives {:TestVariable a :N189}; r:evidence (
  <#lemma1628>);
  r:rule <#lemma1629>.

<#lemma1627> a r:Extraction; r:gives {{?x0 a :N190} <= {?x0 a :N189}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1628> a r:Inference; r:gives {:TestVariable a :N188}; r:evidence (
  <#lemma1630>);
  r:rule <#lemma1631>.

<#lemma1629> a r:Extraction; r:gives {{?x0 a :N189} <= {?x0 a :N188}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1630> a r:Inference; r:gives {:TestVariable a :N187}; r:evidence (
  <#lemma1632>);
  r:rule <#lemma1633>.

<#lemma1631> a r:Extraction; r:gives {{?x0 a :N188} <= {?x0 a :N187}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1632> a r:Inference; r:gives {:TestVariable a :N186}; r:evidence (
  <#lemma1634>);
  r:rule <#lemma1635>.

<#lemma1633> a r:Extraction; r:gives {{?x0 a :N187} <= {?x0 a :N186}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1634> a r:Inference; r:gives {:TestVariable a :N185}; r:evidence (
  <#lemma1636>);
  r:rule <#lemma1637>.

<#lemma1635> a r:Extraction; r:gives {{?x0 a :N186} <= {?x0 a :N185}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1636> a r:Inference; r:gives {:TestVariable a :N184}; r:evidence (
  <#lemma1638>);
  r:rule <#lemma1639>.

<#lemma1637> a r:Extraction; r:gives {{?x0 a :N185} <= {?x0 a :N184}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1638> a r:Inference; r:gives {:TestVariable a :N183}; r:evidence (
  <#lemma1640>);
  r:rule <#lemma1641>.

<#lemma1639> a r:Extraction; r:gives {{?x0 a :N184} <= {?x0 a :N183}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1640> a r:Inference; r:gives {:TestVariable a :N182}; r:evidence (
  <#lemma1642>);
  r:rule <#lemma1643>.

<#lemma1641> a r:Extraction; r:gives {{?x0 a :N183} <= {?x0 a :N182}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1642> a r:Inference; r:gives {:TestVariable a :N181}; r:evidence (
  <#lemma1644>);
  r:rule <#lemma1645>.

<#lemma1643> a r:Extraction; r:gives {{?x0 a :N182} <= {?x0 a :N181}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1644> a r:Inference; r:gives {:TestVariable a :N180}; r:evidence (
  <#lemma1646>);
  r:rule <#lemma1647>.

<#lemma1645> a r:Extraction; r:gives {{?x0 a :N181} <= {?x0 a :N180}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1646> a r:Inference; r:gives {:TestVariable a :N179}; r:evidence (
  <#lemma1648>);
  r:rule <#lemma1649>.

<#lemma1647> a r:Extraction; r:gives {{?x0 a :N180} <= {?x0 a :N179}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1648> a r:Inference; r:gives {:TestVariable a :N178}; r:evidence (
  <#lemma1650>);
  r:rule <#lemma1651>.

<#lemma1649> a r:Extraction; r:gives {{?x0 a :N179} <= {?x0 a :N178}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1650> a r:Inference; r:gives {:TestVariable a :N177}; r:evidence (
  <#lemma1652>);
  r:rule <#lemma1653>.

<#lemma1651> a r:Extraction; r:gives {{?x0 a :N178} <= {?x0 a :N177}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1652> a r:Inference; r:gives {:TestVariable a :N176}; r:evidence (
  <#lemma1654>);
  r:rule <#lemma1655>.

<#lemma1653> a r:Extraction; r:gives {{?x0 a :N177} <= {?x0 a :N176}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1654> a r:Inference; r:gives {:TestVariable a :N175}; r:evidence (
  <#lemma1656>);
  r:rule <#lemma1657>.

<#lemma1655> a r:Extraction; r:gives {{?x0 a :N176} <= {?x0 a :N175}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1656> a r:Inference; r:gives {:TestVariable a :N174}; r:evidence (
  <#lemma1658>);
  r:rule <#lemma1659>.

<#lemma1657> a r:Extraction; r:gives {{?x0 a :N175} <= {?x0 a :N174}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1658> a r:Inference; r:gives {:TestVariable a :N173}; r:evidence (
  <#lemma1660>);
  r:rule <#lemma1661>.

<#lemma1659> a r:Extraction; r:gives {{?x0 a :N174} <= {?x0 a :N173}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1660> a r:Inference; r:gives {:TestVariable a :N172}; r:evidence (
  <#lemma1662>);
  r:rule <#lemma1663>.

<#lemma1661> a r:Extraction; r:gives {{?x0 a :N173} <= {?x0 a :N172}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1662> a r:Inference; r:gives {:TestVariable a :N171}; r:evidence (
  <#lemma1664>);
  r:rule <#lemma1665>.

<#lemma1663> a r:Extraction; r:gives {{?x0 a :N172} <= {?x0 a :N171}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1664> a r:Inference; r:gives {:TestVariable a :N170}; r:evidence (
  <#lemma1666>);
  r:rule <#lemma1667>.

<#lemma1665> a r:Extraction; r:gives {{?x0 a :N171} <= {?x0 a :N170}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1666> a r:Inference; r:gives {:TestVariable a :N169}; r:evidence (
  <#lemma1668>);
  r:rule <#lemma1669>.

<#lemma1667> a r:Extraction; r:gives {{?x0 a :N170} <= {?x0 a :N169}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1668> a r:Inference; r:gives {:TestVariable a :N168}; r:evidence (
  <#lemma1670>);
  r:rule <#lemma1671>.

<#lemma1669> a r:Extraction; r:gives {{?x0 a :N169} <= {?x0 a :N168}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1670> a r:Inference; r:gives {:TestVariable a :N167}; r:evidence (
  <#lemma1672>);
  r:rule <#lemma1673>.

<#lemma1671> a r:Extraction; r:gives {{?x0 a :N168} <= {?x0 a :N167}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1672> a r:Inference; r:gives {:TestVariable a :N166}; r:evidence (
  <#lemma1674>);
  r:rule <#lemma1675>.

<#lemma1673> a r:Extraction; r:gives {{?x0 a :N167} <= {?x0 a :N166}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1674> a r:Inference; r:gives {:TestVariable a :N165}; r:evidence (
  <#lemma1676>);
  r:rule <#lemma1677>.

<#lemma1675> a r:Extraction; r:gives {{?x0 a :N166} <= {?x0 a :N165}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1676> a r:Inference; r:gives {:TestVariable a :N164}; r:evidence (
  <#lemma1678>);
  r:rule <#lemma1679>.

<#lemma1677> a r:Extraction; r:gives {{?x0 a :N165} <= {?x0 a :N164}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1678> a r:Inference; r:gives {:TestVariable a :N163}; r:evidence (
  <#lemma1680>);
  r:rule <#lemma1681>.

<#lemma1679> a r:Extraction; r:gives {{?x0 a :N164} <= {?x0 a :N163}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1680> a r:Inference; r:gives {:TestVariable a :N162}; r:evidence (
  <#lemma1682>);
  r:rule <#lemma1683>.

<#lemma1681> a r:Extraction; r:gives {{?x0 a :N163} <= {?x0 a :N162}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1682> a r:Inference; r:gives {:TestVariable a :N161}; r:evidence (
  <#lemma1684>);
  r:rule <#lemma1685>.

<#lemma1683> a r:Extraction; r:gives {{?x0 a :N162} <= {?x0 a :N161}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1684> a r:Inference; r:gives {:TestVariable a :N160}; r:evidence (
  <#lemma1686>);
  r:rule <#lemma1687>.

<#lemma1685> a r:Extraction; r:gives {{?x0 a :N161} <= {?x0 a :N160}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1686> a r:Inference; r:gives {:TestVariable a :N159}; r:evidence (
  <#lemma1688>);
  r:rule <#lemma1689>.

<#lemma1687> a r:Extraction; r:gives {{?x0 a :N160} <= {?x0 a :N159}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1688> a r:Inference; r:gives {:TestVariable a :N158}; r:evidence (
  <#lemma1690>);
  r:rule <#lemma1691>.

<#lemma1689> a r:Extraction; r:gives {{?x0 a :N159} <= {?x0 a :N158}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1690> a r:Inference; r:gives {:TestVariable a :N157}; r:evidence (
  <#lemma1692>);
  r:rule <#lemma1693>.

<#lemma1691> a r:Extraction; r:gives {{?x0 a :N158} <= {?x0 a :N157}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1692> a r:Inference; r:gives {:TestVariable a :N156}; r:evidence (
  <#lemma1694>);
  r:rule <#lemma1695>.

<#lemma1693> a r:Extraction; r:gives {{?x0 a :N157} <= {?x0 a :N156}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1694> a r:Inference; r:gives {:TestVariable a :N155}; r:evidence (
  <#lemma1696>);
  r:rule <#lemma1697>.

<#lemma1695> a r:Extraction; r:gives {{?x0 a :N156} <= {?x0 a :N155}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1696> a r:Inference; r:gives {:TestVariable a :N154}; r:evidence (
  <#lemma1698>);
  r:rule <#lemma1699>.

<#lemma1697> a r:Extraction; r:gives {{?x0 a :N155} <= {?x0 a :N154}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1698> a r:Inference; r:gives {:TestVariable a :N153}; r:evidence (
  <#lemma1700>);
  r:rule <#lemma1701>.

<#lemma1699> a r:Extraction; r:gives {{?x0 a :N154} <= {?x0 a :N153}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1700> a r:Inference; r:gives {:TestVariable a :N152}; r:evidence (
  <#lemma1702>);
  r:rule <#lemma1703>.

<#lemma1701> a r:Extraction; r:gives {{?x0 a :N153} <= {?x0 a :N152}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1702> a r:Inference; r:gives {:TestVariable a :N151}; r:evidence (
  <#lemma1704>);
  r:rule <#lemma1705>.

<#lemma1703> a r:Extraction; r:gives {{?x0 a :N152} <= {?x0 a :N151}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1704> a r:Inference; r:gives {:TestVariable a :N150}; r:evidence (
  <#lemma1706>);
  r:rule <#lemma1707>.

<#lemma1705> a r:Extraction; r:gives {{?x0 a :N151} <= {?x0 a :N150}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1706> a r:Inference; r:gives {:TestVariable a :N149}; r:evidence (
  <#lemma1708>);
  r:rule <#lemma1709>.

<#lemma1707> a r:Extraction; r:gives {{?x0 a :N150} <= {?x0 a :N149}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1708> a r:Inference; r:gives {:TestVariable a :N148}; r:evidence (
  <#lemma1710>);
  r:rule <#lemma1711>.

<#lemma1709> a r:Extraction; r:gives {{?x0 a :N149} <= {?x0 a :N148}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1710> a r:Inference; r:gives {:TestVariable a :N147}; r:evidence (
  <#lemma1712>);
  r:rule <#lemma1713>.

<#lemma1711> a r:Extraction; r:gives {{?x0 a :N148} <= {?x0 a :N147}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1712> a r:Inference; r:gives {:TestVariable a :N146}; r:evidence (
  <#lemma1714>);
  r:rule <#lemma1715>.

<#lemma1713> a r:Extraction; r:gives {{?x0 a :N147} <= {?x0 a :N146}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1714> a r:Inference; r:gives {:TestVariable a :N145}; r:evidence (
  <#lemma1716>);
  r:rule <#lemma1717>.

<#lemma1715> a r:Extraction; r:gives {{?x0 a :N146} <= {?x0 a :N145}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1716> a r:Inference; r:gives {:TestVariable a :N144}; r:evidence (
  <#lemma1718>);
  r:rule <#lemma1719>.

<#lemma1717> a r:Extraction; r:gives {{?x0 a :N145} <= {?x0 a :N144}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1718> a r:Inference; r:gives {:TestVariable a :N143}; r:evidence (
  <#lemma1720>);
  r:rule <#lemma1721>.

<#lemma1719> a r:Extraction; r:gives {{?x0 a :N144} <= {?x0 a :N143}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1720> a r:Inference; r:gives {:TestVariable a :N142}; r:evidence (
  <#lemma1722>);
  r:rule <#lemma1723>.

<#lemma1721> a r:Extraction; r:gives {{?x0 a :N143} <= {?x0 a :N142}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1722> a r:Inference; r:gives {:TestVariable a :N141}; r:evidence (
  <#lemma1724>);
  r:rule <#lemma1725>.

<#lemma1723> a r:Extraction; r:gives {{?x0 a :N142} <= {?x0 a :N141}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1724> a r:Inference; r:gives {:TestVariable a :N140}; r:evidence (
  <#lemma1726>);
  r:rule <#lemma1727>.

<#lemma1725> a r:Extraction; r:gives {{?x0 a :N141} <= {?x0 a :N140}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1726> a r:Inference; r:gives {:TestVariable a :N139}; r:evidence (
  <#lemma1728>);
  r:rule <#lemma1729>.

<#lemma1727> a r:Extraction; r:gives {{?x0 a :N140} <= {?x0 a :N139}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1728> a r:Inference; r:gives {:TestVariable a :N138}; r:evidence (
  <#lemma1730>);
  r:rule <#lemma1731>.

<#lemma1729> a r:Extraction; r:gives {{?x0 a :N139} <= {?x0 a :N138}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1730> a r:Inference; r:gives {:TestVariable a :N137}; r:evidence (
  <#lemma1732>);
  r:rule <#lemma1733>.

<#lemma1731> a r:Extraction; r:gives {{?x0 a :N138} <= {?x0 a :N137}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1732> a r:Inference; r:gives {:TestVariable a :N136}; r:evidence (
  <#lemma1734>);
  r:rule <#lemma1735>.

<#lemma1733> a r:Extraction; r:gives {{?x0 a :N137} <= {?x0 a :N136}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1734> a r:Inference; r:gives {:TestVariable a :N135}; r:evidence (
  <#lemma1736>);
  r:rule <#lemma1737>.

<#lemma1735> a r:Extraction; r:gives {{?x0 a :N136} <= {?x0 a :N135}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1736> a r:Inference; r:gives {:TestVariable a :N134}; r:evidence (
  <#lemma1738>);
  r:rule <#lemma1739>.

<#lemma1737> a r:Extraction; r:gives {{?x0 a :N135} <= {?x0 a :N134}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1738> a r:Inference; r:gives {:TestVariable a :N133}; r:evidence (
  <#lemma1740>);
  r:rule <#lemma1741>.

<#lemma1739> a r:Extraction; r:gives {{?x0 a :N134} <= {?x0 a :N133}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1740> a r:Inference; r:gives {:TestVariable a :N132}; r:evidence (
  <#lemma1742>);
  r:rule <#lemma1743>.

<#lemma1741> a r:Extraction; r:gives {{?x0 a :N133} <= {?x0 a :N132}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1742> a r:Inference; r:gives {:TestVariable a :N131}; r:evidence (
  <#lemma1744>);
  r:rule <#lemma1745>.

<#lemma1743> a r:Extraction; r:gives {{?x0 a :N132} <= {?x0 a :N131}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1744> a r:Inference; r:gives {:TestVariable a :N130}; r:evidence (
  <#lemma1746>);
  r:rule <#lemma1747>.

<#lemma1745> a r:Extraction; r:gives {{?x0 a :N131} <= {?x0 a :N130}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1746> a r:Inference; r:gives {:TestVariable a :N129}; r:evidence (
  <#lemma1748>);
  r:rule <#lemma1749>.

<#lemma1747> a r:Extraction; r:gives {{?x0 a :N130} <= {?x0 a :N129}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1748> a r:Inference; r:gives {:TestVariable a :N128}; r:evidence (
  <#lemma1750>);
  r:rule <#lemma1751>.

<#lemma1749> a r:Extraction; r:gives {{?x0 a :N129} <= {?x0 a :N128}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1750> a r:Inference; r:gives {:TestVariable a :N127}; r:evidence (
  <#lemma1752>);
  r:rule <#lemma1753>.

<#lemma1751> a r:Extraction; r:gives {{?x0 a :N128} <= {?x0 a :N127}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1752> a r:Inference; r:gives {:TestVariable a :N126}; r:evidence (
  <#lemma1754>);
  r:rule <#lemma1755>.

<#lemma1753> a r:Extraction; r:gives {{?x0 a :N127} <= {?x0 a :N126}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1754> a r:Inference; r:gives {:TestVariable a :N125}; r:evidence (
  <#lemma1756>);
  r:rule <#lemma1757>.

<#lemma1755> a r:Extraction; r:gives {{?x0 a :N126} <= {?x0 a :N125}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1756> a r:Inference; r:gives {:TestVariable a :N124}; r:evidence (
  <#lemma1758>);
  r:rule <#lemma1759>.

<#lemma1757> a r:Extraction; r:gives {{?x0 a :N125} <= {?x0 a :N124}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1758> a r:Inference; r:gives {:TestVariable a :N123}; r:evidence (
  <#lemma1760>);
  r:rule <#lemma1761>.

<#lemma1759> a r:Extraction; r:gives {{?x0 a :N124} <= {?x0 a :N123}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1760> a r:Inference; r:gives {:TestVariable a :N122}; r:evidence (
  <#lemma1762>);
  r:rule <#lemma1763>.

<#lemma1761> a r:Extraction; r:gives {{?x0 a :N123} <= {?x0 a :N122}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1762> a r:Inference; r:gives {:TestVariable a :N121}; r:evidence (
  <#lemma1764>);
  r:rule <#lemma1765>.

<#lemma1763> a r:Extraction; r:gives {{?x0 a :N122} <= {?x0 a :N121}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1764> a r:Inference; r:gives {:TestVariable a :N120}; r:evidence (
  <#lemma1766>);
  r:rule <#lemma1767>.

<#lemma1765> a r:Extraction; r:gives {{?x0 a :N121} <= {?x0 a :N120}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1766> a r:Inference; r:gives {:TestVariable a :N119}; r:evidence (
  <#lemma1768>);
  r:rule <#lemma1769>.

<#lemma1767> a r:Extraction; r:gives {{?x0 a :N120} <= {?x0 a :N119}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1768> a r:Inference; r:gives {:TestVariable a :N118}; r:evidence (
  <#lemma1770>);
  r:rule <#lemma1771>.

<#lemma1769> a r:Extraction; r:gives {{?x0 a :N119} <= {?x0 a :N118}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1770> a r:Inference; r:gives {:TestVariable a :N117}; r:evidence (
  <#lemma1772>);
  r:rule <#lemma1773>.

<#lemma1771> a r:Extraction; r:gives {{?x0 a :N118} <= {?x0 a :N117}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1772> a r:Inference; r:gives {:TestVariable a :N116}; r:evidence (
  <#lemma1774>);
  r:rule <#lemma1775>.

<#lemma1773> a r:Extraction; r:gives {{?x0 a :N117} <= {?x0 a :N116}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1774> a r:Inference; r:gives {:TestVariable a :N115}; r:evidence (
  <#lemma1776>);
  r:rule <#lemma1777>.

<#lemma1775> a r:Extraction; r:gives {{?x0 a :N116} <= {?x0 a :N115}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1776> a r:Inference; r:gives {:TestVariable a :N114}; r:evidence (
  <#lemma1778>);
  r:rule <#lemma1779>.

<#lemma1777> a r:Extraction; r:gives {{?x0 a :N115} <= {?x0 a :N114}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1778> a r:Inference; r:gives {:TestVariable a :N113}; r:evidence (
  <#lemma1780>);
  r:rule <#lemma1781>.

<#lemma1779> a r:Extraction; r:gives {{?x0 a :N114} <= {?x0 a :N113}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1780> a r:Inference; r:gives {:TestVariable a :N112}; r:evidence (
  <#lemma1782>);
  r:rule <#lemma1783>.

<#lemma1781> a r:Extraction; r:gives {{?x0 a :N113} <= {?x0 a :N112}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1782> a r:Inference; r:gives {:TestVariable a :N111}; r:evidence (
  <#lemma1784>);
  r:rule <#lemma1785>.

<#lemma1783> a r:Extraction; r:gives {{?x0 a :N112} <= {?x0 a :N111}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1784> a r:Inference; r:gives {:TestVariable a :N110}; r:evidence (
  <#lemma1786>);
  r:rule <#lemma1787>.

<#lemma1785> a r:Extraction; r:gives {{?x0 a :N111} <= {?x0 a :N110}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1786> a r:Inference; r:gives {:TestVariable a :N109}; r:evidence (
  <#lemma1788>);
  r:rule <#lemma1789>.

<#lemma1787> a r:Extraction; r:gives {{?x0 a :N110} <= {?x0 a :N109}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1788> a r:Inference; r:gives {:TestVariable a :N108}; r:evidence (
  <#lemma1790>);
  r:rule <#lemma1791>.

<#lemma1789> a r:Extraction; r:gives {{?x0 a :N109} <= {?x0 a :N108}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1790> a r:Inference; r:gives {:TestVariable a :N107}; r:evidence (
  <#lemma1792>);
  r:rule <#lemma1793>.

<#lemma1791> a r:Extraction; r:gives {{?x0 a :N108} <= {?x0 a :N107}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1792> a r:Inference; r:gives {:TestVariable a :N106}; r:evidence (
  <#lemma1794>);
  r:rule <#lemma1795>.

<#lemma1793> a r:Extraction; r:gives {{?x0 a :N107} <= {?x0 a :N106}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1794> a r:Inference; r:gives {:TestVariable a :N105}; r:evidence (
  <#lemma1796>);
  r:rule <#lemma1797>.

<#lemma1795> a r:Extraction; r:gives {{?x0 a :N106} <= {?x0 a :N105}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1796> a r:Inference; r:gives {:TestVariable a :N104}; r:evidence (
  <#lemma1798>);
  r:rule <#lemma1799>.

<#lemma1797> a r:Extraction; r:gives {{?x0 a :N105} <= {?x0 a :N104}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1798> a r:Inference; r:gives {:TestVariable a :N103}; r:evidence (
  <#lemma1800>);
  r:rule <#lemma1801>.

<#lemma1799> a r:Extraction; r:gives {{?x0 a :N104} <= {?x0 a :N103}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1800> a r:Inference; r:gives {:TestVariable a :N102}; r:evidence (
  <#lemma1802>);
  r:rule <#lemma1803>.

<#lemma1801> a r:Extraction; r:gives {{?x0 a :N103} <= {?x0 a :N102}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1802> a r:Inference; r:gives {:TestVariable a :N101}; r:evidence (
  <#lemma1804>);
  r:rule <#lemma1805>.

<#lemma1803> a r:Extraction; r:gives {{?x0 a :N102} <= {?x0 a :N101}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1804> a r:Inference; r:gives {:TestVariable a :N100}; r:evidence (
  <#lemma1806>);
  r:rule <#lemma1807>.

<#lemma1805> a r:Extraction; r:gives {{?x0 a :N101} <= {?x0 a :N100}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1806> a r:Inference; r:gives {:TestVariable a :N99}; r:evidence (
  <#lemma1808>);
  r:rule <#lemma1809>.

<#lemma1807> a r:Extraction; r:gives {{?x0 a :N100} <= {?x0 a :N99}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1808> a r:Inference; r:gives {:TestVariable a :N98}; r:evidence (
  <#lemma1810>);
  r:rule <#lemma1811>.

<#lemma1809> a r:Extraction; r:gives {{?x0 a :N99} <= {?x0 a :N98}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1810> a r:Inference; r:gives {:TestVariable a :N97}; r:evidence (
  <#lemma1812>);
  r:rule <#lemma1813>.

<#lemma1811> a r:Extraction; r:gives {{?x0 a :N98} <= {?x0 a :N97}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1812> a r:Inference; r:gives {:TestVariable a :N96}; r:evidence (
  <#lemma1814>);
  r:rule <#lemma1815>.

<#lemma1813> a r:Extraction; r:gives {{?x0 a :N97} <= {?x0 a :N96}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1814> a r:Inference; r:gives {:TestVariable a :N95}; r:evidence (
  <#lemma1816>);
  r:rule <#lemma1817>.

<#lemma1815> a r:Extraction; r:gives {{?x0 a :N96} <= {?x0 a :N95}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1816> a r:Inference; r:gives {:TestVariable a :N94}; r:evidence (
  <#lemma1818>);
  r:rule <#lemma1819>.

<#lemma1817> a r:Extraction; r:gives {{?x0 a :N95} <= {?x0 a :N94}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1818> a r:Inference; r:gives {:TestVariable a :N93}; r:evidence (
  <#lemma1820>);
  r:rule <#lemma1821>.

<#lemma1819> a r:Extraction; r:gives {{?x0 a :N94} <= {?x0 a :N93}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1820> a r:Inference; r:gives {:TestVariable a :N92}; r:evidence (
  <#lemma1822>);
  r:rule <#lemma1823>.

<#lemma1821> a r:Extraction; r:gives {{?x0 a :N93} <= {?x0 a :N92}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1822> a r:Inference; r:gives {:TestVariable a :N91}; r:evidence (
  <#lemma1824>);
  r:rule <#lemma1825>.

<#lemma1823> a r:Extraction; r:gives {{?x0 a :N92} <= {?x0 a :N91}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1824> a r:Inference; r:gives {:TestVariable a :N90}; r:evidence (
  <#lemma1826>);
  r:rule <#lemma1827>.

<#lemma1825> a r:Extraction; r:gives {{?x0 a :N91} <= {?x0 a :N90}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1826> a r:Inference; r:gives {:TestVariable a :N89}; r:evidence (
  <#lemma1828>);
  r:rule <#lemma1829>.

<#lemma1827> a r:Extraction; r:gives {{?x0 a :N90} <= {?x0 a :N89}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1828> a r:Inference; r:gives {:TestVariable a :N88}; r:evidence (
  <#lemma1830>);
  r:rule <#lemma1831>.

<#lemma1829> a r:Extraction; r:gives {{?x0 a :N89} <= {?x0 a :N88}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1830> a r:Inference; r:gives {:TestVariable a :N87}; r:evidence (
  <#lemma1832>);
  r:rule <#lemma1833>.

<#lemma1831> a r:Extraction; r:gives {{?x0 a :N88} <= {?x0 a :N87}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1832> a r:Inference; r:gives {:TestVariable a :N86}; r:evidence (
  <#lemma1834>);
  r:rule <#lemma1835>.

<#lemma1833> a r:Extraction; r:gives {{?x0 a :N87} <= {?x0 a :N86}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1834> a r:Inference; r:gives {:TestVariable a :N85}; r:evidence (
  <#lemma1836>);
  r:rule <#lemma1837>.

<#lemma1835> a r:Extraction; r:gives {{?x0 a :N86} <= {?x0 a :N85}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1836> a r:Inference; r:gives {:TestVariable a :N84}; r:evidence (
  <#lemma1838>);
  r:rule <#lemma1839>.

<#lemma1837> a r:Extraction; r:gives {{?x0 a :N85} <= {?x0 a :N84}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1838> a r:Inference; r:gives {:TestVariable a :N83}; r:evidence (
  <#lemma1840>);
  r:rule <#lemma1841>.

<#lemma1839> a r:Extraction; r:gives {{?x0 a :N84} <= {?x0 a :N83}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1840> a r:Inference; r:gives {:TestVariable a :N82}; r:evidence (
  <#lemma1842>);
  r:rule <#lemma1843>.

<#lemma1841> a r:Extraction; r:gives {{?x0 a :N83} <= {?x0 a :N82}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1842> a r:Inference; r:gives {:TestVariable a :N81}; r:evidence (
  <#lemma1844>);
  r:rule <#lemma1845>.

<#lemma1843> a r:Extraction; r:gives {{?x0 a :N82} <= {?x0 a :N81}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1844> a r:Inference; r:gives {:TestVariable a :N80}; r:evidence (
  <#lemma1846>);
  r:rule <#lemma1847>.

<#lemma1845> a r:Extraction; r:gives {{?x0 a :N81} <= {?x0 a :N80}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1846> a r:Inference; r:gives {:TestVariable a :N79}; r:evidence (
  <#lemma1848>);
  r:rule <#lemma1849>.

<#lemma1847> a r:Extraction; r:gives {{?x0 a :N80} <= {?x0 a :N79}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1848> a r:Inference; r:gives {:TestVariable a :N78}; r:evidence (
  <#lemma1850>);
  r:rule <#lemma1851>.

<#lemma1849> a r:Extraction; r:gives {{?x0 a :N79} <= {?x0 a :N78}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1850> a r:Inference; r:gives {:TestVariable a :N77}; r:evidence (
  <#lemma1852>);
  r:rule <#lemma1853>.

<#lemma1851> a r:Extraction; r:gives {{?x0 a :N78} <= {?x0 a :N77}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1852> a r:Inference; r:gives {:TestVariable a :N76}; r:evidence (
  <#lemma1854>);
  r:rule <#lemma1855>.

<#lemma1853> a r:Extraction; r:gives {{?x0 a :N77} <= {?x0 a :N76}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1854> a r:Inference; r:gives {:TestVariable a :N75}; r:evidence (
  <#lemma1856>);
  r:rule <#lemma1857>.

<#lemma1855> a r:Extraction; r:gives {{?x0 a :N76} <= {?x0 a :N75}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1856> a r:Inference; r:gives {:TestVariable a :N74}; r:evidence (
  <#lemma1858>);
  r:rule <#lemma1859>.

<#lemma1857> a r:Extraction; r:gives {{?x0 a :N75} <= {?x0 a :N74}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1858> a r:Inference; r:gives {:TestVariable a :N73}; r:evidence (
  <#lemma1860>);
  r:rule <#lemma1861>.

<#lemma1859> a r:Extraction; r:gives {{?x0 a :N74} <= {?x0 a :N73}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1860> a r:Inference; r:gives {:TestVariable a :N72}; r:evidence (
  <#lemma1862>);
  r:rule <#lemma1863>.

<#lemma1861> a r:Extraction; r:gives {{?x0 a :N73} <= {?x0 a :N72}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1862> a r:Inference; r:gives {:TestVariable a :N71}; r:evidence (
  <#lemma1864>);
  r:rule <#lemma1865>.

<#lemma1863> a r:Extraction; r:gives {{?x0 a :N72} <= {?x0 a :N71}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1864> a r:Inference; r:gives {:TestVariable a :N70}; r:evidence (
  <#lemma1866>);
  r:rule <#lemma1867>.

<#lemma1865> a r:Extraction; r:gives {{?x0 a :N71} <= {?x0 a :N70}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1866> a r:Inference; r:gives {:TestVariable a :N69}; r:evidence (
  <#lemma1868>);
  r:rule <#lemma1869>.

<#lemma1867> a r:Extraction; r:gives {{?x0 a :N70} <= {?x0 a :N69}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1868> a r:Inference; r:gives {:TestVariable a :N68}; r:evidence (
  <#lemma1870>);
  r:rule <#lemma1871>.

<#lemma1869> a r:Extraction; r:gives {{?x0 a :N69} <= {?x0 a :N68}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1870> a r:Inference; r:gives {:TestVariable a :N67}; r:evidence (
  <#lemma1872>);
  r:rule <#lemma1873>.

<#lemma1871> a r:Extraction; r:gives {{?x0 a :N68} <= {?x0 a :N67}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1872> a r:Inference; r:gives {:TestVariable a :N66}; r:evidence (
  <#lemma1874>);
  r:rule <#lemma1875>.

<#lemma1873> a r:Extraction; r:gives {{?x0 a :N67} <= {?x0 a :N66}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1874> a r:Inference; r:gives {:TestVariable a :N65}; r:evidence (
  <#lemma1876>);
  r:rule <#lemma1877>.

<#lemma1875> a r:Extraction; r:gives {{?x0 a :N66} <= {?x0 a :N65}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1876> a r:Inference; r:gives {:TestVariable a :N64}; r:evidence (
  <#lemma1878>);
  r:rule <#lemma1879>.

<#lemma1877> a r:Extraction; r:gives {{?x0 a :N65} <= {?x0 a :N64}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1878> a r:Inference; r:gives {:TestVariable a :N63}; r:evidence (
  <#lemma1880>);
  r:rule <#lemma1881>.

<#lemma1879> a r:Extraction; r:gives {{?x0 a :N64} <= {?x0 a :N63}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1880> a r:Inference; r:gives {:TestVariable a :N62}; r:evidence (
  <#lemma1882>);
  r:rule <#lemma1883>.

<#lemma1881> a r:Extraction; r:gives {{?x0 a :N63} <= {?x0 a :N62}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1882> a r:Inference; r:gives {:TestVariable a :N61}; r:evidence (
  <#lemma1884>);
  r:rule <#lemma1885>.

<#lemma1883> a r:Extraction; r:gives {{?x0 a :N62} <= {?x0 a :N61}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1884> a r:Inference; r:gives {:TestVariable a :N60}; r:evidence (
  <#lemma1886>);
  r:rule <#lemma1887>.

<#lemma1885> a r:Extraction; r:gives {{?x0 a :N61} <= {?x0 a :N60}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1886> a r:Inference; r:gives {:TestVariable a :N59}; r:evidence (
  <#lemma1888>);
  r:rule <#lemma1889>.

<#lemma1887> a r:Extraction; r:gives {{?x0 a :N60} <= {?x0 a :N59}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1888> a r:Inference; r:gives {:TestVariable a :N58}; r:evidence (
  <#lemma1890>);
  r:rule <#lemma1891>.

<#lemma1889> a r:Extraction; r:gives {{?x0 a :N59} <= {?x0 a :N58}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1890> a r:Inference; r:gives {:TestVariable a :N57}; r:evidence (
  <#lemma1892>);
  r:rule <#lemma1893>.

<#lemma1891> a r:Extraction; r:gives {{?x0 a :N58} <= {?x0 a :N57}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1892> a r:Inference; r:gives {:TestVariable a :N56}; r:evidence (
  <#lemma1894>);
  r:rule <#lemma1895>.

<#lemma1893> a r:Extraction; r:gives {{?x0 a :N57} <= {?x0 a :N56}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1894> a r:Inference; r:gives {:TestVariable a :N55}; r:evidence (
  <#lemma1896>);
  r:rule <#lemma1897>.

<#lemma1895> a r:Extraction; r:gives {{?x0 a :N56} <= {?x0 a :N55}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1896> a r:Inference; r:gives {:TestVariable a :N54}; r:evidence (
  <#lemma1898>);
  r:rule <#lemma1899>.

<#lemma1897> a r:Extraction; r:gives {{?x0 a :N55} <= {?x0 a :N54}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1898> a r:Inference; r:gives {:TestVariable a :N53}; r:evidence (
  <#lemma1900>);
  r:rule <#lemma1901>.

<#lemma1899> a r:Extraction; r:gives {{?x0 a :N54} <= {?x0 a :N53}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1900> a r:Inference; r:gives {:TestVariable a :N52}; r:evidence (
  <#lemma1902>);
  r:rule <#lemma1903>.

<#lemma1901> a r:Extraction; r:gives {{?x0 a :N53} <= {?x0 a :N52}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1902> a r:Inference; r:gives {:TestVariable a :N51}; r:evidence (
  <#lemma1904>);
  r:rule <#lemma1905>.

<#lemma1903> a r:Extraction; r:gives {{?x0 a :N52} <= {?x0 a :N51}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1904> a r:Inference; r:gives {:TestVariable a :N50}; r:evidence (
  <#lemma1906>);
  r:rule <#lemma1907>.

<#lemma1905> a r:Extraction; r:gives {{?x0 a :N51} <= {?x0 a :N50}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1906> a r:Inference; r:gives {:TestVariable a :N49}; r:evidence (
  <#lemma1908>);
  r:rule <#lemma1909>.

<#lemma1907> a r:Extraction; r:gives {{?x0 a :N50} <= {?x0 a :N49}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1908> a r:Inference; r:gives {:TestVariable a :N48}; r:evidence (
  <#lemma1910>);
  r:rule <#lemma1911>.

<#lemma1909> a r:Extraction; r:gives {{?x0 a :N49} <= {?x0 a :N48}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1910> a r:Inference; r:gives {:TestVariable a :N47}; r:evidence (
  <#lemma1912>);
  r:rule <#lemma1913>.

<#lemma1911> a r:Extraction; r:gives {{?x0 a :N48} <= {?x0 a :N47}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1912> a r:Inference; r:gives {:TestVariable a :N46}; r:evidence (
  <#lemma1914>);
  r:rule <#lemma1915>.

<#lemma1913> a r:Extraction; r:gives {{?x0 a :N47} <= {?x0 a :N46}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1914> a r:Inference; r:gives {:TestVariable a :N45}; r:evidence (
  <#lemma1916>);
  r:rule <#lemma1917>.

<#lemma1915> a r:Extraction; r:gives {{?x0 a :N46} <= {?x0 a :N45}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1916> a r:Inference; r:gives {:TestVariable a :N44}; r:evidence (
  <#lemma1918>);
  r:rule <#lemma1919>.

<#lemma1917> a r:Extraction; r:gives {{?x0 a :N45} <= {?x0 a :N44}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1918> a r:Inference; r:gives {:TestVariable a :N43}; r:evidence (
  <#lemma1920>);
  r:rule <#lemma1921>.

<#lemma1919> a r:Extraction; r:gives {{?x0 a :N44} <= {?x0 a :N43}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1920> a r:Inference; r:gives {:TestVariable a :N42}; r:evidence (
  <#lemma1922>);
  r:rule <#lemma1923>.

<#lemma1921> a r:Extraction; r:gives {{?x0 a :N43} <= {?x0 a :N42}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1922> a r:Inference; r:gives {:TestVariable a :N41}; r:evidence (
  <#lemma1924>);
  r:rule <#lemma1925>.

<#lemma1923> a r:Extraction; r:gives {{?x0 a :N42} <= {?x0 a :N41}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1924> a r:Inference; r:gives {:TestVariable a :N40}; r:evidence (
  <#lemma1926>);
  r:rule <#lemma1927>.

<#lemma1925> a r:Extraction; r:gives {{?x0 a :N41} <= {?x0 a :N40}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1926> a r:Inference; r:gives {:TestVariable a :N39}; r:evidence (
  <#lemma1928>);
  r:rule <#lemma1929>.

<#lemma1927> a r:Extraction; r:gives {{?x0 a :N40} <= {?x0 a :N39}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1928> a r:Inference; r:gives {:TestVariable a :N38}; r:evidence (
  <#lemma1930>);
  r:rule <#lemma1931>.

<#lemma1929> a r:Extraction; r:gives {{?x0 a :N39} <= {?x0 a :N38}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1930> a r:Inference; r:gives {:TestVariable a :N37}; r:evidence (
  <#lemma1932>);
  r:rule <#lemma1933>.

<#lemma1931> a r:Extraction; r:gives {{?x0 a :N38} <= {?x0 a :N37}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1932> a r:Inference; r:gives {:TestVariable a :N36}; r:evidence (
  <#lemma1934>);
  r:rule <#lemma1935>.

<#lemma1933> a r:Extraction; r:gives {{?x0 a :N37} <= {?x0 a :N36}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1934> a r:Inference; r:gives {:TestVariable a :N35}; r:evidence (
  <#lemma1936>);
  r:rule <#lemma1937>.

<#lemma1935> a r:Extraction; r:gives {{?x0 a :N36} <= {?x0 a :N35}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1936> a r:Inference; r:gives {:TestVariable a :N34}; r:evidence (
  <#lemma1938>);
  r:rule <#lemma1939>.

<#lemma1937> a r:Extraction; r:gives {{?x0 a :N35} <= {?x0 a :N34}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1938> a r:Inference; r:gives {:TestVariable a :N33}; r:evidence (
  <#lemma1940>);
  r:rule <#lemma1941>.

<#lemma1939> a r:Extraction; r:gives {{?x0 a :N34} <= {?x0 a :N33}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1940> a r:Inference; r:gives {:TestVariable a :N32}; r:evidence (
  <#lemma1942>);
  r:rule <#lemma1943>.

<#lemma1941> a r:Extraction; r:gives {{?x0 a :N33} <= {?x0 a :N32}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1942> a r:Inference; r:gives {:TestVariable a :N31}; r:evidence (
  <#lemma1944>);
  r:rule <#lemma1945>.

<#lemma1943> a r:Extraction; r:gives {{?x0 a :N32} <= {?x0 a :N31}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1944> a r:Inference; r:gives {:TestVariable a :N30}; r:evidence (
  <#lemma1946>);
  r:rule <#lemma1947>.

<#lemma1945> a r:Extraction; r:gives {{?x0 a :N31} <= {?x0 a :N30}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1946> a r:Inference; r:gives {:TestVariable a :N29}; r:evidence (
  <#lemma1948>);
  r:rule <#lemma1949>.

<#lemma1947> a r:Extraction; r:gives {{?x0 a :N30} <= {?x0 a :N29}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1948> a r:Inference; r:gives {:TestVariable a :N28}; r:evidence (
  <#lemma1950>);
  r:rule <#lemma1951>.

<#lemma1949> a r:Extraction; r:gives {{?x0 a :N29} <= {?x0 a :N28}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1950> a r:Inference; r:gives {:TestVariable a :N27}; r:evidence (
  <#lemma1952>);
  r:rule <#lemma1953>.

<#lemma1951> a r:Extraction; r:gives {{?x0 a :N28} <= {?x0 a :N27}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1952> a r:Inference; r:gives {:TestVariable a :N26}; r:evidence (
  <#lemma1954>);
  r:rule <#lemma1955>.

<#lemma1953> a r:Extraction; r:gives {{?x0 a :N27} <= {?x0 a :N26}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1954> a r:Inference; r:gives {:TestVariable a :N25}; r:evidence (
  <#lemma1956>);
  r:rule <#lemma1957>.

<#lemma1955> a r:Extraction; r:gives {{?x0 a :N26} <= {?x0 a :N25}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1956> a r:Inference; r:gives {:TestVariable a :N24}; r:evidence (
  <#lemma1958>);
  r:rule <#lemma1959>.

<#lemma1957> a r:Extraction; r:gives {{?x0 a :N25} <= {?x0 a :N24}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1958> a r:Inference; r:gives {:TestVariable a :N23}; r:evidence (
  <#lemma1960>);
  r:rule <#lemma1961>.

<#lemma1959> a r:Extraction; r:gives {{?x0 a :N24} <= {?x0 a :N23}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1960> a r:Inference; r:gives {:TestVariable a :N22}; r:evidence (
  <#lemma1962>);
  r:rule <#lemma1963>.

<#lemma1961> a r:Extraction; r:gives {{?x0 a :N23} <= {?x0 a :N22}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1962> a r:Inference; r:gives {:TestVariable a :N21}; r:evidence (
  <#lemma1964>);
  r:rule <#lemma1965>.

<#lemma1963> a r:Extraction; r:gives {{?x0 a :N22} <= {?x0 a :N21}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1964> a r:Inference; r:gives {:TestVariable a :N20}; r:evidence (
  <#lemma1966>);
  r:rule <#lemma1967>.

<#lemma1965> a r:Extraction; r:gives {{?x0 a :N21} <= {?x0 a :N20}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1966> a r:Inference; r:gives {:TestVariable a :N19}; r:evidence (
  <#lemma1968>);
  r:rule <#lemma1969>.

<#lemma1967> a r:Extraction; r:gives {{?x0 a :N20} <= {?x0 a :N19}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1968> a r:Inference; r:gives {:TestVariable a :N18}; r:evidence (
  <#lemma1970>);
  r:rule <#lemma1971>.

<#lemma1969> a r:Extraction; r:gives {{?x0 a :N19} <= {?x0 a :N18}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1970> a r:Inference; r:gives {:TestVariable a :N17}; r:evidence (
  <#lemma1972>);
  r:rule <#lemma1973>.

<#lemma1971> a r:Extraction; r:gives {{?x0 a :N18} <= {?x0 a :N17}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1972> a r:Inference; r:gives {:TestVariable a :N16}; r:evidence (
  <#lemma1974>);
  r:rule <#lemma1975>.

<#lemma1973> a r:Extraction; r:gives {{?x0 a :N17} <= {?x0 a :N16}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1974> a r:Inference; r:gives {:TestVariable a :N15}; r:evidence (
  <#lemma1976>);
  r:rule <#lemma1977>.

<#lemma1975> a r:Extraction; r:gives {{?x0 a :N16} <= {?x0 a :N15}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1976> a r:Inference; r:gives {:TestVariable a :N14}; r:evidence (
  <#lemma1978>);
  r:rule <#lemma1979>.

<#lemma1977> a r:Extraction; r:gives {{?x0 a :N15} <= {?x0 a :N14}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1978> a r:Inference; r:gives {:TestVariable a :N13}; r:evidence (
  <#lemma1980>);
  r:rule <#lemma1981>.

<#lemma1979> a r:Extraction; r:gives {{?x0 a :N14} <= {?x0 a :N13}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1980> a r:Inference; r:gives {:TestVariable a :N12}; r:evidence (
  <#lemma1982>);
  r:rule <#lemma1983>.

<#lemma1981> a r:Extraction; r:gives {{?x0 a :N13} <= {?x0 a :N12}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1982> a r:Inference; r:gives {:TestVariable a :N11}; r:evidence (
  <#lemma1984>);
  r:rule <#lemma1985>.

<#lemma1983> a r:Extraction; r:gives {{?x0 a :N12} <= {?x0 a :N11}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1984> a r:Inference; r:gives {:TestVariable a :N10}; r:evidence (
  <#lemma1986>);
  r:rule <#lemma1987>.

<#lemma1985> a r:Extraction; r:gives {{?x0 a :N11} <= {?x0 a :N10}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1986> a r:Inference; r:gives {:TestVariable a :N9}; r:evidence (
  <#lemma1988>);
  r:rule <#lemma1989>.

<#lemma1987> a r:Extraction; r:gives {{?x0 a :N10} <= {?x0 a :N9}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1988> a r:Inference; r:gives {:TestVariable a :N8}; r:evidence (
  <#lemma1990>);
  r:rule <#lemma1991>.

<#lemma1989> a r:Extraction; r:gives {{?x0 a :N9} <= {?x0 a :N8}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1990> a r:Inference; r:gives {:TestVariable a :N7}; r:evidence (
  <#lemma1992>);
  r:rule <#lemma1993>.

<#lemma1991> a r:Extraction; r:gives {{?x0 a :N8} <= {?x0 a :N7}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1992> a r:Inference; r:gives {:TestVariable a :N6}; r:evidence (
  <#lemma1994>);
  r:rule <#lemma1995>.

<#lemma1993> a r:Extraction; r:gives {{?x0 a :N7} <= {?x0 a :N6}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1994> a r:Inference; r:gives {:TestVariable a :N5}; r:evidence (
  <#lemma1996>);
  r:rule <#lemma1997>.

<#lemma1995> a r:Extraction; r:gives {{?x0 a :N6} <= {?x0 a :N5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1996> a r:Inference; r:gives {:TestVariable a :N4}; r:evidence (
  <#lemma1998>);
  r:rule <#lemma1999>.

<#lemma1997> a r:Extraction; r:gives {{?x0 a :N5} <= {?x0 a :N4}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma1998> a r:Inference; r:gives {:TestVariable a :N3}; r:evidence (
  <#lemma2000>);
  r:rule <#lemma2001>.

<#lemma1999> a r:Extraction; r:gives {{?x0 a :N4} <= {?x0 a :N3}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma2000> a r:Inference; r:gives {:TestVariable a :N2}; r:evidence (
  <#lemma2002>);
  r:rule <#lemma2003>.

<#lemma2001> a r:Extraction; r:gives {{?x0 a :N3} <= {?x0 a :N2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

<#lemma2002> a r:Extraction; r:gives {:TestVariable a :N1};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-facts.n3>].

<#lemma2003> a r:Extraction; r:gives {{?x0 a :N2} <= {?x0 a :N1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2009/12dtb/test-relations-1000.n3>].

#ENDS 2.164 [sec] TC=2 TP=4 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/utf8.n3 --pass

PREFIX : <http://eulersharp.sourceforge.net/2007/07test/try#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:gives {
    :s :p <http://eulersharp.sourceforge.net/2007/07test/try#béc>.
    :s :p "€".
    :s :p "\U0001D7CB"@en-us.
    :s :p "Ø".
    :s :p "the “test” is ok".
  }].

<#lemma1> a r:Inference; r:gives {:s :p <http://eulersharp.sourceforge.net/2007/07test/try#béc>}; r:evidence (
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma2> a r:Inference; r:gives {:s :p "€"}; r:evidence (
  <#lemma8>);
  r:rule <#lemma7>.

<#lemma3> a r:Inference; r:gives {:s :p "\U0001D7CB"@en-us}; r:evidence (
  <#lemma9>);
  r:rule <#lemma7>.

<#lemma4> a r:Inference; r:gives {:s :p "Ø"}; r:evidence (
  <#lemma10>);
  r:rule <#lemma7>.

<#lemma5> a r:Inference; r:gives {:s :p "the “test” is ok"}; r:evidence (
  <#lemma11>);
  r:rule <#lemma7>.

<#lemma6> a r:Extraction; r:gives {:s :p <http://eulersharp.sourceforge.net/2007/07test/try#béc>};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/utf8.n3>].

<#lemma7> a r:Extraction; r:gives {{?x1 ?x0 ?x2} => {?x1 ?x0 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/pass>].

<#lemma8> a r:Extraction; r:gives {:s :p "€"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/utf8.n3>].

<#lemma9> a r:Extraction; r:gives {:s :p "\U0001D7CB"@en-us};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/utf8.n3>].

<#lemma10> a r:Extraction; r:gives {:s :p "Ø"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/utf8.n3>].

<#lemma11> a r:Extraction; r:gives {:s :p "the “test” is ok"};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/utf8.n3>].

#ENDS 0.329 [sec] TC=5 TP=10 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://notes.restdesc.org/2011/images/agent_image.n3 http://notes.restdesc.org/2011/images/description_images.n3 --pass

PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX ex: <http://example.org/image#>
PREFIX http: <http://www.w3.org/2011/http#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:gives {
    <http://notes.restdesc.org/2011/images/myphoto.jpg> a <http://dbpedia.org/resource/Image>.
    _:sk0 http:methodName "POST".
    _:sk0 http:requestURI "/images/".
    _:sk0 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>.
    _:sk1 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>.
    _:sk0 http:resp _:sk1.
    <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:comments _:sk2.
    <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:smallThumbnail _:sk3.
    <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:mediumThumbnail _:sk4.
    <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:belongsTo _:sk5.
  }].

<#lemma1> a r:Inference; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> a <http://dbpedia.org/resource/Image>}; r:evidence (
  <#lemma11>);
  r:rule <#lemma12>.

<#lemma2> a r:Inference; r:gives {_:sk0 http:methodName "POST"}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma3> a r:Inference; r:gives {_:sk0 http:requestURI "/images/"}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma4> a r:Inference; r:gives {_:sk0 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma5> a r:Inference; r:gives {_:sk1 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma6> a r:Inference; r:gives {_:sk0 http:resp _:sk1}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma7> a r:Inference; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> ex:comments _:sk2}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma8> a r:Inference; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> ex:smallThumbnail _:sk3}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma9> a r:Inference; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> ex:mediumThumbnail _:sk4}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma10> a r:Inference; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> ex:belongsTo _:sk5}; r:evidence (
  <#lemma13>);
  r:rule <#lemma12>.

<#lemma11> a r:Extraction; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> a <http://dbpedia.org/resource/Image>};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/agent_image.n3>].

<#lemma12> a r:Extraction; r:gives {{?x1 ?x0 ?x2} => {?x1 ?x0 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/pass>].

<#lemma13> a r:Inference; r:gives {_:sk0 http:methodName "POST".
  _:sk0 http:requestURI "/images/".
  _:sk0 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>.
  _:sk0 http:resp _:sk1.
  _:sk1 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:comments _:sk2.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:smallThumbnail _:sk3.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:mediumThumbnail _:sk4.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:belongsTo _:sk5}; r:evidence (
  <#lemma11>);
  r:rule <#lemma14>.

<#lemma14> a r:Extraction; r:gives {{?x0 a <http://dbpedia.org/resource/Image>} => {_:x1 http:methodName "POST".
  _:x1 http:requestURI "/images/".
  _:x1 http:body ?x0.
  _:x1 http:resp _:x2.
  _:x2 http:body ?x0.
  ?x0 ex:comments _:x3.
  ?x0 ex:smallThumbnail _:x4.
  ?x0 ex:mediumThumbnail _:x5.
  ?x0 ex:belongsTo _:x6}};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/description_images.n3>].

#ENDS 0.364 [sec] TC=11 TP=22 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://notes.restdesc.org/2011/images/server_image.n3 http://notes.restdesc.org/2011/images/description_thumbnail.n3 --pass

PREFIX ex: <http://example.org/image#>
PREFIX http: <http://www.w3.org/2011/http#>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:component <#lemma11>;
  r:gives {
    <http://notes.restdesc.org/images/37> ex:comments <http://notes.restdesc.org/images/37/comments>.
    <http://notes.restdesc.org/images/37> ex:smallThumbnail <http://notes.restdesc.org/images/37/thumb>.
    <http://notes.restdesc.org/images/37> ex:mediumThumbnail <http://notes.restdesc.org/images/37/thumb_med>.
    <http://notes.restdesc.org/images/37> ex:belongsTo <http://notes.restdesc.org/albums/6>.
    _:sk0 http:methodName "GET".
    _:sk0 http:requestURI <http://notes.restdesc.org/images/37/thumb>.
    _:sk0 http:resp _:sk1.
    _:sk1 http:body <http://notes.restdesc.org/images/37/thumb>.
    <http://notes.restdesc.org/images/37> <http://dbpedia.org/ontology/thumbnail> <http://notes.restdesc.org/images/37/thumb>.
    <http://notes.restdesc.org/images/37/thumb> a <http://dbpedia.org/resource/Image>.
    <http://notes.restdesc.org/images/37/thumb> <http://dbpedia.org/ontology/height> 80.0 .
  }].

<#lemma1> a r:Inference; r:gives {<http://notes.restdesc.org/images/37> ex:comments <http://notes.restdesc.org/images/37/comments>}; r:evidence (
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma2> a r:Inference; r:gives {<http://notes.restdesc.org/images/37> ex:smallThumbnail <http://notes.restdesc.org/images/37/thumb>}; r:evidence (
  <#lemma14>);
  r:rule <#lemma13>.

<#lemma3> a r:Inference; r:gives {<http://notes.restdesc.org/images/37> ex:mediumThumbnail <http://notes.restdesc.org/images/37/thumb_med>}; r:evidence (
  <#lemma15>);
  r:rule <#lemma13>.

<#lemma4> a r:Inference; r:gives {<http://notes.restdesc.org/images/37> ex:belongsTo <http://notes.restdesc.org/albums/6>}; r:evidence (
  <#lemma16>);
  r:rule <#lemma13>.

<#lemma5> a r:Inference; r:gives {_:sk0 http:methodName "GET"}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma6> a r:Inference; r:gives {_:sk0 http:requestURI <http://notes.restdesc.org/images/37/thumb>}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma7> a r:Inference; r:gives {_:sk0 http:resp _:sk1}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma8> a r:Inference; r:gives {_:sk1 http:body <http://notes.restdesc.org/images/37/thumb>}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma9> a r:Inference; r:gives {<http://notes.restdesc.org/images/37> <http://dbpedia.org/ontology/thumbnail> <http://notes.restdesc.org/images/37/thumb>}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma10> a r:Inference; r:gives {<http://notes.restdesc.org/images/37/thumb> a <http://dbpedia.org/resource/Image>}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma11> a r:Inference; r:gives {<http://notes.restdesc.org/images/37/thumb> <http://dbpedia.org/ontology/height> 80.0}; r:evidence (
  <#lemma17>);
  r:rule <#lemma13>.

<#lemma12> a r:Extraction; r:gives {<http://notes.restdesc.org/images/37> ex:comments <http://notes.restdesc.org/images/37/comments>};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/server_image.n3>].

<#lemma13> a r:Extraction; r:gives {{?x1 ?x0 ?x2} => {?x1 ?x0 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/pass>].

<#lemma14> a r:Extraction; r:gives {<http://notes.restdesc.org/images/37> ex:smallThumbnail <http://notes.restdesc.org/images/37/thumb>};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/server_image.n3>].

<#lemma15> a r:Extraction; r:gives {<http://notes.restdesc.org/images/37> ex:mediumThumbnail <http://notes.restdesc.org/images/37/thumb_med>};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/server_image.n3>].

<#lemma16> a r:Extraction; r:gives {<http://notes.restdesc.org/images/37> ex:belongsTo <http://notes.restdesc.org/albums/6>};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/server_image.n3>].

<#lemma17> a r:Inference; r:gives {_:sk0 http:methodName "GET".
  _:sk0 http:requestURI <http://notes.restdesc.org/images/37/thumb>.
  _:sk0 http:resp _:sk1.
  _:sk1 http:body <http://notes.restdesc.org/images/37/thumb>.
  <http://notes.restdesc.org/images/37> <http://dbpedia.org/ontology/thumbnail> <http://notes.restdesc.org/images/37/thumb>.
  <http://notes.restdesc.org/images/37/thumb> a <http://dbpedia.org/resource/Image>.
  <http://notes.restdesc.org/images/37/thumb> <http://dbpedia.org/ontology/height> 80.0}; r:evidence (
  <#lemma14>);
  r:rule <#lemma18>.

<#lemma18> a r:Extraction; r:gives {{?x0 ex:smallThumbnail ?x1} => {_:x2 http:methodName "GET".
  _:x2 http:requestURI ?x1.
  _:x2 http:resp _:x3.
  _:x3 http:body ?x1.
  ?x0 <http://dbpedia.org/ontology/thumbnail> ?x1.
  ?x1 a <http://dbpedia.org/resource/Image>.
  ?x1 <http://dbpedia.org/ontology/height> 80.0}};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/description_thumbnail.n3>].

#ENDS 0.209 [sec] TC=12 TP=24 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye --quick-answer http://notes.restdesc.org/2011/images/agent_image.n3 http://notes.restdesc.org/2011/images/description_images.n3 http://notes.restdesc.org/2011/images/description_thumbnail.n3 --query http://notes.restdesc.org/2011/images/agent_goal.n3

PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX ex: <http://example.org/image#>
PREFIX http: <http://www.w3.org/2011/http#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    <http://notes.restdesc.org/2011/images/myphoto.jpg> a <http://dbpedia.org/resource/Image>.
  }].

<#lemma1> a r:Inference; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> a <http://dbpedia.org/resource/Image>}; r:evidence (
  <#lemma2>
  <#lemma3>);
  r:rule <#lemma4>.

<#lemma2> a r:Inference; r:gives {_:sk6 http:methodName "GET".
  _:sk6 http:requestURI _:sk3.
  _:sk6 http:resp _:sk7.
  _:sk7 http:body _:sk3.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> <http://dbpedia.org/ontology/thumbnail> _:sk3.
  _:sk3 a <http://dbpedia.org/resource/Image>.
  _:sk3 <http://dbpedia.org/ontology/height> 80.0}; r:evidence (
  <#lemma5>);
  r:rule <#lemma6>.

<#lemma3> a r:Extraction; r:gives {<http://notes.restdesc.org/2011/images/myphoto.jpg> a <http://dbpedia.org/resource/Image>};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/agent_image.n3>].

<#lemma4> a r:Extraction; r:gives {{<http://notes.restdesc.org/2011/images/myphoto.jpg> <http://dbpedia.org/ontology/thumbnail> ?x0.
  ?x2 ?x1 ?x3} => {?x2 ?x1 ?x3}};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/agent_goal.n3>].

<#lemma5> a r:Inference; r:gives {_:sk0 http:methodName "POST".
  _:sk0 http:requestURI "/images/".
  _:sk0 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>.
  _:sk0 http:resp _:sk1.
  _:sk1 http:body <http://notes.restdesc.org/2011/images/myphoto.jpg>.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:comments _:sk2.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:smallThumbnail _:sk3.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:mediumThumbnail _:sk4.
  <http://notes.restdesc.org/2011/images/myphoto.jpg> ex:belongsTo _:sk5}; r:evidence (
  <#lemma3>);
  r:rule <#lemma7>.

<#lemma6> a r:Extraction; r:gives {{?x0 ex:smallThumbnail ?x1} => {_:x2 http:methodName "GET".
  _:x2 http:requestURI ?x1.
  _:x2 http:resp _:x3.
  _:x3 http:body ?x1.
  ?x0 <http://dbpedia.org/ontology/thumbnail> ?x1.
  ?x1 a <http://dbpedia.org/resource/Image>.
  ?x1 <http://dbpedia.org/ontology/height> 80.0}};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/description_thumbnail.n3>].

<#lemma7> a r:Extraction; r:gives {{?x0 a <http://dbpedia.org/resource/Image>} => {_:x1 http:methodName "POST".
  _:x1 http:requestURI "/images/".
  _:x1 http:body ?x0.
  _:x1 http:resp _:x2.
  _:x2 http:body ?x0.
  ?x0 ex:comments _:x3.
  ?x0 ex:smallThumbnail _:x4.
  ?x0 ex:mediumThumbnail _:x5.
  ?x0 ex:belongsTo _:x6}};
  r:because [ a r:Parsing; r:source <http://notes.restdesc.org/2011/images/description_images.n3>].

#ENDS 0.352 [sec] TC=3 TP=3 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye --quick-answer http://eulersharp.sourceforge.net/2007/07test/fib.n3 --query http://eulersharp.sourceforge.net/2007/07test/fibQ.n3

PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX : <http://eulersharp.sourceforge.net/2007/07test/try#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    (100) :fib 354224848179261915075 .
  }].

<#lemma1> a r:Inference; r:gives {(100) :fib 354224848179261915075}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {(100) :fib 354224848179261915075}; r:evidence (
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma3> a r:Extraction; r:gives {{(100) :fib ?x0} => {(100) :fib ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/fibQ.n3>].

<#lemma4> a r:Inference; r:gives {(100 0 1) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {100 math:greaterThan 1}]
  [ a r:Fact; r:gives {(100 1) math:difference 99}]
  [ a r:Fact; r:gives {(0 1) math:sum 1}]
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma5> a r:Extraction; r:gives {{(?x0) :fib ?x1} <= {(?x0 0 1) :fib ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/fib.n3>].

<#lemma6> a r:Inference; r:gives {(99 1 1) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {99 math:greaterThan 1}]
  [ a r:Fact; r:gives {(99 1) math:difference 98}]
  [ a r:Fact; r:gives {(1 1) math:sum 2}]
  <#lemma8>);
  r:rule <#lemma7>.

<#lemma7> a r:Extraction; r:gives {{(?x0 ?x2 ?x3) :fib ?x5} <= {?x0 math:greaterThan 1 .
  (?x0 1) math:difference ?x1.
  (?x2 ?x3) math:sum ?x4.
  (?x1 ?x3 ?x4) :fib ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/fib.n3>].

<#lemma8> a r:Inference; r:gives {(98 1 2) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {98 math:greaterThan 1}]
  [ a r:Fact; r:gives {(98 1) math:difference 97}]
  [ a r:Fact; r:gives {(1 2) math:sum 3}]
  <#lemma9>);
  r:rule <#lemma7>.

<#lemma9> a r:Inference; r:gives {(97 2 3) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {97 math:greaterThan 1}]
  [ a r:Fact; r:gives {(97 1) math:difference 96}]
  [ a r:Fact; r:gives {(2 3) math:sum 5}]
  <#lemma10>);
  r:rule <#lemma7>.

<#lemma10> a r:Inference; r:gives {(96 3 5) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {96 math:greaterThan 1}]
  [ a r:Fact; r:gives {(96 1) math:difference 95}]
  [ a r:Fact; r:gives {(3 5) math:sum 8}]
  <#lemma11>);
  r:rule <#lemma7>.

<#lemma11> a r:Inference; r:gives {(95 5 8) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {95 math:greaterThan 1}]
  [ a r:Fact; r:gives {(95 1) math:difference 94}]
  [ a r:Fact; r:gives {(5 8) math:sum 13}]
  <#lemma12>);
  r:rule <#lemma7>.

<#lemma12> a r:Inference; r:gives {(94 8 13) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {94 math:greaterThan 1}]
  [ a r:Fact; r:gives {(94 1) math:difference 93}]
  [ a r:Fact; r:gives {(8 13) math:sum 21}]
  <#lemma13>);
  r:rule <#lemma7>.

<#lemma13> a r:Inference; r:gives {(93 13 21) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {93 math:greaterThan 1}]
  [ a r:Fact; r:gives {(93 1) math:difference 92}]
  [ a r:Fact; r:gives {(13 21) math:sum 34}]
  <#lemma14>);
  r:rule <#lemma7>.

<#lemma14> a r:Inference; r:gives {(92 21 34) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {92 math:greaterThan 1}]
  [ a r:Fact; r:gives {(92 1) math:difference 91}]
  [ a r:Fact; r:gives {(21 34) math:sum 55}]
  <#lemma15>);
  r:rule <#lemma7>.

<#lemma15> a r:Inference; r:gives {(91 34 55) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {91 math:greaterThan 1}]
  [ a r:Fact; r:gives {(91 1) math:difference 90}]
  [ a r:Fact; r:gives {(34 55) math:sum 89}]
  <#lemma16>);
  r:rule <#lemma7>.

<#lemma16> a r:Inference; r:gives {(90 55 89) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {90 math:greaterThan 1}]
  [ a r:Fact; r:gives {(90 1) math:difference 89}]
  [ a r:Fact; r:gives {(55 89) math:sum 144}]
  <#lemma17>);
  r:rule <#lemma7>.

<#lemma17> a r:Inference; r:gives {(89 89 144) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {89 math:greaterThan 1}]
  [ a r:Fact; r:gives {(89 1) math:difference 88}]
  [ a r:Fact; r:gives {(89 144) math:sum 233}]
  <#lemma18>);
  r:rule <#lemma7>.

<#lemma18> a r:Inference; r:gives {(88 144 233) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {88 math:greaterThan 1}]
  [ a r:Fact; r:gives {(88 1) math:difference 87}]
  [ a r:Fact; r:gives {(144 233) math:sum 377}]
  <#lemma19>);
  r:rule <#lemma7>.

<#lemma19> a r:Inference; r:gives {(87 233 377) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {87 math:greaterThan 1}]
  [ a r:Fact; r:gives {(87 1) math:difference 86}]
  [ a r:Fact; r:gives {(233 377) math:sum 610}]
  <#lemma20>);
  r:rule <#lemma7>.

<#lemma20> a r:Inference; r:gives {(86 377 610) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {86 math:greaterThan 1}]
  [ a r:Fact; r:gives {(86 1) math:difference 85}]
  [ a r:Fact; r:gives {(377 610) math:sum 987}]
  <#lemma21>);
  r:rule <#lemma7>.

<#lemma21> a r:Inference; r:gives {(85 610 987) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {85 math:greaterThan 1}]
  [ a r:Fact; r:gives {(85 1) math:difference 84}]
  [ a r:Fact; r:gives {(610 987) math:sum 1597}]
  <#lemma22>);
  r:rule <#lemma7>.

<#lemma22> a r:Inference; r:gives {(84 987 1597) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {84 math:greaterThan 1}]
  [ a r:Fact; r:gives {(84 1) math:difference 83}]
  [ a r:Fact; r:gives {(987 1597) math:sum 2584}]
  <#lemma23>);
  r:rule <#lemma7>.

<#lemma23> a r:Inference; r:gives {(83 1597 2584) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {83 math:greaterThan 1}]
  [ a r:Fact; r:gives {(83 1) math:difference 82}]
  [ a r:Fact; r:gives {(1597 2584) math:sum 4181}]
  <#lemma24>);
  r:rule <#lemma7>.

<#lemma24> a r:Inference; r:gives {(82 2584 4181) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {82 math:greaterThan 1}]
  [ a r:Fact; r:gives {(82 1) math:difference 81}]
  [ a r:Fact; r:gives {(2584 4181) math:sum 6765}]
  <#lemma25>);
  r:rule <#lemma7>.

<#lemma25> a r:Inference; r:gives {(81 4181 6765) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {81 math:greaterThan 1}]
  [ a r:Fact; r:gives {(81 1) math:difference 80}]
  [ a r:Fact; r:gives {(4181 6765) math:sum 10946}]
  <#lemma26>);
  r:rule <#lemma7>.

<#lemma26> a r:Inference; r:gives {(80 6765 10946) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {80 math:greaterThan 1}]
  [ a r:Fact; r:gives {(80 1) math:difference 79}]
  [ a r:Fact; r:gives {(6765 10946) math:sum 17711}]
  <#lemma27>);
  r:rule <#lemma7>.

<#lemma27> a r:Inference; r:gives {(79 10946 17711) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {79 math:greaterThan 1}]
  [ a r:Fact; r:gives {(79 1) math:difference 78}]
  [ a r:Fact; r:gives {(10946 17711) math:sum 28657}]
  <#lemma28>);
  r:rule <#lemma7>.

<#lemma28> a r:Inference; r:gives {(78 17711 28657) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {78 math:greaterThan 1}]
  [ a r:Fact; r:gives {(78 1) math:difference 77}]
  [ a r:Fact; r:gives {(17711 28657) math:sum 46368}]
  <#lemma29>);
  r:rule <#lemma7>.

<#lemma29> a r:Inference; r:gives {(77 28657 46368) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {77 math:greaterThan 1}]
  [ a r:Fact; r:gives {(77 1) math:difference 76}]
  [ a r:Fact; r:gives {(28657 46368) math:sum 75025}]
  <#lemma30>);
  r:rule <#lemma7>.

<#lemma30> a r:Inference; r:gives {(76 46368 75025) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {76 math:greaterThan 1}]
  [ a r:Fact; r:gives {(76 1) math:difference 75}]
  [ a r:Fact; r:gives {(46368 75025) math:sum 121393}]
  <#lemma31>);
  r:rule <#lemma7>.

<#lemma31> a r:Inference; r:gives {(75 75025 121393) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {75 math:greaterThan 1}]
  [ a r:Fact; r:gives {(75 1) math:difference 74}]
  [ a r:Fact; r:gives {(75025 121393) math:sum 196418}]
  <#lemma32>);
  r:rule <#lemma7>.

<#lemma32> a r:Inference; r:gives {(74 121393 196418) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {74 math:greaterThan 1}]
  [ a r:Fact; r:gives {(74 1) math:difference 73}]
  [ a r:Fact; r:gives {(121393 196418) math:sum 317811}]
  <#lemma33>);
  r:rule <#lemma7>.

<#lemma33> a r:Inference; r:gives {(73 196418 317811) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {73 math:greaterThan 1}]
  [ a r:Fact; r:gives {(73 1) math:difference 72}]
  [ a r:Fact; r:gives {(196418 317811) math:sum 514229}]
  <#lemma34>);
  r:rule <#lemma7>.

<#lemma34> a r:Inference; r:gives {(72 317811 514229) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {72 math:greaterThan 1}]
  [ a r:Fact; r:gives {(72 1) math:difference 71}]
  [ a r:Fact; r:gives {(317811 514229) math:sum 832040}]
  <#lemma35>);
  r:rule <#lemma7>.

<#lemma35> a r:Inference; r:gives {(71 514229 832040) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {71 math:greaterThan 1}]
  [ a r:Fact; r:gives {(71 1) math:difference 70}]
  [ a r:Fact; r:gives {(514229 832040) math:sum 1346269}]
  <#lemma36>);
  r:rule <#lemma7>.

<#lemma36> a r:Inference; r:gives {(70 832040 1346269) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {70 math:greaterThan 1}]
  [ a r:Fact; r:gives {(70 1) math:difference 69}]
  [ a r:Fact; r:gives {(832040 1346269) math:sum 2178309}]
  <#lemma37>);
  r:rule <#lemma7>.

<#lemma37> a r:Inference; r:gives {(69 1346269 2178309) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {69 math:greaterThan 1}]
  [ a r:Fact; r:gives {(69 1) math:difference 68}]
  [ a r:Fact; r:gives {(1346269 2178309) math:sum 3524578}]
  <#lemma38>);
  r:rule <#lemma7>.

<#lemma38> a r:Inference; r:gives {(68 2178309 3524578) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {68 math:greaterThan 1}]
  [ a r:Fact; r:gives {(68 1) math:difference 67}]
  [ a r:Fact; r:gives {(2178309 3524578) math:sum 5702887}]
  <#lemma39>);
  r:rule <#lemma7>.

<#lemma39> a r:Inference; r:gives {(67 3524578 5702887) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {67 math:greaterThan 1}]
  [ a r:Fact; r:gives {(67 1) math:difference 66}]
  [ a r:Fact; r:gives {(3524578 5702887) math:sum 9227465}]
  <#lemma40>);
  r:rule <#lemma7>.

<#lemma40> a r:Inference; r:gives {(66 5702887 9227465) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {66 math:greaterThan 1}]
  [ a r:Fact; r:gives {(66 1) math:difference 65}]
  [ a r:Fact; r:gives {(5702887 9227465) math:sum 14930352}]
  <#lemma41>);
  r:rule <#lemma7>.

<#lemma41> a r:Inference; r:gives {(65 9227465 14930352) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {65 math:greaterThan 1}]
  [ a r:Fact; r:gives {(65 1) math:difference 64}]
  [ a r:Fact; r:gives {(9227465 14930352) math:sum 24157817}]
  <#lemma42>);
  r:rule <#lemma7>.

<#lemma42> a r:Inference; r:gives {(64 14930352 24157817) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {64 math:greaterThan 1}]
  [ a r:Fact; r:gives {(64 1) math:difference 63}]
  [ a r:Fact; r:gives {(14930352 24157817) math:sum 39088169}]
  <#lemma43>);
  r:rule <#lemma7>.

<#lemma43> a r:Inference; r:gives {(63 24157817 39088169) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {63 math:greaterThan 1}]
  [ a r:Fact; r:gives {(63 1) math:difference 62}]
  [ a r:Fact; r:gives {(24157817 39088169) math:sum 63245986}]
  <#lemma44>);
  r:rule <#lemma7>.

<#lemma44> a r:Inference; r:gives {(62 39088169 63245986) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {62 math:greaterThan 1}]
  [ a r:Fact; r:gives {(62 1) math:difference 61}]
  [ a r:Fact; r:gives {(39088169 63245986) math:sum 102334155}]
  <#lemma45>);
  r:rule <#lemma7>.

<#lemma45> a r:Inference; r:gives {(61 63245986 102334155) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {61 math:greaterThan 1}]
  [ a r:Fact; r:gives {(61 1) math:difference 60}]
  [ a r:Fact; r:gives {(63245986 102334155) math:sum 165580141}]
  <#lemma46>);
  r:rule <#lemma7>.

<#lemma46> a r:Inference; r:gives {(60 102334155 165580141) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {60 math:greaterThan 1}]
  [ a r:Fact; r:gives {(60 1) math:difference 59}]
  [ a r:Fact; r:gives {(102334155 165580141) math:sum 267914296}]
  <#lemma47>);
  r:rule <#lemma7>.

<#lemma47> a r:Inference; r:gives {(59 165580141 267914296) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {59 math:greaterThan 1}]
  [ a r:Fact; r:gives {(59 1) math:difference 58}]
  [ a r:Fact; r:gives {(165580141 267914296) math:sum 433494437}]
  <#lemma48>);
  r:rule <#lemma7>.

<#lemma48> a r:Inference; r:gives {(58 267914296 433494437) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {58 math:greaterThan 1}]
  [ a r:Fact; r:gives {(58 1) math:difference 57}]
  [ a r:Fact; r:gives {(267914296 433494437) math:sum 701408733}]
  <#lemma49>);
  r:rule <#lemma7>.

<#lemma49> a r:Inference; r:gives {(57 433494437 701408733) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {57 math:greaterThan 1}]
  [ a r:Fact; r:gives {(57 1) math:difference 56}]
  [ a r:Fact; r:gives {(433494437 701408733) math:sum 1134903170}]
  <#lemma50>);
  r:rule <#lemma7>.

<#lemma50> a r:Inference; r:gives {(56 701408733 1134903170) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {56 math:greaterThan 1}]
  [ a r:Fact; r:gives {(56 1) math:difference 55}]
  [ a r:Fact; r:gives {(701408733 1134903170) math:sum 1836311903}]
  <#lemma51>);
  r:rule <#lemma7>.

<#lemma51> a r:Inference; r:gives {(55 1134903170 1836311903) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {55 math:greaterThan 1}]
  [ a r:Fact; r:gives {(55 1) math:difference 54}]
  [ a r:Fact; r:gives {(1134903170 1836311903) math:sum 2971215073}]
  <#lemma52>);
  r:rule <#lemma7>.

<#lemma52> a r:Inference; r:gives {(54 1836311903 2971215073) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {54 math:greaterThan 1}]
  [ a r:Fact; r:gives {(54 1) math:difference 53}]
  [ a r:Fact; r:gives {(1836311903 2971215073) math:sum 4807526976}]
  <#lemma53>);
  r:rule <#lemma7>.

<#lemma53> a r:Inference; r:gives {(53 2971215073 4807526976) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {53 math:greaterThan 1}]
  [ a r:Fact; r:gives {(53 1) math:difference 52}]
  [ a r:Fact; r:gives {(2971215073 4807526976) math:sum 7778742049}]
  <#lemma54>);
  r:rule <#lemma7>.

<#lemma54> a r:Inference; r:gives {(52 4807526976 7778742049) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {52 math:greaterThan 1}]
  [ a r:Fact; r:gives {(52 1) math:difference 51}]
  [ a r:Fact; r:gives {(4807526976 7778742049) math:sum 12586269025}]
  <#lemma55>);
  r:rule <#lemma7>.

<#lemma55> a r:Inference; r:gives {(51 7778742049 12586269025) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {51 math:greaterThan 1}]
  [ a r:Fact; r:gives {(51 1) math:difference 50}]
  [ a r:Fact; r:gives {(7778742049 12586269025) math:sum 20365011074}]
  <#lemma56>);
  r:rule <#lemma7>.

<#lemma56> a r:Inference; r:gives {(50 12586269025 20365011074) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {50 math:greaterThan 1}]
  [ a r:Fact; r:gives {(50 1) math:difference 49}]
  [ a r:Fact; r:gives {(12586269025 20365011074) math:sum 32951280099}]
  <#lemma57>);
  r:rule <#lemma7>.

<#lemma57> a r:Inference; r:gives {(49 20365011074 32951280099) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {49 math:greaterThan 1}]
  [ a r:Fact; r:gives {(49 1) math:difference 48}]
  [ a r:Fact; r:gives {(20365011074 32951280099) math:sum 53316291173}]
  <#lemma58>);
  r:rule <#lemma7>.

<#lemma58> a r:Inference; r:gives {(48 32951280099 53316291173) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {48 math:greaterThan 1}]
  [ a r:Fact; r:gives {(48 1) math:difference 47}]
  [ a r:Fact; r:gives {(32951280099 53316291173) math:sum 86267571272}]
  <#lemma59>);
  r:rule <#lemma7>.

<#lemma59> a r:Inference; r:gives {(47 53316291173 86267571272) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {47 math:greaterThan 1}]
  [ a r:Fact; r:gives {(47 1) math:difference 46}]
  [ a r:Fact; r:gives {(53316291173 86267571272) math:sum 139583862445}]
  <#lemma60>);
  r:rule <#lemma7>.

<#lemma60> a r:Inference; r:gives {(46 86267571272 139583862445) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {46 math:greaterThan 1}]
  [ a r:Fact; r:gives {(46 1) math:difference 45}]
  [ a r:Fact; r:gives {(86267571272 139583862445) math:sum 225851433717}]
  <#lemma61>);
  r:rule <#lemma7>.

<#lemma61> a r:Inference; r:gives {(45 139583862445 225851433717) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {45 math:greaterThan 1}]
  [ a r:Fact; r:gives {(45 1) math:difference 44}]
  [ a r:Fact; r:gives {(139583862445 225851433717) math:sum 365435296162}]
  <#lemma62>);
  r:rule <#lemma7>.

<#lemma62> a r:Inference; r:gives {(44 225851433717 365435296162) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {44 math:greaterThan 1}]
  [ a r:Fact; r:gives {(44 1) math:difference 43}]
  [ a r:Fact; r:gives {(225851433717 365435296162) math:sum 591286729879}]
  <#lemma63>);
  r:rule <#lemma7>.

<#lemma63> a r:Inference; r:gives {(43 365435296162 591286729879) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {43 math:greaterThan 1}]
  [ a r:Fact; r:gives {(43 1) math:difference 42}]
  [ a r:Fact; r:gives {(365435296162 591286729879) math:sum 956722026041}]
  <#lemma64>);
  r:rule <#lemma7>.

<#lemma64> a r:Inference; r:gives {(42 591286729879 956722026041) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {42 math:greaterThan 1}]
  [ a r:Fact; r:gives {(42 1) math:difference 41}]
  [ a r:Fact; r:gives {(591286729879 956722026041) math:sum 1548008755920}]
  <#lemma65>);
  r:rule <#lemma7>.

<#lemma65> a r:Inference; r:gives {(41 956722026041 1548008755920) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {41 math:greaterThan 1}]
  [ a r:Fact; r:gives {(41 1) math:difference 40}]
  [ a r:Fact; r:gives {(956722026041 1548008755920) math:sum 2504730781961}]
  <#lemma66>);
  r:rule <#lemma7>.

<#lemma66> a r:Inference; r:gives {(40 1548008755920 2504730781961) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {40 math:greaterThan 1}]
  [ a r:Fact; r:gives {(40 1) math:difference 39}]
  [ a r:Fact; r:gives {(1548008755920 2504730781961) math:sum 4052739537881}]
  <#lemma67>);
  r:rule <#lemma7>.

<#lemma67> a r:Inference; r:gives {(39 2504730781961 4052739537881) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {39 math:greaterThan 1}]
  [ a r:Fact; r:gives {(39 1) math:difference 38}]
  [ a r:Fact; r:gives {(2504730781961 4052739537881) math:sum 6557470319842}]
  <#lemma68>);
  r:rule <#lemma7>.

<#lemma68> a r:Inference; r:gives {(38 4052739537881 6557470319842) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {38 math:greaterThan 1}]
  [ a r:Fact; r:gives {(38 1) math:difference 37}]
  [ a r:Fact; r:gives {(4052739537881 6557470319842) math:sum 10610209857723}]
  <#lemma69>);
  r:rule <#lemma7>.

<#lemma69> a r:Inference; r:gives {(37 6557470319842 10610209857723) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {37 math:greaterThan 1}]
  [ a r:Fact; r:gives {(37 1) math:difference 36}]
  [ a r:Fact; r:gives {(6557470319842 10610209857723) math:sum 17167680177565}]
  <#lemma70>);
  r:rule <#lemma7>.

<#lemma70> a r:Inference; r:gives {(36 10610209857723 17167680177565) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {36 math:greaterThan 1}]
  [ a r:Fact; r:gives {(36 1) math:difference 35}]
  [ a r:Fact; r:gives {(10610209857723 17167680177565) math:sum 27777890035288}]
  <#lemma71>);
  r:rule <#lemma7>.

<#lemma71> a r:Inference; r:gives {(35 17167680177565 27777890035288) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {35 math:greaterThan 1}]
  [ a r:Fact; r:gives {(35 1) math:difference 34}]
  [ a r:Fact; r:gives {(17167680177565 27777890035288) math:sum 44945570212853}]
  <#lemma72>);
  r:rule <#lemma7>.

<#lemma72> a r:Inference; r:gives {(34 27777890035288 44945570212853) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {34 math:greaterThan 1}]
  [ a r:Fact; r:gives {(34 1) math:difference 33}]
  [ a r:Fact; r:gives {(27777890035288 44945570212853) math:sum 72723460248141}]
  <#lemma73>);
  r:rule <#lemma7>.

<#lemma73> a r:Inference; r:gives {(33 44945570212853 72723460248141) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {33 math:greaterThan 1}]
  [ a r:Fact; r:gives {(33 1) math:difference 32}]
  [ a r:Fact; r:gives {(44945570212853 72723460248141) math:sum 117669030460994}]
  <#lemma74>);
  r:rule <#lemma7>.

<#lemma74> a r:Inference; r:gives {(32 72723460248141 117669030460994) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {32 math:greaterThan 1}]
  [ a r:Fact; r:gives {(32 1) math:difference 31}]
  [ a r:Fact; r:gives {(72723460248141 117669030460994) math:sum 190392490709135}]
  <#lemma75>);
  r:rule <#lemma7>.

<#lemma75> a r:Inference; r:gives {(31 117669030460994 190392490709135) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {31 math:greaterThan 1}]
  [ a r:Fact; r:gives {(31 1) math:difference 30}]
  [ a r:Fact; r:gives {(117669030460994 190392490709135) math:sum 308061521170129}]
  <#lemma76>);
  r:rule <#lemma7>.

<#lemma76> a r:Inference; r:gives {(30 190392490709135 308061521170129) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {30 math:greaterThan 1}]
  [ a r:Fact; r:gives {(30 1) math:difference 29}]
  [ a r:Fact; r:gives {(190392490709135 308061521170129) math:sum 498454011879264}]
  <#lemma77>);
  r:rule <#lemma7>.

<#lemma77> a r:Inference; r:gives {(29 308061521170129 498454011879264) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {29 math:greaterThan 1}]
  [ a r:Fact; r:gives {(29 1) math:difference 28}]
  [ a r:Fact; r:gives {(308061521170129 498454011879264) math:sum 806515533049393}]
  <#lemma78>);
  r:rule <#lemma7>.

<#lemma78> a r:Inference; r:gives {(28 498454011879264 806515533049393) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {28 math:greaterThan 1}]
  [ a r:Fact; r:gives {(28 1) math:difference 27}]
  [ a r:Fact; r:gives {(498454011879264 806515533049393) math:sum 1304969544928657}]
  <#lemma79>);
  r:rule <#lemma7>.

<#lemma79> a r:Inference; r:gives {(27 806515533049393 1304969544928657) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {27 math:greaterThan 1}]
  [ a r:Fact; r:gives {(27 1) math:difference 26}]
  [ a r:Fact; r:gives {(806515533049393 1304969544928657) math:sum 2111485077978050}]
  <#lemma80>);
  r:rule <#lemma7>.

<#lemma80> a r:Inference; r:gives {(26 1304969544928657 2111485077978050) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {26 math:greaterThan 1}]
  [ a r:Fact; r:gives {(26 1) math:difference 25}]
  [ a r:Fact; r:gives {(1304969544928657 2111485077978050) math:sum 3416454622906707}]
  <#lemma81>);
  r:rule <#lemma7>.

<#lemma81> a r:Inference; r:gives {(25 2111485077978050 3416454622906707) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {25 math:greaterThan 1}]
  [ a r:Fact; r:gives {(25 1) math:difference 24}]
  [ a r:Fact; r:gives {(2111485077978050 3416454622906707) math:sum 5527939700884757}]
  <#lemma82>);
  r:rule <#lemma7>.

<#lemma82> a r:Inference; r:gives {(24 3416454622906707 5527939700884757) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {24 math:greaterThan 1}]
  [ a r:Fact; r:gives {(24 1) math:difference 23}]
  [ a r:Fact; r:gives {(3416454622906707 5527939700884757) math:sum 8944394323791464}]
  <#lemma83>);
  r:rule <#lemma7>.

<#lemma83> a r:Inference; r:gives {(23 5527939700884757 8944394323791464) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {23 math:greaterThan 1}]
  [ a r:Fact; r:gives {(23 1) math:difference 22}]
  [ a r:Fact; r:gives {(5527939700884757 8944394323791464) math:sum 14472334024676221}]
  <#lemma84>);
  r:rule <#lemma7>.

<#lemma84> a r:Inference; r:gives {(22 8944394323791464 14472334024676221) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {22 math:greaterThan 1}]
  [ a r:Fact; r:gives {(22 1) math:difference 21}]
  [ a r:Fact; r:gives {(8944394323791464 14472334024676221) math:sum 23416728348467685}]
  <#lemma85>);
  r:rule <#lemma7>.

<#lemma85> a r:Inference; r:gives {(21 14472334024676221 23416728348467685) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {21 math:greaterThan 1}]
  [ a r:Fact; r:gives {(21 1) math:difference 20}]
  [ a r:Fact; r:gives {(14472334024676221 23416728348467685) math:sum 37889062373143906}]
  <#lemma86>);
  r:rule <#lemma7>.

<#lemma86> a r:Inference; r:gives {(20 23416728348467685 37889062373143906) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {20 math:greaterThan 1}]
  [ a r:Fact; r:gives {(20 1) math:difference 19}]
  [ a r:Fact; r:gives {(23416728348467685 37889062373143906) math:sum 61305790721611591}]
  <#lemma87>);
  r:rule <#lemma7>.

<#lemma87> a r:Inference; r:gives {(19 37889062373143906 61305790721611591) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {19 math:greaterThan 1}]
  [ a r:Fact; r:gives {(19 1) math:difference 18}]
  [ a r:Fact; r:gives {(37889062373143906 61305790721611591) math:sum 99194853094755497}]
  <#lemma88>);
  r:rule <#lemma7>.

<#lemma88> a r:Inference; r:gives {(18 61305790721611591 99194853094755497) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {18 math:greaterThan 1}]
  [ a r:Fact; r:gives {(18 1) math:difference 17}]
  [ a r:Fact; r:gives {(61305790721611591 99194853094755497) math:sum 160500643816367088}]
  <#lemma89>);
  r:rule <#lemma7>.

<#lemma89> a r:Inference; r:gives {(17 99194853094755497 160500643816367088) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {17 math:greaterThan 1}]
  [ a r:Fact; r:gives {(17 1) math:difference 16}]
  [ a r:Fact; r:gives {(99194853094755497 160500643816367088) math:sum 259695496911122585}]
  <#lemma90>);
  r:rule <#lemma7>.

<#lemma90> a r:Inference; r:gives {(16 160500643816367088 259695496911122585) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {16 math:greaterThan 1}]
  [ a r:Fact; r:gives {(16 1) math:difference 15}]
  [ a r:Fact; r:gives {(160500643816367088 259695496911122585) math:sum 420196140727489673}]
  <#lemma91>);
  r:rule <#lemma7>.

<#lemma91> a r:Inference; r:gives {(15 259695496911122585 420196140727489673) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {15 math:greaterThan 1}]
  [ a r:Fact; r:gives {(15 1) math:difference 14}]
  [ a r:Fact; r:gives {(259695496911122585 420196140727489673) math:sum 679891637638612258}]
  <#lemma92>);
  r:rule <#lemma7>.

<#lemma92> a r:Inference; r:gives {(14 420196140727489673 679891637638612258) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {14 math:greaterThan 1}]
  [ a r:Fact; r:gives {(14 1) math:difference 13}]
  [ a r:Fact; r:gives {(420196140727489673 679891637638612258) math:sum 1100087778366101931}]
  <#lemma93>);
  r:rule <#lemma7>.

<#lemma93> a r:Inference; r:gives {(13 679891637638612258 1100087778366101931) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {13 math:greaterThan 1}]
  [ a r:Fact; r:gives {(13 1) math:difference 12}]
  [ a r:Fact; r:gives {(679891637638612258 1100087778366101931) math:sum 1779979416004714189}]
  <#lemma94>);
  r:rule <#lemma7>.

<#lemma94> a r:Inference; r:gives {(12 1100087778366101931 1779979416004714189) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {12 math:greaterThan 1}]
  [ a r:Fact; r:gives {(12 1) math:difference 11}]
  [ a r:Fact; r:gives {(1100087778366101931 1779979416004714189) math:sum 2880067194370816120}]
  <#lemma95>);
  r:rule <#lemma7>.

<#lemma95> a r:Inference; r:gives {(11 1779979416004714189 2880067194370816120) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {11 math:greaterThan 1}]
  [ a r:Fact; r:gives {(11 1) math:difference 10}]
  [ a r:Fact; r:gives {(1779979416004714189 2880067194370816120) math:sum 4660046610375530309}]
  <#lemma96>);
  r:rule <#lemma7>.

<#lemma96> a r:Inference; r:gives {(10 2880067194370816120 4660046610375530309) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {10 math:greaterThan 1}]
  [ a r:Fact; r:gives {(10 1) math:difference 9}]
  [ a r:Fact; r:gives {(2880067194370816120 4660046610375530309) math:sum 7540113804746346429}]
  <#lemma97>);
  r:rule <#lemma7>.

<#lemma97> a r:Inference; r:gives {(9 4660046610375530309 7540113804746346429) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {9 math:greaterThan 1}]
  [ a r:Fact; r:gives {(9 1) math:difference 8}]
  [ a r:Fact; r:gives {(4660046610375530309 7540113804746346429) math:sum 12200160415121876738}]
  <#lemma98>);
  r:rule <#lemma7>.

<#lemma98> a r:Inference; r:gives {(8 7540113804746346429 12200160415121876738) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {8 math:greaterThan 1}]
  [ a r:Fact; r:gives {(8 1) math:difference 7}]
  [ a r:Fact; r:gives {(7540113804746346429 12200160415121876738) math:sum 19740274219868223167}]
  <#lemma99>);
  r:rule <#lemma7>.

<#lemma99> a r:Inference; r:gives {(7 12200160415121876738 19740274219868223167) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {7 math:greaterThan 1}]
  [ a r:Fact; r:gives {(7 1) math:difference 6}]
  [ a r:Fact; r:gives {(12200160415121876738 19740274219868223167) math:sum 31940434634990099905}]
  <#lemma100>);
  r:rule <#lemma7>.

<#lemma100> a r:Inference; r:gives {(6 19740274219868223167 31940434634990099905) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {6 math:greaterThan 1}]
  [ a r:Fact; r:gives {(6 1) math:difference 5}]
  [ a r:Fact; r:gives {(19740274219868223167 31940434634990099905) math:sum 51680708854858323072}]
  <#lemma101>);
  r:rule <#lemma7>.

<#lemma101> a r:Inference; r:gives {(5 31940434634990099905 51680708854858323072) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {5 math:greaterThan 1}]
  [ a r:Fact; r:gives {(5 1) math:difference 4}]
  [ a r:Fact; r:gives {(31940434634990099905 51680708854858323072) math:sum 83621143489848422977}]
  <#lemma102>);
  r:rule <#lemma7>.

<#lemma102> a r:Inference; r:gives {(4 51680708854858323072 83621143489848422977) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {4 math:greaterThan 1}]
  [ a r:Fact; r:gives {(4 1) math:difference 3}]
  [ a r:Fact; r:gives {(51680708854858323072 83621143489848422977) math:sum 135301852344706746049}]
  <#lemma103>);
  r:rule <#lemma7>.

<#lemma103> a r:Inference; r:gives {(3 83621143489848422977 135301852344706746049) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {3 math:greaterThan 1}]
  [ a r:Fact; r:gives {(3 1) math:difference 2}]
  [ a r:Fact; r:gives {(83621143489848422977 135301852344706746049) math:sum 218922995834555169026}]
  <#lemma104>);
  r:rule <#lemma7>.

<#lemma104> a r:Inference; r:gives {(2 135301852344706746049 218922995834555169026) :fib 354224848179261915075}; r:evidence (
  [ a r:Fact; r:gives {2 math:greaterThan 1}]
  [ a r:Fact; r:gives {(2 1) math:difference 1}]
  [ a r:Fact; r:gives {(135301852344706746049 218922995834555169026) math:sum 354224848179261915075}]
  <#lemma105>);
  r:rule <#lemma7>.

<#lemma105> a r:Extraction; r:gives {(1 218922995834555169026 354224848179261915075) :fib 354224848179261915075};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/fib.n3>].

#ENDS 0.658 [sec] TC=1 TP=1 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/tak.n3 --query http://eulersharp.sourceforge.net/2007/07test/takQ.n3

PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>
PREFIX : <http://eulersharp.sourceforge.net/2007/07test/tak#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    (18 13 8) :tak 13 .
  }].

<#lemma1> a r:Inference; r:gives {(18 13 8) :tak 13}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {(18 13 8) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(18 1) prolog:minus 17}]
  <#lemma4>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma5>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma6>
  <#lemma7>);
  r:rule <#lemma8>.

<#lemma3> a r:Extraction; r:gives {{(18 13 8) :tak ?x0} => {(18 13 8) :tak ?x0}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/takQ.n3>].

<#lemma4> a r:Inference; r:gives {(17 13 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma9>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma10>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma8>.

<#lemma5> a r:Inference; r:gives {(12 8 18) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma13>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma14>
  [ a r:Fact; r:gives {(18 1) prolog:minus 17}]
  <#lemma15>
  <#lemma16>);
  r:rule <#lemma8>.

<#lemma6> a r:Inference; r:gives {(7 18 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(7 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma7> a r:Inference; r:gives {(9 12 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(9 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma8> a r:Extraction; r:gives {{(?x1 1) prolog:minus ?x0.
  (?x0 ?x2 ?x3) :tak ?x4.
  (?x2 1) prolog:minus ?x5.
  (?x5 ?x3 ?x1) :tak ?x6.
  (?x3 1) prolog:minus ?x7.
  (?x7 ?x1 ?x2) :tak ?x8.
  (?x4 ?x6 ?x8) :tak ?x9} => {(?x1 ?x2 ?x3) :tak ?x9}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/tak.n3>].

<#lemma9> a r:Inference; r:gives {(16 13 8) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma18>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma19>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma20>
  <#lemma7>);
  r:rule <#lemma8>.

<#lemma10> a r:Inference; r:gives {(12 8 17) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma21>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma22>
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma23>
  <#lemma24>);
  r:rule <#lemma8>.

<#lemma11> a r:Inference; r:gives {(7 17 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(7 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma12> a r:Inference; r:gives {(13 9 13) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma25>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma26>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma27>
  <#lemma28>);
  r:rule <#lemma8>.

<#lemma13> a r:Inference; r:gives {(11 8 18) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma29>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma30>
  [ a r:Fact; r:gives {(18 1) prolog:minus 17}]
  <#lemma31>
  <#lemma32>);
  r:rule <#lemma8>.

<#lemma14> a r:Inference; r:gives {(7 18 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(7 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma15> a r:Inference; r:gives {(17 12 8) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma23>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma21>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma22>
  <#lemma33>);
  r:rule <#lemma8>.

<#lemma16> a r:Inference; r:gives {(9 12 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(9 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma17> a r:Extraction; r:gives {{(?x0 ?x1 ?x2) :tak ?x2} <= {(?x0 ?x1) prolog:arithmetic_less_than_or_equal true.
  () prolog:cut true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/tak.n3>].

<#lemma18> a r:Inference; r:gives {(15 13 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma34>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma35>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma36>
  <#lemma12>);
  r:rule <#lemma8>.

<#lemma19> a r:Inference; r:gives {(12 8 16) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma37>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma38>
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma39>
  <#lemma16>);
  r:rule <#lemma8>.

<#lemma20> a r:Inference; r:gives {(7 16 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(7 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma21> a r:Inference; r:gives {(11 8 17) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma40>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma41>
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma42>
  <#lemma43>);
  r:rule <#lemma8>.

<#lemma22> a r:Inference; r:gives {(7 17 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(7 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma23> a r:Inference; r:gives {(16 12 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma39>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma37>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma38>
  <#lemma44>);
  r:rule <#lemma8>.

<#lemma24> a r:Inference; r:gives {(11 12 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma25> a r:Inference; r:gives {(12 9 13) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma45>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma46>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma47>
  <#lemma24>);
  r:rule <#lemma8>.

<#lemma26> a r:Inference; r:gives {(8 13 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(8 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma27> a r:Inference; r:gives {(12 13 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma28> a r:Inference; r:gives {(9 13 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma29> a r:Inference; r:gives {(10 8 18) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma48>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma49>
  [ a r:Fact; r:gives {(18 1) prolog:minus 17}]
  <#lemma50>
  <#lemma51>);
  r:rule <#lemma8>.

<#lemma30> a r:Inference; r:gives {(7 18 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma31> a r:Inference; r:gives {(17 11 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma42>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma40>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma41>
  <#lemma52>);
  r:rule <#lemma8>.

<#lemma32> a r:Inference; r:gives {(10 11 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma33> a r:Inference; r:gives {(9 11 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(9 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma34> a r:Inference; r:gives {(14 13 8) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma53>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma54>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma55>
  <#lemma56>);
  r:rule <#lemma8>.

<#lemma35> a r:Inference; r:gives {(12 8 15) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma57>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma58>
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma59>
  <#lemma24>);
  r:rule <#lemma8>.

<#lemma36> a r:Inference; r:gives {(7 15 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(7 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma37> a r:Inference; r:gives {(11 8 16) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma60>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma61>
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma62>
  <#lemma32>);
  r:rule <#lemma8>.

<#lemma38> a r:Inference; r:gives {(7 16 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(7 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma39> a r:Inference; r:gives {(15 12 8) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma59>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma57>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma58>
  <#lemma33>);
  r:rule <#lemma8>.

<#lemma40> a r:Inference; r:gives {(10 8 17) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma63>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma64>
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma65>
  <#lemma66>);
  r:rule <#lemma8>.

<#lemma41> a r:Inference; r:gives {(7 17 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma42> a r:Inference; r:gives {(16 11 8) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma62>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma60>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma61>
  <#lemma67>);
  r:rule <#lemma8>.

<#lemma43> a r:Inference; r:gives {(9 11 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(9 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma44> a r:Inference; r:gives {(12 9 12) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma68>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma69>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma24>
  <#lemma70>);
  r:rule <#lemma8>.

<#lemma45> a r:Inference; r:gives {(11 9 13) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma71>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma72>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma73>
  <#lemma74>);
  r:rule <#lemma8>.

<#lemma46> a r:Inference; r:gives {(8 13 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(8 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma47> a r:Inference; r:gives {(12 12 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma48> a r:Inference; r:gives {(9 8 18) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma75>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma76>
  [ a r:Fact; r:gives {(18 1) prolog:minus 17}]
  <#lemma77>
  <#lemma78>);
  r:rule <#lemma8>.

<#lemma49> a r:Inference; r:gives {(7 18 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma50> a r:Inference; r:gives {(17 10 8) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma65>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma63>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma64>
  <#lemma79>);
  r:rule <#lemma8>.

<#lemma51> a r:Inference; r:gives {(9 10 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(9 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma52> a r:Inference; r:gives {(11 9 11) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma80>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma81>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma32>);
  r:rule <#lemma8>.

<#lemma53> a r:Inference; r:gives {(13 13 8) :tak 8}; r:evidence (
  [ a r:Fact; r:gives {(13 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma54> a r:Inference; r:gives {(12 8 14) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma82>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma83>
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma84>
  <#lemma16>);
  r:rule <#lemma8>.

<#lemma55> a r:Inference; r:gives {(7 14 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(7 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma56> a r:Inference; r:gives {(8 12 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(8 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma57> a r:Inference; r:gives {(11 8 15) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma85>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma86>
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma87>
  <#lemma43>);
  r:rule <#lemma8>.

<#lemma58> a r:Inference; r:gives {(7 15 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(7 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma59> a r:Inference; r:gives {(14 12 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma84>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma82>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma83>
  <#lemma44>);
  r:rule <#lemma8>.

<#lemma60> a r:Inference; r:gives {(10 8 16) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma88>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma89>
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma90>
  <#lemma51>);
  r:rule <#lemma8>.

<#lemma61> a r:Inference; r:gives {(7 16 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma62> a r:Inference; r:gives {(15 11 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma87>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma85>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma86>
  <#lemma52>);
  r:rule <#lemma8>.

<#lemma63> a r:Inference; r:gives {(9 8 17) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma91>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma92>
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma93>
  <#lemma94>);
  r:rule <#lemma8>.

<#lemma64> a r:Inference; r:gives {(7 17 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma65> a r:Inference; r:gives {(16 10 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma90>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma88>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma89>
  <#lemma95>);
  r:rule <#lemma8>.

<#lemma66> a r:Inference; r:gives {(9 10 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma67> a r:Inference; r:gives {(9 10 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(9 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma68> a r:Inference; r:gives {(11 9 12) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma96>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma97>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma98>
  <#lemma32>);
  r:rule <#lemma8>.

<#lemma69> a r:Inference; r:gives {(8 12 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(8 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma70> a r:Inference; r:gives {(9 12 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma71> a r:Inference; r:gives {(10 9 13) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma99>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma100>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma101>
  <#lemma102>);
  r:rule <#lemma8>.

<#lemma72> a r:Inference; r:gives {(8 13 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(8 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma73> a r:Inference; r:gives {(12 11 9) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma98>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma96>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma97>
  <#lemma67>);
  r:rule <#lemma8>.

<#lemma74> a r:Inference; r:gives {(10 11 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(10 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma75> a r:Inference; r:gives {(8 8 18) :tak 18}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma76> a r:Inference; r:gives {(7 18 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma77> a r:Inference; r:gives {(17 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma93>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma91>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma92>
  <#lemma103>);
  r:rule <#lemma8>.

<#lemma78> a r:Inference; r:gives {(18 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(18 1) prolog:minus 17}]
  <#lemma94>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma104>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma105>
  <#lemma106>);
  r:rule <#lemma8>.

<#lemma79> a r:Inference; r:gives {(9 9 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(9 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma80> a r:Inference; r:gives {(10 9 11) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma107>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma108>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma109>
  <#lemma110>);
  r:rule <#lemma8>.

<#lemma81> a r:Inference; r:gives {(8 11 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(8 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma82> a r:Inference; r:gives {(11 8 14) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma111>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma112>
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma113>
  <#lemma32>);
  r:rule <#lemma8>.

<#lemma83> a r:Inference; r:gives {(7 14 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(7 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma84> a r:Inference; r:gives {(13 12 8) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma114>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma115>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma116>
  <#lemma117>);
  r:rule <#lemma8>.

<#lemma85> a r:Inference; r:gives {(10 8 15) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma118>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma119>
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma120>
  <#lemma66>);
  r:rule <#lemma8>.

<#lemma86> a r:Inference; r:gives {(7 15 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma87> a r:Inference; r:gives {(14 11 8) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma113>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma111>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma112>
  <#lemma67>);
  r:rule <#lemma8>.

<#lemma88> a r:Inference; r:gives {(9 8 16) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma121>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma122>
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma123>
  <#lemma124>);
  r:rule <#lemma8>.

<#lemma89> a r:Inference; r:gives {(7 16 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma90> a r:Inference; r:gives {(15 10 8) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma120>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma118>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma119>
  <#lemma79>);
  r:rule <#lemma8>.

<#lemma91> a r:Inference; r:gives {(8 8 17) :tak 17}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma92> a r:Inference; r:gives {(7 17 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma93> a r:Inference; r:gives {(16 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma123>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma121>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma122>
  <#lemma125>);
  r:rule <#lemma8>.

<#lemma94> a r:Inference; r:gives {(17 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(17 1) prolog:minus 16}]
  <#lemma124>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma126>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma127>
  <#lemma103>);
  r:rule <#lemma8>.

<#lemma95> a r:Inference; r:gives {(10 9 10) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma79>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma128>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma66>
  <#lemma109>);
  r:rule <#lemma8>.

<#lemma96> a r:Inference; r:gives {(10 9 12) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma129>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma130>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma110>
  <#lemma131>);
  r:rule <#lemma8>.

<#lemma97> a r:Inference; r:gives {(8 12 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(8 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma98> a r:Inference; r:gives {(11 11 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma99> a r:Inference; r:gives {(9 9 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(9 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma100> a r:Inference; r:gives {(8 13 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(8 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma101> a r:Inference; r:gives {(12 10 9) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma110>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma129>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma130>
  <#lemma132>);
  r:rule <#lemma8>.

<#lemma102> a r:Inference; r:gives {(13 10 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma131>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma133>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma134>
  <#lemma135>);
  r:rule <#lemma8>.

<#lemma103> a r:Inference; r:gives {(9 17 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma104> a r:Inference; r:gives {(8 9 18) :tak 18}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma105> a r:Inference; r:gives {(8 18 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma106> a r:Inference; r:gives {(9 18 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 18) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma107> a r:Inference; r:gives {(9 9 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(9 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma108> a r:Inference; r:gives {(8 11 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(8 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma109> a r:Inference; r:gives {(10 10 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma110> a r:Inference; r:gives {(11 10 9) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma109>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma107>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma108>
  <#lemma136>);
  r:rule <#lemma8>.

<#lemma111> a r:Inference; r:gives {(10 8 14) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma137>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma138>
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma139>
  <#lemma51>);
  r:rule <#lemma8>.

<#lemma112> a r:Inference; r:gives {(7 14 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma113> a r:Inference; r:gives {(13 11 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma140>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma141>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma142>
  <#lemma52>);
  r:rule <#lemma8>.

<#lemma114> a r:Inference; r:gives {(12 12 8) :tak 8}; r:evidence (
  [ a r:Fact; r:gives {(12 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma115> a r:Inference; r:gives {(11 8 13) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma141>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma142>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma140>
  <#lemma43>);
  r:rule <#lemma8>.

<#lemma116> a r:Inference; r:gives {(7 13 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(7 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma117> a r:Inference; r:gives {(8 11 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(8 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma118> a r:Inference; r:gives {(9 8 15) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma143>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma144>
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma145>
  <#lemma146>);
  r:rule <#lemma8>.

<#lemma119> a r:Inference; r:gives {(7 15 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma120> a r:Inference; r:gives {(14 10 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma139>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma137>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma138>
  <#lemma95>);
  r:rule <#lemma8>.

<#lemma121> a r:Inference; r:gives {(8 8 16) :tak 16}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma122> a r:Inference; r:gives {(7 16 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma123> a r:Inference; r:gives {(15 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma145>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma143>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma144>
  <#lemma147>);
  r:rule <#lemma8>.

<#lemma124> a r:Inference; r:gives {(16 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(16 1) prolog:minus 15}]
  <#lemma146>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma148>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma149>
  <#lemma125>);
  r:rule <#lemma8>.

<#lemma125> a r:Inference; r:gives {(9 16 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma126> a r:Inference; r:gives {(8 9 17) :tak 17}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma127> a r:Inference; r:gives {(8 17 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 17) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma128> a r:Inference; r:gives {(8 10 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(8 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma129> a r:Inference; r:gives {(9 9 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(9 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma130> a r:Inference; r:gives {(8 12 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(8 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma131> a r:Inference; r:gives {(12 10 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma150>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma151>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma152>
  <#lemma132>);
  r:rule <#lemma8>.

<#lemma132> a r:Inference; r:gives {(10 12 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma133> a r:Inference; r:gives {(9 10 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(9 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma134> a r:Inference; r:gives {(9 13 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(9 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma135> a r:Inference; r:gives {(10 13 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma136> a r:Inference; r:gives {(9 11 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(9 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma137> a r:Inference; r:gives {(9 8 14) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma153>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma154>
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma155>
  <#lemma156>);
  r:rule <#lemma8>.

<#lemma138> a r:Inference; r:gives {(7 14 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma139> a r:Inference; r:gives {(13 10 8) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma157>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma158>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma159>
  <#lemma79>);
  r:rule <#lemma8>.

<#lemma140> a r:Inference; r:gives {(12 11 8) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma160>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma161>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma162>
  <#lemma163>);
  r:rule <#lemma8>.

<#lemma141> a r:Inference; r:gives {(10 8 13) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma158>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma159>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma157>
  <#lemma66>);
  r:rule <#lemma8>.

<#lemma142> a r:Inference; r:gives {(7 13 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma143> a r:Inference; r:gives {(8 8 15) :tak 15}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma144> a r:Inference; r:gives {(7 15 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma145> a r:Inference; r:gives {(14 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma155>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma153>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma154>
  <#lemma164>);
  r:rule <#lemma8>.

<#lemma146> a r:Inference; r:gives {(15 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(15 1) prolog:minus 14}]
  <#lemma156>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma165>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma166>
  <#lemma147>);
  r:rule <#lemma8>.

<#lemma147> a r:Inference; r:gives {(9 15 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma148> a r:Inference; r:gives {(8 9 16) :tak 16}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma149> a r:Inference; r:gives {(8 16 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 16) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma150> a r:Inference; r:gives {(11 10 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma167>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma67>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma136>
  <#lemma168>);
  r:rule <#lemma8>.

<#lemma151> a r:Inference; r:gives {(9 10 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(9 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma152> a r:Inference; r:gives {(9 12 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(9 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma153> a r:Inference; r:gives {(8 8 14) :tak 14}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma154> a r:Inference; r:gives {(7 14 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma155> a r:Inference; r:gives {(13 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma169>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma170>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma171>
  <#lemma28>);
  r:rule <#lemma8>.

<#lemma156> a r:Inference; r:gives {(14 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(14 1) prolog:minus 13}]
  <#lemma172>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma173>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma174>
  <#lemma164>);
  r:rule <#lemma8>.

<#lemma157> a r:Inference; r:gives {(12 10 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma175>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma176>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma177>
  <#lemma95>);
  r:rule <#lemma8>.

<#lemma158> a r:Inference; r:gives {(9 8 13) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma170>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma171>
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma169>
  <#lemma172>);
  r:rule <#lemma8>.

<#lemma159> a r:Inference; r:gives {(7 13 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma160> a r:Inference; r:gives {(11 11 8) :tak 8}; r:evidence (
  [ a r:Fact; r:gives {(11 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma161> a r:Inference; r:gives {(10 8 12) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma176>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma177>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma175>
  <#lemma51>);
  r:rule <#lemma8>.

<#lemma162> a r:Inference; r:gives {(7 12 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(7 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma163> a r:Inference; r:gives {(8 10 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(8 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma164> a r:Inference; r:gives {(9 14 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma165> a r:Inference; r:gives {(8 9 15) :tak 15}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma166> a r:Inference; r:gives {(8 15 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 15) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma167> a r:Inference; r:gives {(10 10 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma168> a r:Inference; r:gives {(10 11 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(10 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma169> a r:Inference; r:gives {(12 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma178>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma179>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma180>
  <#lemma70>);
  r:rule <#lemma8>.

<#lemma170> a r:Inference; r:gives {(8 8 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma171> a r:Inference; r:gives {(7 13 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma172> a r:Inference; r:gives {(13 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(13 1) prolog:minus 12}]
  <#lemma181>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma182>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma183>
  <#lemma28>);
  r:rule <#lemma8>.

<#lemma173> a r:Inference; r:gives {(8 9 14) :tak 14}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma174> a r:Inference; r:gives {(8 14 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 14) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma175> a r:Inference; r:gives {(11 10 8) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma184>
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma185>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma186>
  <#lemma187>);
  r:rule <#lemma8>.

<#lemma176> a r:Inference; r:gives {(9 8 12) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma179>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma180>
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma178>
  <#lemma181>);
  r:rule <#lemma8>.

<#lemma177> a r:Inference; r:gives {(7 12 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma178> a r:Inference; r:gives {(11 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma188>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma189>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma190>
  <#lemma191>);
  r:rule <#lemma8>.

<#lemma179> a r:Inference; r:gives {(8 8 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma180> a r:Inference; r:gives {(7 12 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma181> a r:Inference; r:gives {(12 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(12 1) prolog:minus 11}]
  <#lemma192>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma193>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma194>
  <#lemma70>);
  r:rule <#lemma8>.

<#lemma182> a r:Inference; r:gives {(8 9 13) :tak 13}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma183> a r:Inference; r:gives {(8 13 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 13) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma184> a r:Inference; r:gives {(10 10 8) :tak 8}; r:evidence (
  [ a r:Fact; r:gives {(10 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma185> a r:Inference; r:gives {(9 8 11) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma189>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma190>
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma188>
  <#lemma192>);
  r:rule <#lemma8>.

<#lemma186> a r:Inference; r:gives {(7 11 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(7 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma187> a r:Inference; r:gives {(8 9 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma188> a r:Inference; r:gives {(10 9 8) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma195>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma196>
  [ a r:Fact; r:gives {(8 1) prolog:minus 7}]
  <#lemma197>
  <#lemma198>);
  r:rule <#lemma8>.

<#lemma189> a r:Inference; r:gives {(8 8 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma190> a r:Inference; r:gives {(7 11 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma191> a r:Inference; r:gives {(9 11 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma192> a r:Inference; r:gives {(11 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(11 1) prolog:minus 10}]
  <#lemma199>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma200>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma201>
  <#lemma191>);
  r:rule <#lemma8>.

<#lemma193> a r:Inference; r:gives {(8 9 12) :tak 12}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma194> a r:Inference; r:gives {(8 12 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 12) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma195> a r:Inference; r:gives {(9 9 8) :tak 8}; r:evidence (
  [ a r:Fact; r:gives {(9 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma196> a r:Inference; r:gives {(8 8 10) :tak 10}; r:evidence (
  [ a r:Fact; r:gives {(8 8) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma197> a r:Inference; r:gives {(7 10 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(7 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma198> a r:Inference; r:gives {(8 10 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 10) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma199> a r:Inference; r:gives {(10 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(10 1) prolog:minus 9}]
  <#lemma202>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma187>
  [ a r:Fact; r:gives {(9 1) prolog:minus 8}]
  <#lemma198>
  <#lemma66>);
  r:rule <#lemma8>.

<#lemma200> a r:Inference; r:gives {(8 9 11) :tak 11}; r:evidence (
  [ a r:Fact; r:gives {(8 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma201> a r:Inference; r:gives {(8 11 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(8 11) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

<#lemma202> a r:Inference; r:gives {(9 9 9) :tak 9}; r:evidence (
  [ a r:Fact; r:gives {(9 9) prolog:arithmetic_less_than_or_equal true}]
  [ a r:Fact; r:gives {() prolog:cut true}]);
  r:rule <#lemma17>.

#ENDS 0.838 [sec] TC=1 TP=2 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/hanoi.n3 --pass

# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#center>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#right> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#center>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#center> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#left>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#center> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#center>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#right> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#center>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#center> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#left>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#center> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
# Move top disk from <http://eulersharp.sourceforge.net/2007/07test/hanoi#left> to <http://eulersharp.sourceforge.net/2007/07test/hanoi#right>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>
PREFIX : <http://eulersharp.sourceforge.net/2007/07test/hanoi#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    3 :answer (:left :right :center).
  }].

<#lemma1> a r:Inference; r:gives {3 :answer (:left :right :center)}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {3 :answer (:left :right :center)}; r:evidence (
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma3> a r:Extraction; r:gives {{?x1 ?x0 ?x2} => {?x1 ?x0 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/pass>].

<#lemma4> a r:Inference; r:gives {3 :move (:left :right :center)}; r:evidence (
  [ a r:Fact; r:gives {3 math:greaterThan 1}]
  [ a r:Fact; r:gives {(3 1) math:difference 2}]
  <#lemma6>
  <#lemma7>
  <#lemma8>);
  r:rule <#lemma9>.

<#lemma5> a r:Extraction; r:gives {{3 :move (:left :right :center)} => {3 :answer (:left :right :center)}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/hanoi.n3>].

<#lemma6> a r:Inference; r:gives {2 :move (:left :center :right)}; r:evidence (
  [ a r:Fact; r:gives {2 math:greaterThan 1}]
  [ a r:Fact; r:gives {(2 1) math:difference 1}]
  <#lemma10>
  <#lemma11>
  <#lemma12>);
  r:rule <#lemma9>.

<#lemma7> a r:Inference; r:gives {1 :move (:left :right _:sk0)}; r:evidence (
  [ a r:Fact; r:gives {("# Move top disk from ~w to ~w~n"^^prolog:atom (:left :right)) prolog:format true}]);
  r:rule <#lemma13>.

<#lemma8> a r:Inference; r:gives {2 :move (:center :right :left)}; r:evidence (
  [ a r:Fact; r:gives {2 math:greaterThan 1}]
  [ a r:Fact; r:gives {(2 1) math:difference 1}]
  <#lemma14>
  <#lemma15>
  <#lemma10>);
  r:rule <#lemma9>.

<#lemma9> a r:Extraction; r:gives {{?x0 :move (?x2 ?x4 ?x3)} <= {?x0 math:greaterThan 1 .
  (?x0 1) math:difference ?x1.
  ?x1 :move (?x2 ?x3 ?x4).
  1 :move (?x2 ?x4 ?x5).
  ?x1 :move (?x3 ?x4 ?x2)}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/hanoi.n3>].

<#lemma10> a r:Inference; r:gives {1 :move (:left :right :center)}; r:evidence (
  [ a r:Fact; r:gives {("# Move top disk from ~w to ~w~n"^^prolog:atom (:left :right)) prolog:format true}]);
  r:rule <#lemma13>.

<#lemma11> a r:Inference; r:gives {1 :move (:left :center _:sk1)}; r:evidence (
  [ a r:Fact; r:gives {("# Move top disk from ~w to ~w~n"^^prolog:atom (:left :center)) prolog:format true}]);
  r:rule <#lemma13>.

<#lemma12> a r:Inference; r:gives {1 :move (:right :center :left)}; r:evidence (
  [ a r:Fact; r:gives {("# Move top disk from ~w to ~w~n"^^prolog:atom (:right :center)) prolog:format true}]);
  r:rule <#lemma13>.

<#lemma13> a r:Extraction; r:gives {{1 :move (?x0 ?x1 ?x2)} <= {("# Move top disk from ~w to ~w~n"^^prolog:atom (?x0 ?x1)) prolog:format true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/hanoi.n3>].

<#lemma14> a r:Inference; r:gives {1 :move (:center :left :right)}; r:evidence (
  [ a r:Fact; r:gives {("# Move top disk from ~w to ~w~n"^^prolog:atom (:center :left)) prolog:format true}]);
  r:rule <#lemma13>.

<#lemma15> a r:Inference; r:gives {1 :move (:center :right _:sk2)}; r:evidence (
  [ a r:Fact; r:gives {("# Move top disk from ~w to ~w~n"^^prolog:atom (:center :right)) prolog:format true}]);
  r:rule <#lemma13>.

#ENDS 0.743 [sec] TC=2 TP=4 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/cyclic-rules.n3 --pass

PREFIX : <http://eulersharp.sourceforge.net/2007/07test/try#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:gives {
    :i a :A.
    :i a :B.
  }].

<#lemma1> a r:Inference; r:gives {:i a :A}; r:evidence (
  <#lemma3>);
  r:rule <#lemma4>.

<#lemma2> a r:Inference; r:gives {:i a :B}; r:evidence (
  <#lemma5>);
  r:rule <#lemma4>.

<#lemma3> a r:Extraction; r:gives {:i a :A};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/cyclic-rules.n3>].

<#lemma4> a r:Extraction; r:gives {{?x1 ?x0 ?x2} => {?x1 ?x0 ?x2}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/pass>].

<#lemma5> a r:Inference; r:gives {:i a :B}; r:evidence (
  <#lemma3>);
  r:rule <#lemma6>.

<#lemma6> a r:Extraction; r:gives {{?x0 a :A} => {?x0 a :B}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/cyclic-rules.n3>].

#ENDS 0.383 [sec] TC=3 TP=10 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/parteval.n3 --query http://eulersharp.sourceforge.net/2007/07test/parteval_query.n3

PREFIX : <http://eulersharp.sourceforge.net/2007/07test/try#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:gives {
    :Xanthippe a :HumanFemale.
    :Xanthippe a :Human.
    :Xanthippe a :Female.
  }].

<#lemma1> a r:Inference; r:gives {:Xanthippe a :HumanFemale}; r:evidence (
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma2> a r:Inference; r:gives {:Xanthippe a :Human}; r:evidence (
  <#lemma6>);
  r:rule <#lemma5>.

<#lemma3> a r:Inference; r:gives {:Xanthippe a :Female}; r:evidence (
  <#lemma7>);
  r:rule <#lemma5>.

<#lemma4> a r:Extraction; r:gives {:Xanthippe a :HumanFemale};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/parteval.n3>].

<#lemma5> a r:Extraction; r:gives {{?x0 a ?x1} => {?x0 a ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/parteval_query.n3>].

<#lemma6> a r:Inference; r:gives {:Xanthippe a :Human}; r:evidence (
  <#lemma4>);
  r:rule <#lemma8>.

<#lemma7> a r:Inference; r:gives {:Xanthippe a :Female}; r:evidence (
  <#lemma4>);
  r:rule <#lemma9>.

<#lemma8> a r:Extraction; r:gives {{?x0 a :Human} <= {?x0 a :HumanFemale}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/parteval.n3>].

<#lemma9> a r:Extraction; r:gives {{?x0 a :Female} <= {?x0 a :HumanFemale}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/parteval.n3>].

#ENDS 0.964 [sec] TC=3 TP=8 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/initial.n3 http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3 --query http://eulersharp.sourceforge.net/2007/07test/goal.n3

PREFIX ex: <http://example.org/#>
PREFIX http: <http://www.w3.org/2011/http#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    <http://eulersharp.sourceforge.net/2007/07test/x> ex:relGoal <http://eulersharp.sourceforge.net/2007/07test/y>.
  }].

<#lemma1> a r:Inference; r:gives {<http://eulersharp.sourceforge.net/2007/07test/x> ex:relGoal <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {_:sk1534 http:methodName "GET".
  _:sk1534 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1534 http:resp _:sk1535.
  _:sk1535 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel257 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel257 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel257 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:relGoal <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma3> a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test/x> ex:relGoal <http://eulersharp.sourceforge.net/2007/07test/y>} => {<http://eulersharp.sourceforge.net/2007/07test/x> ex:relGoal <http://eulersharp.sourceforge.net/2007/07test/y>}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/goal.n3>].

<#lemma4> a r:Inference; r:gives {_:sk1528 http:methodName "GET".
  _:sk1528 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1528 http:resp _:sk1529.
  _:sk1529 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel256 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel256 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel256 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma5> a r:Extraction; r:gives {{?x0 ex:rel256 ?x1.
  ?x2 ex:rel256 ?x3.
  ?x4 ex:rel256 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel257 ?x1.
  ?x2 ex:rel257 ?x3.
  ?x4 ex:rel257 ?x5.
  ?x0 ex:relGoal ?x1}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma6> a r:Inference; r:gives {_:sk1522 http:methodName "GET".
  _:sk1522 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1522 http:resp _:sk1523.
  _:sk1523 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel255 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel255 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel255 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma8>);
  r:rule <#lemma9>.

<#lemma7> a r:Extraction; r:gives {{?x0 ex:rel255 ?x1.
  ?x2 ex:rel255 ?x3.
  ?x4 ex:rel255 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel256 ?x1.
  ?x2 ex:rel256 ?x3.
  ?x4 ex:rel256 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma8> a r:Inference; r:gives {_:sk1516 http:methodName "GET".
  _:sk1516 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1516 http:resp _:sk1517.
  _:sk1517 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel254 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel254 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel254 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma10>);
  r:rule <#lemma11>.

<#lemma9> a r:Extraction; r:gives {{?x0 ex:rel254 ?x1.
  ?x2 ex:rel254 ?x3.
  ?x4 ex:rel254 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel255 ?x1.
  ?x2 ex:rel255 ?x3.
  ?x4 ex:rel255 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma10> a r:Inference; r:gives {_:sk1510 http:methodName "GET".
  _:sk1510 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1510 http:resp _:sk1511.
  _:sk1511 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel253 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel253 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel253 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma12>);
  r:rule <#lemma13>.

<#lemma11> a r:Extraction; r:gives {{?x0 ex:rel253 ?x1.
  ?x2 ex:rel253 ?x3.
  ?x4 ex:rel253 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel254 ?x1.
  ?x2 ex:rel254 ?x3.
  ?x4 ex:rel254 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma12> a r:Inference; r:gives {_:sk1504 http:methodName "GET".
  _:sk1504 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1504 http:resp _:sk1505.
  _:sk1505 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel252 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel252 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel252 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma14>);
  r:rule <#lemma15>.

<#lemma13> a r:Extraction; r:gives {{?x0 ex:rel252 ?x1.
  ?x2 ex:rel252 ?x3.
  ?x4 ex:rel252 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel253 ?x1.
  ?x2 ex:rel253 ?x3.
  ?x4 ex:rel253 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma14> a r:Inference; r:gives {_:sk1498 http:methodName "GET".
  _:sk1498 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1498 http:resp _:sk1499.
  _:sk1499 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel251 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel251 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel251 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma16>);
  r:rule <#lemma17>.

<#lemma15> a r:Extraction; r:gives {{?x0 ex:rel251 ?x1.
  ?x2 ex:rel251 ?x3.
  ?x4 ex:rel251 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel252 ?x1.
  ?x2 ex:rel252 ?x3.
  ?x4 ex:rel252 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma16> a r:Inference; r:gives {_:sk1492 http:methodName "GET".
  _:sk1492 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1492 http:resp _:sk1493.
  _:sk1493 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel250 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel250 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel250 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma18>);
  r:rule <#lemma19>.

<#lemma17> a r:Extraction; r:gives {{?x0 ex:rel250 ?x1.
  ?x2 ex:rel250 ?x3.
  ?x4 ex:rel250 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel251 ?x1.
  ?x2 ex:rel251 ?x3.
  ?x4 ex:rel251 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma18> a r:Inference; r:gives {_:sk1486 http:methodName "GET".
  _:sk1486 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1486 http:resp _:sk1487.
  _:sk1487 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel249 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel249 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel249 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma20>);
  r:rule <#lemma21>.

<#lemma19> a r:Extraction; r:gives {{?x0 ex:rel249 ?x1.
  ?x2 ex:rel249 ?x3.
  ?x4 ex:rel249 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel250 ?x1.
  ?x2 ex:rel250 ?x3.
  ?x4 ex:rel250 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma20> a r:Inference; r:gives {_:sk1480 http:methodName "GET".
  _:sk1480 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1480 http:resp _:sk1481.
  _:sk1481 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel248 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel248 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel248 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma22>);
  r:rule <#lemma23>.

<#lemma21> a r:Extraction; r:gives {{?x0 ex:rel248 ?x1.
  ?x2 ex:rel248 ?x3.
  ?x4 ex:rel248 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel249 ?x1.
  ?x2 ex:rel249 ?x3.
  ?x4 ex:rel249 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma22> a r:Inference; r:gives {_:sk1474 http:methodName "GET".
  _:sk1474 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1474 http:resp _:sk1475.
  _:sk1475 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel247 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel247 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel247 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma24>);
  r:rule <#lemma25>.

<#lemma23> a r:Extraction; r:gives {{?x0 ex:rel247 ?x1.
  ?x2 ex:rel247 ?x3.
  ?x4 ex:rel247 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel248 ?x1.
  ?x2 ex:rel248 ?x3.
  ?x4 ex:rel248 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma24> a r:Inference; r:gives {_:sk1468 http:methodName "GET".
  _:sk1468 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1468 http:resp _:sk1469.
  _:sk1469 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel246 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel246 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel246 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma26>);
  r:rule <#lemma27>.

<#lemma25> a r:Extraction; r:gives {{?x0 ex:rel246 ?x1.
  ?x2 ex:rel246 ?x3.
  ?x4 ex:rel246 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel247 ?x1.
  ?x2 ex:rel247 ?x3.
  ?x4 ex:rel247 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma26> a r:Inference; r:gives {_:sk1462 http:methodName "GET".
  _:sk1462 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1462 http:resp _:sk1463.
  _:sk1463 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel245 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel245 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel245 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma28>);
  r:rule <#lemma29>.

<#lemma27> a r:Extraction; r:gives {{?x0 ex:rel245 ?x1.
  ?x2 ex:rel245 ?x3.
  ?x4 ex:rel245 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel246 ?x1.
  ?x2 ex:rel246 ?x3.
  ?x4 ex:rel246 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma28> a r:Inference; r:gives {_:sk1456 http:methodName "GET".
  _:sk1456 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1456 http:resp _:sk1457.
  _:sk1457 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel244 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel244 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel244 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma30>);
  r:rule <#lemma31>.

<#lemma29> a r:Extraction; r:gives {{?x0 ex:rel244 ?x1.
  ?x2 ex:rel244 ?x3.
  ?x4 ex:rel244 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel245 ?x1.
  ?x2 ex:rel245 ?x3.
  ?x4 ex:rel245 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma30> a r:Inference; r:gives {_:sk1450 http:methodName "GET".
  _:sk1450 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1450 http:resp _:sk1451.
  _:sk1451 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel243 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel243 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel243 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma32>);
  r:rule <#lemma33>.

<#lemma31> a r:Extraction; r:gives {{?x0 ex:rel243 ?x1.
  ?x2 ex:rel243 ?x3.
  ?x4 ex:rel243 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel244 ?x1.
  ?x2 ex:rel244 ?x3.
  ?x4 ex:rel244 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma32> a r:Inference; r:gives {_:sk1444 http:methodName "GET".
  _:sk1444 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1444 http:resp _:sk1445.
  _:sk1445 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel242 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel242 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel242 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma34>);
  r:rule <#lemma35>.

<#lemma33> a r:Extraction; r:gives {{?x0 ex:rel242 ?x1.
  ?x2 ex:rel242 ?x3.
  ?x4 ex:rel242 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel243 ?x1.
  ?x2 ex:rel243 ?x3.
  ?x4 ex:rel243 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma34> a r:Inference; r:gives {_:sk1438 http:methodName "GET".
  _:sk1438 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1438 http:resp _:sk1439.
  _:sk1439 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel241 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel241 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel241 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma36>);
  r:rule <#lemma37>.

<#lemma35> a r:Extraction; r:gives {{?x0 ex:rel241 ?x1.
  ?x2 ex:rel241 ?x3.
  ?x4 ex:rel241 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel242 ?x1.
  ?x2 ex:rel242 ?x3.
  ?x4 ex:rel242 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma36> a r:Inference; r:gives {_:sk1432 http:methodName "GET".
  _:sk1432 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1432 http:resp _:sk1433.
  _:sk1433 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel240 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel240 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel240 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma38>);
  r:rule <#lemma39>.

<#lemma37> a r:Extraction; r:gives {{?x0 ex:rel240 ?x1.
  ?x2 ex:rel240 ?x3.
  ?x4 ex:rel240 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel241 ?x1.
  ?x2 ex:rel241 ?x3.
  ?x4 ex:rel241 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma38> a r:Inference; r:gives {_:sk1426 http:methodName "GET".
  _:sk1426 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1426 http:resp _:sk1427.
  _:sk1427 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel239 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel239 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel239 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma40>);
  r:rule <#lemma41>.

<#lemma39> a r:Extraction; r:gives {{?x0 ex:rel239 ?x1.
  ?x2 ex:rel239 ?x3.
  ?x4 ex:rel239 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel240 ?x1.
  ?x2 ex:rel240 ?x3.
  ?x4 ex:rel240 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma40> a r:Inference; r:gives {_:sk1420 http:methodName "GET".
  _:sk1420 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1420 http:resp _:sk1421.
  _:sk1421 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel238 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel238 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel238 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma42>);
  r:rule <#lemma43>.

<#lemma41> a r:Extraction; r:gives {{?x0 ex:rel238 ?x1.
  ?x2 ex:rel238 ?x3.
  ?x4 ex:rel238 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel239 ?x1.
  ?x2 ex:rel239 ?x3.
  ?x4 ex:rel239 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma42> a r:Inference; r:gives {_:sk1414 http:methodName "GET".
  _:sk1414 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1414 http:resp _:sk1415.
  _:sk1415 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel237 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel237 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel237 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma44>);
  r:rule <#lemma45>.

<#lemma43> a r:Extraction; r:gives {{?x0 ex:rel237 ?x1.
  ?x2 ex:rel237 ?x3.
  ?x4 ex:rel237 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel238 ?x1.
  ?x2 ex:rel238 ?x3.
  ?x4 ex:rel238 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma44> a r:Inference; r:gives {_:sk1408 http:methodName "GET".
  _:sk1408 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1408 http:resp _:sk1409.
  _:sk1409 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel236 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel236 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel236 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma46>);
  r:rule <#lemma47>.

<#lemma45> a r:Extraction; r:gives {{?x0 ex:rel236 ?x1.
  ?x2 ex:rel236 ?x3.
  ?x4 ex:rel236 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel237 ?x1.
  ?x2 ex:rel237 ?x3.
  ?x4 ex:rel237 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma46> a r:Inference; r:gives {_:sk1402 http:methodName "GET".
  _:sk1402 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1402 http:resp _:sk1403.
  _:sk1403 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel235 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel235 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel235 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma48>);
  r:rule <#lemma49>.

<#lemma47> a r:Extraction; r:gives {{?x0 ex:rel235 ?x1.
  ?x2 ex:rel235 ?x3.
  ?x4 ex:rel235 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel236 ?x1.
  ?x2 ex:rel236 ?x3.
  ?x4 ex:rel236 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma48> a r:Inference; r:gives {_:sk1396 http:methodName "GET".
  _:sk1396 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1396 http:resp _:sk1397.
  _:sk1397 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel234 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel234 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel234 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma50>);
  r:rule <#lemma51>.

<#lemma49> a r:Extraction; r:gives {{?x0 ex:rel234 ?x1.
  ?x2 ex:rel234 ?x3.
  ?x4 ex:rel234 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel235 ?x1.
  ?x2 ex:rel235 ?x3.
  ?x4 ex:rel235 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma50> a r:Inference; r:gives {_:sk1390 http:methodName "GET".
  _:sk1390 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1390 http:resp _:sk1391.
  _:sk1391 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel233 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel233 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel233 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma52>);
  r:rule <#lemma53>.

<#lemma51> a r:Extraction; r:gives {{?x0 ex:rel233 ?x1.
  ?x2 ex:rel233 ?x3.
  ?x4 ex:rel233 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel234 ?x1.
  ?x2 ex:rel234 ?x3.
  ?x4 ex:rel234 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma52> a r:Inference; r:gives {_:sk1384 http:methodName "GET".
  _:sk1384 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1384 http:resp _:sk1385.
  _:sk1385 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel232 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel232 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel232 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma54>);
  r:rule <#lemma55>.

<#lemma53> a r:Extraction; r:gives {{?x0 ex:rel232 ?x1.
  ?x2 ex:rel232 ?x3.
  ?x4 ex:rel232 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel233 ?x1.
  ?x2 ex:rel233 ?x3.
  ?x4 ex:rel233 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma54> a r:Inference; r:gives {_:sk1378 http:methodName "GET".
  _:sk1378 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1378 http:resp _:sk1379.
  _:sk1379 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel231 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel231 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel231 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma56>);
  r:rule <#lemma57>.

<#lemma55> a r:Extraction; r:gives {{?x0 ex:rel231 ?x1.
  ?x2 ex:rel231 ?x3.
  ?x4 ex:rel231 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel232 ?x1.
  ?x2 ex:rel232 ?x3.
  ?x4 ex:rel232 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma56> a r:Inference; r:gives {_:sk1372 http:methodName "GET".
  _:sk1372 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1372 http:resp _:sk1373.
  _:sk1373 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel230 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel230 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel230 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma58>);
  r:rule <#lemma59>.

<#lemma57> a r:Extraction; r:gives {{?x0 ex:rel230 ?x1.
  ?x2 ex:rel230 ?x3.
  ?x4 ex:rel230 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel231 ?x1.
  ?x2 ex:rel231 ?x3.
  ?x4 ex:rel231 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma58> a r:Inference; r:gives {_:sk1366 http:methodName "GET".
  _:sk1366 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1366 http:resp _:sk1367.
  _:sk1367 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel229 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel229 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel229 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma60>);
  r:rule <#lemma61>.

<#lemma59> a r:Extraction; r:gives {{?x0 ex:rel229 ?x1.
  ?x2 ex:rel229 ?x3.
  ?x4 ex:rel229 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel230 ?x1.
  ?x2 ex:rel230 ?x3.
  ?x4 ex:rel230 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma60> a r:Inference; r:gives {_:sk1360 http:methodName "GET".
  _:sk1360 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1360 http:resp _:sk1361.
  _:sk1361 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel228 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel228 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel228 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma62>);
  r:rule <#lemma63>.

<#lemma61> a r:Extraction; r:gives {{?x0 ex:rel228 ?x1.
  ?x2 ex:rel228 ?x3.
  ?x4 ex:rel228 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel229 ?x1.
  ?x2 ex:rel229 ?x3.
  ?x4 ex:rel229 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma62> a r:Inference; r:gives {_:sk1354 http:methodName "GET".
  _:sk1354 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1354 http:resp _:sk1355.
  _:sk1355 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel227 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel227 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel227 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma64>);
  r:rule <#lemma65>.

<#lemma63> a r:Extraction; r:gives {{?x0 ex:rel227 ?x1.
  ?x2 ex:rel227 ?x3.
  ?x4 ex:rel227 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel228 ?x1.
  ?x2 ex:rel228 ?x3.
  ?x4 ex:rel228 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma64> a r:Inference; r:gives {_:sk1348 http:methodName "GET".
  _:sk1348 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1348 http:resp _:sk1349.
  _:sk1349 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel226 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel226 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel226 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma66>);
  r:rule <#lemma67>.

<#lemma65> a r:Extraction; r:gives {{?x0 ex:rel226 ?x1.
  ?x2 ex:rel226 ?x3.
  ?x4 ex:rel226 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel227 ?x1.
  ?x2 ex:rel227 ?x3.
  ?x4 ex:rel227 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma66> a r:Inference; r:gives {_:sk1342 http:methodName "GET".
  _:sk1342 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1342 http:resp _:sk1343.
  _:sk1343 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel225 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel225 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel225 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma68>);
  r:rule <#lemma69>.

<#lemma67> a r:Extraction; r:gives {{?x0 ex:rel225 ?x1.
  ?x2 ex:rel225 ?x3.
  ?x4 ex:rel225 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel226 ?x1.
  ?x2 ex:rel226 ?x3.
  ?x4 ex:rel226 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma68> a r:Inference; r:gives {_:sk1336 http:methodName "GET".
  _:sk1336 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1336 http:resp _:sk1337.
  _:sk1337 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel224 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel224 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel224 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma70>);
  r:rule <#lemma71>.

<#lemma69> a r:Extraction; r:gives {{?x0 ex:rel224 ?x1.
  ?x2 ex:rel224 ?x3.
  ?x4 ex:rel224 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel225 ?x1.
  ?x2 ex:rel225 ?x3.
  ?x4 ex:rel225 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma70> a r:Inference; r:gives {_:sk1330 http:methodName "GET".
  _:sk1330 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1330 http:resp _:sk1331.
  _:sk1331 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel223 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel223 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel223 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma72>);
  r:rule <#lemma73>.

<#lemma71> a r:Extraction; r:gives {{?x0 ex:rel223 ?x1.
  ?x2 ex:rel223 ?x3.
  ?x4 ex:rel223 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel224 ?x1.
  ?x2 ex:rel224 ?x3.
  ?x4 ex:rel224 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma72> a r:Inference; r:gives {_:sk1324 http:methodName "GET".
  _:sk1324 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1324 http:resp _:sk1325.
  _:sk1325 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel222 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel222 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel222 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma74>);
  r:rule <#lemma75>.

<#lemma73> a r:Extraction; r:gives {{?x0 ex:rel222 ?x1.
  ?x2 ex:rel222 ?x3.
  ?x4 ex:rel222 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel223 ?x1.
  ?x2 ex:rel223 ?x3.
  ?x4 ex:rel223 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma74> a r:Inference; r:gives {_:sk1318 http:methodName "GET".
  _:sk1318 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1318 http:resp _:sk1319.
  _:sk1319 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel221 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel221 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel221 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma76>);
  r:rule <#lemma77>.

<#lemma75> a r:Extraction; r:gives {{?x0 ex:rel221 ?x1.
  ?x2 ex:rel221 ?x3.
  ?x4 ex:rel221 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel222 ?x1.
  ?x2 ex:rel222 ?x3.
  ?x4 ex:rel222 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma76> a r:Inference; r:gives {_:sk1312 http:methodName "GET".
  _:sk1312 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1312 http:resp _:sk1313.
  _:sk1313 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel220 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel220 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel220 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma78>);
  r:rule <#lemma79>.

<#lemma77> a r:Extraction; r:gives {{?x0 ex:rel220 ?x1.
  ?x2 ex:rel220 ?x3.
  ?x4 ex:rel220 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel221 ?x1.
  ?x2 ex:rel221 ?x3.
  ?x4 ex:rel221 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma78> a r:Inference; r:gives {_:sk1306 http:methodName "GET".
  _:sk1306 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1306 http:resp _:sk1307.
  _:sk1307 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel219 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel219 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel219 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma80>);
  r:rule <#lemma81>.

<#lemma79> a r:Extraction; r:gives {{?x0 ex:rel219 ?x1.
  ?x2 ex:rel219 ?x3.
  ?x4 ex:rel219 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel220 ?x1.
  ?x2 ex:rel220 ?x3.
  ?x4 ex:rel220 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma80> a r:Inference; r:gives {_:sk1300 http:methodName "GET".
  _:sk1300 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1300 http:resp _:sk1301.
  _:sk1301 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel218 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel218 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel218 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma82>);
  r:rule <#lemma83>.

<#lemma81> a r:Extraction; r:gives {{?x0 ex:rel218 ?x1.
  ?x2 ex:rel218 ?x3.
  ?x4 ex:rel218 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel219 ?x1.
  ?x2 ex:rel219 ?x3.
  ?x4 ex:rel219 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma82> a r:Inference; r:gives {_:sk1294 http:methodName "GET".
  _:sk1294 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1294 http:resp _:sk1295.
  _:sk1295 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel217 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel217 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel217 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma84>);
  r:rule <#lemma85>.

<#lemma83> a r:Extraction; r:gives {{?x0 ex:rel217 ?x1.
  ?x2 ex:rel217 ?x3.
  ?x4 ex:rel217 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel218 ?x1.
  ?x2 ex:rel218 ?x3.
  ?x4 ex:rel218 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma84> a r:Inference; r:gives {_:sk1288 http:methodName "GET".
  _:sk1288 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1288 http:resp _:sk1289.
  _:sk1289 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel216 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel216 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel216 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma86>);
  r:rule <#lemma87>.

<#lemma85> a r:Extraction; r:gives {{?x0 ex:rel216 ?x1.
  ?x2 ex:rel216 ?x3.
  ?x4 ex:rel216 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel217 ?x1.
  ?x2 ex:rel217 ?x3.
  ?x4 ex:rel217 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma86> a r:Inference; r:gives {_:sk1282 http:methodName "GET".
  _:sk1282 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1282 http:resp _:sk1283.
  _:sk1283 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel215 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel215 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel215 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma88>);
  r:rule <#lemma89>.

<#lemma87> a r:Extraction; r:gives {{?x0 ex:rel215 ?x1.
  ?x2 ex:rel215 ?x3.
  ?x4 ex:rel215 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel216 ?x1.
  ?x2 ex:rel216 ?x3.
  ?x4 ex:rel216 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma88> a r:Inference; r:gives {_:sk1276 http:methodName "GET".
  _:sk1276 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1276 http:resp _:sk1277.
  _:sk1277 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel214 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel214 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel214 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma90>);
  r:rule <#lemma91>.

<#lemma89> a r:Extraction; r:gives {{?x0 ex:rel214 ?x1.
  ?x2 ex:rel214 ?x3.
  ?x4 ex:rel214 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel215 ?x1.
  ?x2 ex:rel215 ?x3.
  ?x4 ex:rel215 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma90> a r:Inference; r:gives {_:sk1270 http:methodName "GET".
  _:sk1270 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1270 http:resp _:sk1271.
  _:sk1271 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel213 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel213 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel213 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma92>);
  r:rule <#lemma93>.

<#lemma91> a r:Extraction; r:gives {{?x0 ex:rel213 ?x1.
  ?x2 ex:rel213 ?x3.
  ?x4 ex:rel213 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel214 ?x1.
  ?x2 ex:rel214 ?x3.
  ?x4 ex:rel214 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma92> a r:Inference; r:gives {_:sk1264 http:methodName "GET".
  _:sk1264 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1264 http:resp _:sk1265.
  _:sk1265 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel212 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel212 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel212 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma94>);
  r:rule <#lemma95>.

<#lemma93> a r:Extraction; r:gives {{?x0 ex:rel212 ?x1.
  ?x2 ex:rel212 ?x3.
  ?x4 ex:rel212 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel213 ?x1.
  ?x2 ex:rel213 ?x3.
  ?x4 ex:rel213 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma94> a r:Inference; r:gives {_:sk1258 http:methodName "GET".
  _:sk1258 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1258 http:resp _:sk1259.
  _:sk1259 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel211 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel211 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel211 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma96>);
  r:rule <#lemma97>.

<#lemma95> a r:Extraction; r:gives {{?x0 ex:rel211 ?x1.
  ?x2 ex:rel211 ?x3.
  ?x4 ex:rel211 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel212 ?x1.
  ?x2 ex:rel212 ?x3.
  ?x4 ex:rel212 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma96> a r:Inference; r:gives {_:sk1252 http:methodName "GET".
  _:sk1252 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1252 http:resp _:sk1253.
  _:sk1253 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel210 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel210 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel210 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma98>);
  r:rule <#lemma99>.

<#lemma97> a r:Extraction; r:gives {{?x0 ex:rel210 ?x1.
  ?x2 ex:rel210 ?x3.
  ?x4 ex:rel210 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel211 ?x1.
  ?x2 ex:rel211 ?x3.
  ?x4 ex:rel211 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma98> a r:Inference; r:gives {_:sk1246 http:methodName "GET".
  _:sk1246 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1246 http:resp _:sk1247.
  _:sk1247 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel209 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel209 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel209 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma100>);
  r:rule <#lemma101>.

<#lemma99> a r:Extraction; r:gives {{?x0 ex:rel209 ?x1.
  ?x2 ex:rel209 ?x3.
  ?x4 ex:rel209 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel210 ?x1.
  ?x2 ex:rel210 ?x3.
  ?x4 ex:rel210 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma100> a r:Inference; r:gives {_:sk1240 http:methodName "GET".
  _:sk1240 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1240 http:resp _:sk1241.
  _:sk1241 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel208 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel208 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel208 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma102>);
  r:rule <#lemma103>.

<#lemma101> a r:Extraction; r:gives {{?x0 ex:rel208 ?x1.
  ?x2 ex:rel208 ?x3.
  ?x4 ex:rel208 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel209 ?x1.
  ?x2 ex:rel209 ?x3.
  ?x4 ex:rel209 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma102> a r:Inference; r:gives {_:sk1234 http:methodName "GET".
  _:sk1234 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1234 http:resp _:sk1235.
  _:sk1235 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel207 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel207 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel207 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma104>);
  r:rule <#lemma105>.

<#lemma103> a r:Extraction; r:gives {{?x0 ex:rel207 ?x1.
  ?x2 ex:rel207 ?x3.
  ?x4 ex:rel207 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel208 ?x1.
  ?x2 ex:rel208 ?x3.
  ?x4 ex:rel208 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma104> a r:Inference; r:gives {_:sk1228 http:methodName "GET".
  _:sk1228 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1228 http:resp _:sk1229.
  _:sk1229 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel206 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel206 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel206 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma106>);
  r:rule <#lemma107>.

<#lemma105> a r:Extraction; r:gives {{?x0 ex:rel206 ?x1.
  ?x2 ex:rel206 ?x3.
  ?x4 ex:rel206 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel207 ?x1.
  ?x2 ex:rel207 ?x3.
  ?x4 ex:rel207 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma106> a r:Inference; r:gives {_:sk1222 http:methodName "GET".
  _:sk1222 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1222 http:resp _:sk1223.
  _:sk1223 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel205 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel205 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel205 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma108>);
  r:rule <#lemma109>.

<#lemma107> a r:Extraction; r:gives {{?x0 ex:rel205 ?x1.
  ?x2 ex:rel205 ?x3.
  ?x4 ex:rel205 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel206 ?x1.
  ?x2 ex:rel206 ?x3.
  ?x4 ex:rel206 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma108> a r:Inference; r:gives {_:sk1216 http:methodName "GET".
  _:sk1216 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1216 http:resp _:sk1217.
  _:sk1217 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel204 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel204 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel204 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma110>);
  r:rule <#lemma111>.

<#lemma109> a r:Extraction; r:gives {{?x0 ex:rel204 ?x1.
  ?x2 ex:rel204 ?x3.
  ?x4 ex:rel204 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel205 ?x1.
  ?x2 ex:rel205 ?x3.
  ?x4 ex:rel205 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma110> a r:Inference; r:gives {_:sk1210 http:methodName "GET".
  _:sk1210 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1210 http:resp _:sk1211.
  _:sk1211 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel203 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel203 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel203 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma112>);
  r:rule <#lemma113>.

<#lemma111> a r:Extraction; r:gives {{?x0 ex:rel203 ?x1.
  ?x2 ex:rel203 ?x3.
  ?x4 ex:rel203 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel204 ?x1.
  ?x2 ex:rel204 ?x3.
  ?x4 ex:rel204 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma112> a r:Inference; r:gives {_:sk1204 http:methodName "GET".
  _:sk1204 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1204 http:resp _:sk1205.
  _:sk1205 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel202 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel202 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel202 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma114>);
  r:rule <#lemma115>.

<#lemma113> a r:Extraction; r:gives {{?x0 ex:rel202 ?x1.
  ?x2 ex:rel202 ?x3.
  ?x4 ex:rel202 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel203 ?x1.
  ?x2 ex:rel203 ?x3.
  ?x4 ex:rel203 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma114> a r:Inference; r:gives {_:sk1198 http:methodName "GET".
  _:sk1198 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1198 http:resp _:sk1199.
  _:sk1199 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel201 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel201 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel201 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma116>);
  r:rule <#lemma117>.

<#lemma115> a r:Extraction; r:gives {{?x0 ex:rel201 ?x1.
  ?x2 ex:rel201 ?x3.
  ?x4 ex:rel201 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel202 ?x1.
  ?x2 ex:rel202 ?x3.
  ?x4 ex:rel202 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma116> a r:Inference; r:gives {_:sk1192 http:methodName "GET".
  _:sk1192 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1192 http:resp _:sk1193.
  _:sk1193 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel200 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel200 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel200 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma118>);
  r:rule <#lemma119>.

<#lemma117> a r:Extraction; r:gives {{?x0 ex:rel200 ?x1.
  ?x2 ex:rel200 ?x3.
  ?x4 ex:rel200 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel201 ?x1.
  ?x2 ex:rel201 ?x3.
  ?x4 ex:rel201 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma118> a r:Inference; r:gives {_:sk1186 http:methodName "GET".
  _:sk1186 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1186 http:resp _:sk1187.
  _:sk1187 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel199 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel199 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel199 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma120>);
  r:rule <#lemma121>.

<#lemma119> a r:Extraction; r:gives {{?x0 ex:rel199 ?x1.
  ?x2 ex:rel199 ?x3.
  ?x4 ex:rel199 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel200 ?x1.
  ?x2 ex:rel200 ?x3.
  ?x4 ex:rel200 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma120> a r:Inference; r:gives {_:sk1180 http:methodName "GET".
  _:sk1180 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1180 http:resp _:sk1181.
  _:sk1181 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel198 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel198 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel198 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma122>);
  r:rule <#lemma123>.

<#lemma121> a r:Extraction; r:gives {{?x0 ex:rel198 ?x1.
  ?x2 ex:rel198 ?x3.
  ?x4 ex:rel198 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel199 ?x1.
  ?x2 ex:rel199 ?x3.
  ?x4 ex:rel199 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma122> a r:Inference; r:gives {_:sk1174 http:methodName "GET".
  _:sk1174 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1174 http:resp _:sk1175.
  _:sk1175 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel197 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel197 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel197 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma124>);
  r:rule <#lemma125>.

<#lemma123> a r:Extraction; r:gives {{?x0 ex:rel197 ?x1.
  ?x2 ex:rel197 ?x3.
  ?x4 ex:rel197 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel198 ?x1.
  ?x2 ex:rel198 ?x3.
  ?x4 ex:rel198 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma124> a r:Inference; r:gives {_:sk1168 http:methodName "GET".
  _:sk1168 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1168 http:resp _:sk1169.
  _:sk1169 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel196 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel196 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel196 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma126>);
  r:rule <#lemma127>.

<#lemma125> a r:Extraction; r:gives {{?x0 ex:rel196 ?x1.
  ?x2 ex:rel196 ?x3.
  ?x4 ex:rel196 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel197 ?x1.
  ?x2 ex:rel197 ?x3.
  ?x4 ex:rel197 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma126> a r:Inference; r:gives {_:sk1162 http:methodName "GET".
  _:sk1162 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1162 http:resp _:sk1163.
  _:sk1163 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel195 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel195 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel195 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma128>);
  r:rule <#lemma129>.

<#lemma127> a r:Extraction; r:gives {{?x0 ex:rel195 ?x1.
  ?x2 ex:rel195 ?x3.
  ?x4 ex:rel195 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel196 ?x1.
  ?x2 ex:rel196 ?x3.
  ?x4 ex:rel196 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma128> a r:Inference; r:gives {_:sk1156 http:methodName "GET".
  _:sk1156 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1156 http:resp _:sk1157.
  _:sk1157 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel194 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel194 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel194 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma130>);
  r:rule <#lemma131>.

<#lemma129> a r:Extraction; r:gives {{?x0 ex:rel194 ?x1.
  ?x2 ex:rel194 ?x3.
  ?x4 ex:rel194 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel195 ?x1.
  ?x2 ex:rel195 ?x3.
  ?x4 ex:rel195 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma130> a r:Inference; r:gives {_:sk1150 http:methodName "GET".
  _:sk1150 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1150 http:resp _:sk1151.
  _:sk1151 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel193 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel193 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel193 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma132>);
  r:rule <#lemma133>.

<#lemma131> a r:Extraction; r:gives {{?x0 ex:rel193 ?x1.
  ?x2 ex:rel193 ?x3.
  ?x4 ex:rel193 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel194 ?x1.
  ?x2 ex:rel194 ?x3.
  ?x4 ex:rel194 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma132> a r:Inference; r:gives {_:sk1144 http:methodName "GET".
  _:sk1144 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1144 http:resp _:sk1145.
  _:sk1145 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel192 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel192 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel192 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma134>);
  r:rule <#lemma135>.

<#lemma133> a r:Extraction; r:gives {{?x0 ex:rel192 ?x1.
  ?x2 ex:rel192 ?x3.
  ?x4 ex:rel192 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel193 ?x1.
  ?x2 ex:rel193 ?x3.
  ?x4 ex:rel193 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma134> a r:Inference; r:gives {_:sk1138 http:methodName "GET".
  _:sk1138 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1138 http:resp _:sk1139.
  _:sk1139 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel191 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel191 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel191 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma136>);
  r:rule <#lemma137>.

<#lemma135> a r:Extraction; r:gives {{?x0 ex:rel191 ?x1.
  ?x2 ex:rel191 ?x3.
  ?x4 ex:rel191 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel192 ?x1.
  ?x2 ex:rel192 ?x3.
  ?x4 ex:rel192 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma136> a r:Inference; r:gives {_:sk1132 http:methodName "GET".
  _:sk1132 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1132 http:resp _:sk1133.
  _:sk1133 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel190 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel190 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel190 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma138>);
  r:rule <#lemma139>.

<#lemma137> a r:Extraction; r:gives {{?x0 ex:rel190 ?x1.
  ?x2 ex:rel190 ?x3.
  ?x4 ex:rel190 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel191 ?x1.
  ?x2 ex:rel191 ?x3.
  ?x4 ex:rel191 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma138> a r:Inference; r:gives {_:sk1126 http:methodName "GET".
  _:sk1126 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1126 http:resp _:sk1127.
  _:sk1127 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel189 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel189 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel189 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma140>);
  r:rule <#lemma141>.

<#lemma139> a r:Extraction; r:gives {{?x0 ex:rel189 ?x1.
  ?x2 ex:rel189 ?x3.
  ?x4 ex:rel189 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel190 ?x1.
  ?x2 ex:rel190 ?x3.
  ?x4 ex:rel190 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma140> a r:Inference; r:gives {_:sk1120 http:methodName "GET".
  _:sk1120 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1120 http:resp _:sk1121.
  _:sk1121 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel188 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel188 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel188 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma142>);
  r:rule <#lemma143>.

<#lemma141> a r:Extraction; r:gives {{?x0 ex:rel188 ?x1.
  ?x2 ex:rel188 ?x3.
  ?x4 ex:rel188 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel189 ?x1.
  ?x2 ex:rel189 ?x3.
  ?x4 ex:rel189 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma142> a r:Inference; r:gives {_:sk1114 http:methodName "GET".
  _:sk1114 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1114 http:resp _:sk1115.
  _:sk1115 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel187 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel187 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel187 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma144>);
  r:rule <#lemma145>.

<#lemma143> a r:Extraction; r:gives {{?x0 ex:rel187 ?x1.
  ?x2 ex:rel187 ?x3.
  ?x4 ex:rel187 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel188 ?x1.
  ?x2 ex:rel188 ?x3.
  ?x4 ex:rel188 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma144> a r:Inference; r:gives {_:sk1108 http:methodName "GET".
  _:sk1108 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1108 http:resp _:sk1109.
  _:sk1109 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel186 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel186 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel186 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma146>);
  r:rule <#lemma147>.

<#lemma145> a r:Extraction; r:gives {{?x0 ex:rel186 ?x1.
  ?x2 ex:rel186 ?x3.
  ?x4 ex:rel186 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel187 ?x1.
  ?x2 ex:rel187 ?x3.
  ?x4 ex:rel187 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma146> a r:Inference; r:gives {_:sk1102 http:methodName "GET".
  _:sk1102 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1102 http:resp _:sk1103.
  _:sk1103 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel185 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel185 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel185 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma148>);
  r:rule <#lemma149>.

<#lemma147> a r:Extraction; r:gives {{?x0 ex:rel185 ?x1.
  ?x2 ex:rel185 ?x3.
  ?x4 ex:rel185 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel186 ?x1.
  ?x2 ex:rel186 ?x3.
  ?x4 ex:rel186 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma148> a r:Inference; r:gives {_:sk1096 http:methodName "GET".
  _:sk1096 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1096 http:resp _:sk1097.
  _:sk1097 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel184 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel184 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel184 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma150>);
  r:rule <#lemma151>.

<#lemma149> a r:Extraction; r:gives {{?x0 ex:rel184 ?x1.
  ?x2 ex:rel184 ?x3.
  ?x4 ex:rel184 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel185 ?x1.
  ?x2 ex:rel185 ?x3.
  ?x4 ex:rel185 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma150> a r:Inference; r:gives {_:sk1090 http:methodName "GET".
  _:sk1090 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1090 http:resp _:sk1091.
  _:sk1091 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel183 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel183 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel183 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma152>);
  r:rule <#lemma153>.

<#lemma151> a r:Extraction; r:gives {{?x0 ex:rel183 ?x1.
  ?x2 ex:rel183 ?x3.
  ?x4 ex:rel183 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel184 ?x1.
  ?x2 ex:rel184 ?x3.
  ?x4 ex:rel184 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma152> a r:Inference; r:gives {_:sk1084 http:methodName "GET".
  _:sk1084 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1084 http:resp _:sk1085.
  _:sk1085 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel182 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel182 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel182 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma154>);
  r:rule <#lemma155>.

<#lemma153> a r:Extraction; r:gives {{?x0 ex:rel182 ?x1.
  ?x2 ex:rel182 ?x3.
  ?x4 ex:rel182 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel183 ?x1.
  ?x2 ex:rel183 ?x3.
  ?x4 ex:rel183 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma154> a r:Inference; r:gives {_:sk1078 http:methodName "GET".
  _:sk1078 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1078 http:resp _:sk1079.
  _:sk1079 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel181 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel181 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel181 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma156>);
  r:rule <#lemma157>.

<#lemma155> a r:Extraction; r:gives {{?x0 ex:rel181 ?x1.
  ?x2 ex:rel181 ?x3.
  ?x4 ex:rel181 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel182 ?x1.
  ?x2 ex:rel182 ?x3.
  ?x4 ex:rel182 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma156> a r:Inference; r:gives {_:sk1072 http:methodName "GET".
  _:sk1072 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1072 http:resp _:sk1073.
  _:sk1073 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel180 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel180 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel180 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma158>);
  r:rule <#lemma159>.

<#lemma157> a r:Extraction; r:gives {{?x0 ex:rel180 ?x1.
  ?x2 ex:rel180 ?x3.
  ?x4 ex:rel180 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel181 ?x1.
  ?x2 ex:rel181 ?x3.
  ?x4 ex:rel181 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma158> a r:Inference; r:gives {_:sk1066 http:methodName "GET".
  _:sk1066 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1066 http:resp _:sk1067.
  _:sk1067 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel179 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel179 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel179 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma160>);
  r:rule <#lemma161>.

<#lemma159> a r:Extraction; r:gives {{?x0 ex:rel179 ?x1.
  ?x2 ex:rel179 ?x3.
  ?x4 ex:rel179 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel180 ?x1.
  ?x2 ex:rel180 ?x3.
  ?x4 ex:rel180 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma160> a r:Inference; r:gives {_:sk1060 http:methodName "GET".
  _:sk1060 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1060 http:resp _:sk1061.
  _:sk1061 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel178 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel178 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel178 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma162>);
  r:rule <#lemma163>.

<#lemma161> a r:Extraction; r:gives {{?x0 ex:rel178 ?x1.
  ?x2 ex:rel178 ?x3.
  ?x4 ex:rel178 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel179 ?x1.
  ?x2 ex:rel179 ?x3.
  ?x4 ex:rel179 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma162> a r:Inference; r:gives {_:sk1054 http:methodName "GET".
  _:sk1054 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1054 http:resp _:sk1055.
  _:sk1055 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel177 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel177 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel177 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma164>);
  r:rule <#lemma165>.

<#lemma163> a r:Extraction; r:gives {{?x0 ex:rel177 ?x1.
  ?x2 ex:rel177 ?x3.
  ?x4 ex:rel177 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel178 ?x1.
  ?x2 ex:rel178 ?x3.
  ?x4 ex:rel178 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma164> a r:Inference; r:gives {_:sk1048 http:methodName "GET".
  _:sk1048 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1048 http:resp _:sk1049.
  _:sk1049 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel176 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel176 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel176 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma166>);
  r:rule <#lemma167>.

<#lemma165> a r:Extraction; r:gives {{?x0 ex:rel176 ?x1.
  ?x2 ex:rel176 ?x3.
  ?x4 ex:rel176 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel177 ?x1.
  ?x2 ex:rel177 ?x3.
  ?x4 ex:rel177 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma166> a r:Inference; r:gives {_:sk1042 http:methodName "GET".
  _:sk1042 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1042 http:resp _:sk1043.
  _:sk1043 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel175 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel175 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel175 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma168>);
  r:rule <#lemma169>.

<#lemma167> a r:Extraction; r:gives {{?x0 ex:rel175 ?x1.
  ?x2 ex:rel175 ?x3.
  ?x4 ex:rel175 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel176 ?x1.
  ?x2 ex:rel176 ?x3.
  ?x4 ex:rel176 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma168> a r:Inference; r:gives {_:sk1036 http:methodName "GET".
  _:sk1036 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1036 http:resp _:sk1037.
  _:sk1037 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel174 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel174 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel174 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma170>);
  r:rule <#lemma171>.

<#lemma169> a r:Extraction; r:gives {{?x0 ex:rel174 ?x1.
  ?x2 ex:rel174 ?x3.
  ?x4 ex:rel174 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel175 ?x1.
  ?x2 ex:rel175 ?x3.
  ?x4 ex:rel175 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma170> a r:Inference; r:gives {_:sk1030 http:methodName "GET".
  _:sk1030 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1030 http:resp _:sk1031.
  _:sk1031 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel173 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel173 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel173 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma172>);
  r:rule <#lemma173>.

<#lemma171> a r:Extraction; r:gives {{?x0 ex:rel173 ?x1.
  ?x2 ex:rel173 ?x3.
  ?x4 ex:rel173 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel174 ?x1.
  ?x2 ex:rel174 ?x3.
  ?x4 ex:rel174 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma172> a r:Inference; r:gives {_:sk1024 http:methodName "GET".
  _:sk1024 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1024 http:resp _:sk1025.
  _:sk1025 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel172 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel172 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel172 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma174>);
  r:rule <#lemma175>.

<#lemma173> a r:Extraction; r:gives {{?x0 ex:rel172 ?x1.
  ?x2 ex:rel172 ?x3.
  ?x4 ex:rel172 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel173 ?x1.
  ?x2 ex:rel173 ?x3.
  ?x4 ex:rel173 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma174> a r:Inference; r:gives {_:sk1018 http:methodName "GET".
  _:sk1018 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1018 http:resp _:sk1019.
  _:sk1019 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel171 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel171 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel171 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma176>);
  r:rule <#lemma177>.

<#lemma175> a r:Extraction; r:gives {{?x0 ex:rel171 ?x1.
  ?x2 ex:rel171 ?x3.
  ?x4 ex:rel171 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel172 ?x1.
  ?x2 ex:rel172 ?x3.
  ?x4 ex:rel172 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma176> a r:Inference; r:gives {_:sk1012 http:methodName "GET".
  _:sk1012 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1012 http:resp _:sk1013.
  _:sk1013 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel170 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel170 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel170 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma178>);
  r:rule <#lemma179>.

<#lemma177> a r:Extraction; r:gives {{?x0 ex:rel170 ?x1.
  ?x2 ex:rel170 ?x3.
  ?x4 ex:rel170 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel171 ?x1.
  ?x2 ex:rel171 ?x3.
  ?x4 ex:rel171 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma178> a r:Inference; r:gives {_:sk1006 http:methodName "GET".
  _:sk1006 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1006 http:resp _:sk1007.
  _:sk1007 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel169 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel169 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel169 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma180>);
  r:rule <#lemma181>.

<#lemma179> a r:Extraction; r:gives {{?x0 ex:rel169 ?x1.
  ?x2 ex:rel169 ?x3.
  ?x4 ex:rel169 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel170 ?x1.
  ?x2 ex:rel170 ?x3.
  ?x4 ex:rel170 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma180> a r:Inference; r:gives {_:sk1000 http:methodName "GET".
  _:sk1000 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk1000 http:resp _:sk1001.
  _:sk1001 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel168 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel168 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel168 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma182>);
  r:rule <#lemma183>.

<#lemma181> a r:Extraction; r:gives {{?x0 ex:rel168 ?x1.
  ?x2 ex:rel168 ?x3.
  ?x4 ex:rel168 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel169 ?x1.
  ?x2 ex:rel169 ?x3.
  ?x4 ex:rel169 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma182> a r:Inference; r:gives {_:sk994 http:methodName "GET".
  _:sk994 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk994 http:resp _:sk995.
  _:sk995 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel167 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel167 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel167 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma184>);
  r:rule <#lemma185>.

<#lemma183> a r:Extraction; r:gives {{?x0 ex:rel167 ?x1.
  ?x2 ex:rel167 ?x3.
  ?x4 ex:rel167 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel168 ?x1.
  ?x2 ex:rel168 ?x3.
  ?x4 ex:rel168 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma184> a r:Inference; r:gives {_:sk988 http:methodName "GET".
  _:sk988 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk988 http:resp _:sk989.
  _:sk989 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel166 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel166 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel166 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma186>);
  r:rule <#lemma187>.

<#lemma185> a r:Extraction; r:gives {{?x0 ex:rel166 ?x1.
  ?x2 ex:rel166 ?x3.
  ?x4 ex:rel166 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel167 ?x1.
  ?x2 ex:rel167 ?x3.
  ?x4 ex:rel167 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma186> a r:Inference; r:gives {_:sk982 http:methodName "GET".
  _:sk982 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk982 http:resp _:sk983.
  _:sk983 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel165 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel165 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel165 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma188>);
  r:rule <#lemma189>.

<#lemma187> a r:Extraction; r:gives {{?x0 ex:rel165 ?x1.
  ?x2 ex:rel165 ?x3.
  ?x4 ex:rel165 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel166 ?x1.
  ?x2 ex:rel166 ?x3.
  ?x4 ex:rel166 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma188> a r:Inference; r:gives {_:sk976 http:methodName "GET".
  _:sk976 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk976 http:resp _:sk977.
  _:sk977 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel164 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel164 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel164 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma190>);
  r:rule <#lemma191>.

<#lemma189> a r:Extraction; r:gives {{?x0 ex:rel164 ?x1.
  ?x2 ex:rel164 ?x3.
  ?x4 ex:rel164 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel165 ?x1.
  ?x2 ex:rel165 ?x3.
  ?x4 ex:rel165 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma190> a r:Inference; r:gives {_:sk970 http:methodName "GET".
  _:sk970 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk970 http:resp _:sk971.
  _:sk971 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel163 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel163 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel163 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma192>);
  r:rule <#lemma193>.

<#lemma191> a r:Extraction; r:gives {{?x0 ex:rel163 ?x1.
  ?x2 ex:rel163 ?x3.
  ?x4 ex:rel163 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel164 ?x1.
  ?x2 ex:rel164 ?x3.
  ?x4 ex:rel164 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma192> a r:Inference; r:gives {_:sk964 http:methodName "GET".
  _:sk964 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk964 http:resp _:sk965.
  _:sk965 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel162 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel162 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel162 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma194>);
  r:rule <#lemma195>.

<#lemma193> a r:Extraction; r:gives {{?x0 ex:rel162 ?x1.
  ?x2 ex:rel162 ?x3.
  ?x4 ex:rel162 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel163 ?x1.
  ?x2 ex:rel163 ?x3.
  ?x4 ex:rel163 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma194> a r:Inference; r:gives {_:sk958 http:methodName "GET".
  _:sk958 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk958 http:resp _:sk959.
  _:sk959 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel161 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel161 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel161 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma196>);
  r:rule <#lemma197>.

<#lemma195> a r:Extraction; r:gives {{?x0 ex:rel161 ?x1.
  ?x2 ex:rel161 ?x3.
  ?x4 ex:rel161 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel162 ?x1.
  ?x2 ex:rel162 ?x3.
  ?x4 ex:rel162 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma196> a r:Inference; r:gives {_:sk952 http:methodName "GET".
  _:sk952 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk952 http:resp _:sk953.
  _:sk953 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel160 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel160 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel160 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma198>);
  r:rule <#lemma199>.

<#lemma197> a r:Extraction; r:gives {{?x0 ex:rel160 ?x1.
  ?x2 ex:rel160 ?x3.
  ?x4 ex:rel160 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel161 ?x1.
  ?x2 ex:rel161 ?x3.
  ?x4 ex:rel161 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma198> a r:Inference; r:gives {_:sk946 http:methodName "GET".
  _:sk946 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk946 http:resp _:sk947.
  _:sk947 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel159 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel159 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel159 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma200>);
  r:rule <#lemma201>.

<#lemma199> a r:Extraction; r:gives {{?x0 ex:rel159 ?x1.
  ?x2 ex:rel159 ?x3.
  ?x4 ex:rel159 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel160 ?x1.
  ?x2 ex:rel160 ?x3.
  ?x4 ex:rel160 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma200> a r:Inference; r:gives {_:sk940 http:methodName "GET".
  _:sk940 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk940 http:resp _:sk941.
  _:sk941 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel158 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel158 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel158 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma202>);
  r:rule <#lemma203>.

<#lemma201> a r:Extraction; r:gives {{?x0 ex:rel158 ?x1.
  ?x2 ex:rel158 ?x3.
  ?x4 ex:rel158 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel159 ?x1.
  ?x2 ex:rel159 ?x3.
  ?x4 ex:rel159 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma202> a r:Inference; r:gives {_:sk934 http:methodName "GET".
  _:sk934 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk934 http:resp _:sk935.
  _:sk935 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel157 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel157 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel157 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma204>);
  r:rule <#lemma205>.

<#lemma203> a r:Extraction; r:gives {{?x0 ex:rel157 ?x1.
  ?x2 ex:rel157 ?x3.
  ?x4 ex:rel157 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel158 ?x1.
  ?x2 ex:rel158 ?x3.
  ?x4 ex:rel158 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma204> a r:Inference; r:gives {_:sk928 http:methodName "GET".
  _:sk928 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk928 http:resp _:sk929.
  _:sk929 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel156 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel156 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel156 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma206>);
  r:rule <#lemma207>.

<#lemma205> a r:Extraction; r:gives {{?x0 ex:rel156 ?x1.
  ?x2 ex:rel156 ?x3.
  ?x4 ex:rel156 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel157 ?x1.
  ?x2 ex:rel157 ?x3.
  ?x4 ex:rel157 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma206> a r:Inference; r:gives {_:sk922 http:methodName "GET".
  _:sk922 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk922 http:resp _:sk923.
  _:sk923 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel155 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel155 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel155 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma208>);
  r:rule <#lemma209>.

<#lemma207> a r:Extraction; r:gives {{?x0 ex:rel155 ?x1.
  ?x2 ex:rel155 ?x3.
  ?x4 ex:rel155 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel156 ?x1.
  ?x2 ex:rel156 ?x3.
  ?x4 ex:rel156 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma208> a r:Inference; r:gives {_:sk916 http:methodName "GET".
  _:sk916 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk916 http:resp _:sk917.
  _:sk917 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel154 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel154 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel154 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma210>);
  r:rule <#lemma211>.

<#lemma209> a r:Extraction; r:gives {{?x0 ex:rel154 ?x1.
  ?x2 ex:rel154 ?x3.
  ?x4 ex:rel154 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel155 ?x1.
  ?x2 ex:rel155 ?x3.
  ?x4 ex:rel155 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma210> a r:Inference; r:gives {_:sk910 http:methodName "GET".
  _:sk910 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk910 http:resp _:sk911.
  _:sk911 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel153 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel153 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel153 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma212>);
  r:rule <#lemma213>.

<#lemma211> a r:Extraction; r:gives {{?x0 ex:rel153 ?x1.
  ?x2 ex:rel153 ?x3.
  ?x4 ex:rel153 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel154 ?x1.
  ?x2 ex:rel154 ?x3.
  ?x4 ex:rel154 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma212> a r:Inference; r:gives {_:sk904 http:methodName "GET".
  _:sk904 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk904 http:resp _:sk905.
  _:sk905 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel152 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel152 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel152 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma214>);
  r:rule <#lemma215>.

<#lemma213> a r:Extraction; r:gives {{?x0 ex:rel152 ?x1.
  ?x2 ex:rel152 ?x3.
  ?x4 ex:rel152 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel153 ?x1.
  ?x2 ex:rel153 ?x3.
  ?x4 ex:rel153 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma214> a r:Inference; r:gives {_:sk898 http:methodName "GET".
  _:sk898 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk898 http:resp _:sk899.
  _:sk899 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel151 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel151 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel151 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma216>);
  r:rule <#lemma217>.

<#lemma215> a r:Extraction; r:gives {{?x0 ex:rel151 ?x1.
  ?x2 ex:rel151 ?x3.
  ?x4 ex:rel151 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel152 ?x1.
  ?x2 ex:rel152 ?x3.
  ?x4 ex:rel152 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma216> a r:Inference; r:gives {_:sk892 http:methodName "GET".
  _:sk892 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk892 http:resp _:sk893.
  _:sk893 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel150 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel150 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel150 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma218>);
  r:rule <#lemma219>.

<#lemma217> a r:Extraction; r:gives {{?x0 ex:rel150 ?x1.
  ?x2 ex:rel150 ?x3.
  ?x4 ex:rel150 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel151 ?x1.
  ?x2 ex:rel151 ?x3.
  ?x4 ex:rel151 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma218> a r:Inference; r:gives {_:sk886 http:methodName "GET".
  _:sk886 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk886 http:resp _:sk887.
  _:sk887 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel149 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel149 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel149 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma220>);
  r:rule <#lemma221>.

<#lemma219> a r:Extraction; r:gives {{?x0 ex:rel149 ?x1.
  ?x2 ex:rel149 ?x3.
  ?x4 ex:rel149 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel150 ?x1.
  ?x2 ex:rel150 ?x3.
  ?x4 ex:rel150 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma220> a r:Inference; r:gives {_:sk880 http:methodName "GET".
  _:sk880 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk880 http:resp _:sk881.
  _:sk881 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel148 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel148 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel148 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma222>);
  r:rule <#lemma223>.

<#lemma221> a r:Extraction; r:gives {{?x0 ex:rel148 ?x1.
  ?x2 ex:rel148 ?x3.
  ?x4 ex:rel148 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel149 ?x1.
  ?x2 ex:rel149 ?x3.
  ?x4 ex:rel149 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma222> a r:Inference; r:gives {_:sk874 http:methodName "GET".
  _:sk874 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk874 http:resp _:sk875.
  _:sk875 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel147 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel147 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel147 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma224>);
  r:rule <#lemma225>.

<#lemma223> a r:Extraction; r:gives {{?x0 ex:rel147 ?x1.
  ?x2 ex:rel147 ?x3.
  ?x4 ex:rel147 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel148 ?x1.
  ?x2 ex:rel148 ?x3.
  ?x4 ex:rel148 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma224> a r:Inference; r:gives {_:sk868 http:methodName "GET".
  _:sk868 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk868 http:resp _:sk869.
  _:sk869 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel146 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel146 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel146 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma226>);
  r:rule <#lemma227>.

<#lemma225> a r:Extraction; r:gives {{?x0 ex:rel146 ?x1.
  ?x2 ex:rel146 ?x3.
  ?x4 ex:rel146 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel147 ?x1.
  ?x2 ex:rel147 ?x3.
  ?x4 ex:rel147 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma226> a r:Inference; r:gives {_:sk862 http:methodName "GET".
  _:sk862 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk862 http:resp _:sk863.
  _:sk863 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel145 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel145 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel145 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma228>);
  r:rule <#lemma229>.

<#lemma227> a r:Extraction; r:gives {{?x0 ex:rel145 ?x1.
  ?x2 ex:rel145 ?x3.
  ?x4 ex:rel145 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel146 ?x1.
  ?x2 ex:rel146 ?x3.
  ?x4 ex:rel146 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma228> a r:Inference; r:gives {_:sk856 http:methodName "GET".
  _:sk856 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk856 http:resp _:sk857.
  _:sk857 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel144 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel144 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel144 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma230>);
  r:rule <#lemma231>.

<#lemma229> a r:Extraction; r:gives {{?x0 ex:rel144 ?x1.
  ?x2 ex:rel144 ?x3.
  ?x4 ex:rel144 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel145 ?x1.
  ?x2 ex:rel145 ?x3.
  ?x4 ex:rel145 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma230> a r:Inference; r:gives {_:sk850 http:methodName "GET".
  _:sk850 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk850 http:resp _:sk851.
  _:sk851 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel143 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel143 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel143 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma232>);
  r:rule <#lemma233>.

<#lemma231> a r:Extraction; r:gives {{?x0 ex:rel143 ?x1.
  ?x2 ex:rel143 ?x3.
  ?x4 ex:rel143 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel144 ?x1.
  ?x2 ex:rel144 ?x3.
  ?x4 ex:rel144 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma232> a r:Inference; r:gives {_:sk844 http:methodName "GET".
  _:sk844 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk844 http:resp _:sk845.
  _:sk845 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel142 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel142 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel142 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma234>);
  r:rule <#lemma235>.

<#lemma233> a r:Extraction; r:gives {{?x0 ex:rel142 ?x1.
  ?x2 ex:rel142 ?x3.
  ?x4 ex:rel142 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel143 ?x1.
  ?x2 ex:rel143 ?x3.
  ?x4 ex:rel143 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma234> a r:Inference; r:gives {_:sk838 http:methodName "GET".
  _:sk838 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk838 http:resp _:sk839.
  _:sk839 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel141 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel141 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel141 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma236>);
  r:rule <#lemma237>.

<#lemma235> a r:Extraction; r:gives {{?x0 ex:rel141 ?x1.
  ?x2 ex:rel141 ?x3.
  ?x4 ex:rel141 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel142 ?x1.
  ?x2 ex:rel142 ?x3.
  ?x4 ex:rel142 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma236> a r:Inference; r:gives {_:sk832 http:methodName "GET".
  _:sk832 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk832 http:resp _:sk833.
  _:sk833 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel140 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel140 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel140 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma238>);
  r:rule <#lemma239>.

<#lemma237> a r:Extraction; r:gives {{?x0 ex:rel140 ?x1.
  ?x2 ex:rel140 ?x3.
  ?x4 ex:rel140 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel141 ?x1.
  ?x2 ex:rel141 ?x3.
  ?x4 ex:rel141 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma238> a r:Inference; r:gives {_:sk826 http:methodName "GET".
  _:sk826 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk826 http:resp _:sk827.
  _:sk827 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel139 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel139 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel139 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma240>);
  r:rule <#lemma241>.

<#lemma239> a r:Extraction; r:gives {{?x0 ex:rel139 ?x1.
  ?x2 ex:rel139 ?x3.
  ?x4 ex:rel139 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel140 ?x1.
  ?x2 ex:rel140 ?x3.
  ?x4 ex:rel140 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma240> a r:Inference; r:gives {_:sk820 http:methodName "GET".
  _:sk820 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk820 http:resp _:sk821.
  _:sk821 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel138 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel138 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel138 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma242>);
  r:rule <#lemma243>.

<#lemma241> a r:Extraction; r:gives {{?x0 ex:rel138 ?x1.
  ?x2 ex:rel138 ?x3.
  ?x4 ex:rel138 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel139 ?x1.
  ?x2 ex:rel139 ?x3.
  ?x4 ex:rel139 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma242> a r:Inference; r:gives {_:sk814 http:methodName "GET".
  _:sk814 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk814 http:resp _:sk815.
  _:sk815 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel137 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel137 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel137 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma244>);
  r:rule <#lemma245>.

<#lemma243> a r:Extraction; r:gives {{?x0 ex:rel137 ?x1.
  ?x2 ex:rel137 ?x3.
  ?x4 ex:rel137 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel138 ?x1.
  ?x2 ex:rel138 ?x3.
  ?x4 ex:rel138 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma244> a r:Inference; r:gives {_:sk808 http:methodName "GET".
  _:sk808 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk808 http:resp _:sk809.
  _:sk809 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel136 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel136 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel136 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma246>);
  r:rule <#lemma247>.

<#lemma245> a r:Extraction; r:gives {{?x0 ex:rel136 ?x1.
  ?x2 ex:rel136 ?x3.
  ?x4 ex:rel136 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel137 ?x1.
  ?x2 ex:rel137 ?x3.
  ?x4 ex:rel137 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma246> a r:Inference; r:gives {_:sk802 http:methodName "GET".
  _:sk802 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk802 http:resp _:sk803.
  _:sk803 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel135 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel135 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel135 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma248>);
  r:rule <#lemma249>.

<#lemma247> a r:Extraction; r:gives {{?x0 ex:rel135 ?x1.
  ?x2 ex:rel135 ?x3.
  ?x4 ex:rel135 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel136 ?x1.
  ?x2 ex:rel136 ?x3.
  ?x4 ex:rel136 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma248> a r:Inference; r:gives {_:sk796 http:methodName "GET".
  _:sk796 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk796 http:resp _:sk797.
  _:sk797 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel134 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel134 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel134 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma250>);
  r:rule <#lemma251>.

<#lemma249> a r:Extraction; r:gives {{?x0 ex:rel134 ?x1.
  ?x2 ex:rel134 ?x3.
  ?x4 ex:rel134 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel135 ?x1.
  ?x2 ex:rel135 ?x3.
  ?x4 ex:rel135 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma250> a r:Inference; r:gives {_:sk790 http:methodName "GET".
  _:sk790 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk790 http:resp _:sk791.
  _:sk791 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel133 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel133 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel133 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma252>);
  r:rule <#lemma253>.

<#lemma251> a r:Extraction; r:gives {{?x0 ex:rel133 ?x1.
  ?x2 ex:rel133 ?x3.
  ?x4 ex:rel133 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel134 ?x1.
  ?x2 ex:rel134 ?x3.
  ?x4 ex:rel134 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma252> a r:Inference; r:gives {_:sk784 http:methodName "GET".
  _:sk784 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk784 http:resp _:sk785.
  _:sk785 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel132 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel132 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel132 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma254>);
  r:rule <#lemma255>.

<#lemma253> a r:Extraction; r:gives {{?x0 ex:rel132 ?x1.
  ?x2 ex:rel132 ?x3.
  ?x4 ex:rel132 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel133 ?x1.
  ?x2 ex:rel133 ?x3.
  ?x4 ex:rel133 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma254> a r:Inference; r:gives {_:sk778 http:methodName "GET".
  _:sk778 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk778 http:resp _:sk779.
  _:sk779 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel131 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel131 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel131 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma256>);
  r:rule <#lemma257>.

<#lemma255> a r:Extraction; r:gives {{?x0 ex:rel131 ?x1.
  ?x2 ex:rel131 ?x3.
  ?x4 ex:rel131 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel132 ?x1.
  ?x2 ex:rel132 ?x3.
  ?x4 ex:rel132 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma256> a r:Inference; r:gives {_:sk772 http:methodName "GET".
  _:sk772 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk772 http:resp _:sk773.
  _:sk773 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel130 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel130 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel130 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma258>);
  r:rule <#lemma259>.

<#lemma257> a r:Extraction; r:gives {{?x0 ex:rel130 ?x1.
  ?x2 ex:rel130 ?x3.
  ?x4 ex:rel130 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel131 ?x1.
  ?x2 ex:rel131 ?x3.
  ?x4 ex:rel131 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma258> a r:Inference; r:gives {_:sk766 http:methodName "GET".
  _:sk766 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk766 http:resp _:sk767.
  _:sk767 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel129 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel129 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel129 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma260>);
  r:rule <#lemma261>.

<#lemma259> a r:Extraction; r:gives {{?x0 ex:rel129 ?x1.
  ?x2 ex:rel129 ?x3.
  ?x4 ex:rel129 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel130 ?x1.
  ?x2 ex:rel130 ?x3.
  ?x4 ex:rel130 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma260> a r:Inference; r:gives {_:sk760 http:methodName "GET".
  _:sk760 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk760 http:resp _:sk761.
  _:sk761 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel128 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel128 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel128 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma262>);
  r:rule <#lemma263>.

<#lemma261> a r:Extraction; r:gives {{?x0 ex:rel128 ?x1.
  ?x2 ex:rel128 ?x3.
  ?x4 ex:rel128 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel129 ?x1.
  ?x2 ex:rel129 ?x3.
  ?x4 ex:rel129 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma262> a r:Inference; r:gives {_:sk754 http:methodName "GET".
  _:sk754 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk754 http:resp _:sk755.
  _:sk755 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel127 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel127 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel127 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma264>);
  r:rule <#lemma265>.

<#lemma263> a r:Extraction; r:gives {{?x0 ex:rel127 ?x1.
  ?x2 ex:rel127 ?x3.
  ?x4 ex:rel127 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel128 ?x1.
  ?x2 ex:rel128 ?x3.
  ?x4 ex:rel128 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma264> a r:Inference; r:gives {_:sk748 http:methodName "GET".
  _:sk748 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk748 http:resp _:sk749.
  _:sk749 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel126 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel126 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel126 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma266>);
  r:rule <#lemma267>.

<#lemma265> a r:Extraction; r:gives {{?x0 ex:rel126 ?x1.
  ?x2 ex:rel126 ?x3.
  ?x4 ex:rel126 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel127 ?x1.
  ?x2 ex:rel127 ?x3.
  ?x4 ex:rel127 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma266> a r:Inference; r:gives {_:sk742 http:methodName "GET".
  _:sk742 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk742 http:resp _:sk743.
  _:sk743 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel125 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel125 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel125 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma268>);
  r:rule <#lemma269>.

<#lemma267> a r:Extraction; r:gives {{?x0 ex:rel125 ?x1.
  ?x2 ex:rel125 ?x3.
  ?x4 ex:rel125 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel126 ?x1.
  ?x2 ex:rel126 ?x3.
  ?x4 ex:rel126 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma268> a r:Inference; r:gives {_:sk736 http:methodName "GET".
  _:sk736 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk736 http:resp _:sk737.
  _:sk737 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel124 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel124 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel124 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma270>);
  r:rule <#lemma271>.

<#lemma269> a r:Extraction; r:gives {{?x0 ex:rel124 ?x1.
  ?x2 ex:rel124 ?x3.
  ?x4 ex:rel124 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel125 ?x1.
  ?x2 ex:rel125 ?x3.
  ?x4 ex:rel125 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma270> a r:Inference; r:gives {_:sk730 http:methodName "GET".
  _:sk730 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk730 http:resp _:sk731.
  _:sk731 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel123 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel123 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel123 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma272>);
  r:rule <#lemma273>.

<#lemma271> a r:Extraction; r:gives {{?x0 ex:rel123 ?x1.
  ?x2 ex:rel123 ?x3.
  ?x4 ex:rel123 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel124 ?x1.
  ?x2 ex:rel124 ?x3.
  ?x4 ex:rel124 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma272> a r:Inference; r:gives {_:sk724 http:methodName "GET".
  _:sk724 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk724 http:resp _:sk725.
  _:sk725 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel122 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel122 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel122 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma274>);
  r:rule <#lemma275>.

<#lemma273> a r:Extraction; r:gives {{?x0 ex:rel122 ?x1.
  ?x2 ex:rel122 ?x3.
  ?x4 ex:rel122 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel123 ?x1.
  ?x2 ex:rel123 ?x3.
  ?x4 ex:rel123 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma274> a r:Inference; r:gives {_:sk718 http:methodName "GET".
  _:sk718 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk718 http:resp _:sk719.
  _:sk719 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel121 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel121 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel121 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma276>);
  r:rule <#lemma277>.

<#lemma275> a r:Extraction; r:gives {{?x0 ex:rel121 ?x1.
  ?x2 ex:rel121 ?x3.
  ?x4 ex:rel121 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel122 ?x1.
  ?x2 ex:rel122 ?x3.
  ?x4 ex:rel122 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma276> a r:Inference; r:gives {_:sk712 http:methodName "GET".
  _:sk712 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk712 http:resp _:sk713.
  _:sk713 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel120 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel120 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel120 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma278>);
  r:rule <#lemma279>.

<#lemma277> a r:Extraction; r:gives {{?x0 ex:rel120 ?x1.
  ?x2 ex:rel120 ?x3.
  ?x4 ex:rel120 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel121 ?x1.
  ?x2 ex:rel121 ?x3.
  ?x4 ex:rel121 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma278> a r:Inference; r:gives {_:sk706 http:methodName "GET".
  _:sk706 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk706 http:resp _:sk707.
  _:sk707 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel119 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel119 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel119 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma280>);
  r:rule <#lemma281>.

<#lemma279> a r:Extraction; r:gives {{?x0 ex:rel119 ?x1.
  ?x2 ex:rel119 ?x3.
  ?x4 ex:rel119 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel120 ?x1.
  ?x2 ex:rel120 ?x3.
  ?x4 ex:rel120 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma280> a r:Inference; r:gives {_:sk700 http:methodName "GET".
  _:sk700 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk700 http:resp _:sk701.
  _:sk701 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel118 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel118 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel118 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma282>);
  r:rule <#lemma283>.

<#lemma281> a r:Extraction; r:gives {{?x0 ex:rel118 ?x1.
  ?x2 ex:rel118 ?x3.
  ?x4 ex:rel118 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel119 ?x1.
  ?x2 ex:rel119 ?x3.
  ?x4 ex:rel119 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma282> a r:Inference; r:gives {_:sk694 http:methodName "GET".
  _:sk694 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk694 http:resp _:sk695.
  _:sk695 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel117 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel117 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel117 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma284>);
  r:rule <#lemma285>.

<#lemma283> a r:Extraction; r:gives {{?x0 ex:rel117 ?x1.
  ?x2 ex:rel117 ?x3.
  ?x4 ex:rel117 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel118 ?x1.
  ?x2 ex:rel118 ?x3.
  ?x4 ex:rel118 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma284> a r:Inference; r:gives {_:sk688 http:methodName "GET".
  _:sk688 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk688 http:resp _:sk689.
  _:sk689 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel116 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel116 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel116 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma286>);
  r:rule <#lemma287>.

<#lemma285> a r:Extraction; r:gives {{?x0 ex:rel116 ?x1.
  ?x2 ex:rel116 ?x3.
  ?x4 ex:rel116 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel117 ?x1.
  ?x2 ex:rel117 ?x3.
  ?x4 ex:rel117 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma286> a r:Inference; r:gives {_:sk682 http:methodName "GET".
  _:sk682 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk682 http:resp _:sk683.
  _:sk683 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel115 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel115 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel115 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma288>);
  r:rule <#lemma289>.

<#lemma287> a r:Extraction; r:gives {{?x0 ex:rel115 ?x1.
  ?x2 ex:rel115 ?x3.
  ?x4 ex:rel115 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel116 ?x1.
  ?x2 ex:rel116 ?x3.
  ?x4 ex:rel116 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma288> a r:Inference; r:gives {_:sk676 http:methodName "GET".
  _:sk676 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk676 http:resp _:sk677.
  _:sk677 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel114 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel114 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel114 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma290>);
  r:rule <#lemma291>.

<#lemma289> a r:Extraction; r:gives {{?x0 ex:rel114 ?x1.
  ?x2 ex:rel114 ?x3.
  ?x4 ex:rel114 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel115 ?x1.
  ?x2 ex:rel115 ?x3.
  ?x4 ex:rel115 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma290> a r:Inference; r:gives {_:sk670 http:methodName "GET".
  _:sk670 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk670 http:resp _:sk671.
  _:sk671 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel113 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel113 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel113 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma292>);
  r:rule <#lemma293>.

<#lemma291> a r:Extraction; r:gives {{?x0 ex:rel113 ?x1.
  ?x2 ex:rel113 ?x3.
  ?x4 ex:rel113 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel114 ?x1.
  ?x2 ex:rel114 ?x3.
  ?x4 ex:rel114 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma292> a r:Inference; r:gives {_:sk664 http:methodName "GET".
  _:sk664 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk664 http:resp _:sk665.
  _:sk665 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel112 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel112 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel112 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma294>);
  r:rule <#lemma295>.

<#lemma293> a r:Extraction; r:gives {{?x0 ex:rel112 ?x1.
  ?x2 ex:rel112 ?x3.
  ?x4 ex:rel112 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel113 ?x1.
  ?x2 ex:rel113 ?x3.
  ?x4 ex:rel113 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma294> a r:Inference; r:gives {_:sk658 http:methodName "GET".
  _:sk658 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk658 http:resp _:sk659.
  _:sk659 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel111 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel111 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel111 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma296>);
  r:rule <#lemma297>.

<#lemma295> a r:Extraction; r:gives {{?x0 ex:rel111 ?x1.
  ?x2 ex:rel111 ?x3.
  ?x4 ex:rel111 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel112 ?x1.
  ?x2 ex:rel112 ?x3.
  ?x4 ex:rel112 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma296> a r:Inference; r:gives {_:sk652 http:methodName "GET".
  _:sk652 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk652 http:resp _:sk653.
  _:sk653 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel110 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel110 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel110 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma298>);
  r:rule <#lemma299>.

<#lemma297> a r:Extraction; r:gives {{?x0 ex:rel110 ?x1.
  ?x2 ex:rel110 ?x3.
  ?x4 ex:rel110 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel111 ?x1.
  ?x2 ex:rel111 ?x3.
  ?x4 ex:rel111 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma298> a r:Inference; r:gives {_:sk646 http:methodName "GET".
  _:sk646 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk646 http:resp _:sk647.
  _:sk647 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel109 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel109 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel109 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma300>);
  r:rule <#lemma301>.

<#lemma299> a r:Extraction; r:gives {{?x0 ex:rel109 ?x1.
  ?x2 ex:rel109 ?x3.
  ?x4 ex:rel109 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel110 ?x1.
  ?x2 ex:rel110 ?x3.
  ?x4 ex:rel110 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma300> a r:Inference; r:gives {_:sk640 http:methodName "GET".
  _:sk640 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk640 http:resp _:sk641.
  _:sk641 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel108 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel108 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel108 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma302>);
  r:rule <#lemma303>.

<#lemma301> a r:Extraction; r:gives {{?x0 ex:rel108 ?x1.
  ?x2 ex:rel108 ?x3.
  ?x4 ex:rel108 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel109 ?x1.
  ?x2 ex:rel109 ?x3.
  ?x4 ex:rel109 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma302> a r:Inference; r:gives {_:sk634 http:methodName "GET".
  _:sk634 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk634 http:resp _:sk635.
  _:sk635 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel107 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel107 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel107 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma304>);
  r:rule <#lemma305>.

<#lemma303> a r:Extraction; r:gives {{?x0 ex:rel107 ?x1.
  ?x2 ex:rel107 ?x3.
  ?x4 ex:rel107 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel108 ?x1.
  ?x2 ex:rel108 ?x3.
  ?x4 ex:rel108 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma304> a r:Inference; r:gives {_:sk628 http:methodName "GET".
  _:sk628 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk628 http:resp _:sk629.
  _:sk629 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel106 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel106 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel106 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma306>);
  r:rule <#lemma307>.

<#lemma305> a r:Extraction; r:gives {{?x0 ex:rel106 ?x1.
  ?x2 ex:rel106 ?x3.
  ?x4 ex:rel106 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel107 ?x1.
  ?x2 ex:rel107 ?x3.
  ?x4 ex:rel107 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma306> a r:Inference; r:gives {_:sk622 http:methodName "GET".
  _:sk622 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk622 http:resp _:sk623.
  _:sk623 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel105 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel105 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel105 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma308>);
  r:rule <#lemma309>.

<#lemma307> a r:Extraction; r:gives {{?x0 ex:rel105 ?x1.
  ?x2 ex:rel105 ?x3.
  ?x4 ex:rel105 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel106 ?x1.
  ?x2 ex:rel106 ?x3.
  ?x4 ex:rel106 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma308> a r:Inference; r:gives {_:sk616 http:methodName "GET".
  _:sk616 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk616 http:resp _:sk617.
  _:sk617 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel104 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel104 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel104 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma310>);
  r:rule <#lemma311>.

<#lemma309> a r:Extraction; r:gives {{?x0 ex:rel104 ?x1.
  ?x2 ex:rel104 ?x3.
  ?x4 ex:rel104 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel105 ?x1.
  ?x2 ex:rel105 ?x3.
  ?x4 ex:rel105 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma310> a r:Inference; r:gives {_:sk610 http:methodName "GET".
  _:sk610 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk610 http:resp _:sk611.
  _:sk611 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel103 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel103 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel103 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma312>);
  r:rule <#lemma313>.

<#lemma311> a r:Extraction; r:gives {{?x0 ex:rel103 ?x1.
  ?x2 ex:rel103 ?x3.
  ?x4 ex:rel103 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel104 ?x1.
  ?x2 ex:rel104 ?x3.
  ?x4 ex:rel104 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma312> a r:Inference; r:gives {_:sk604 http:methodName "GET".
  _:sk604 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk604 http:resp _:sk605.
  _:sk605 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel102 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel102 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel102 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma314>);
  r:rule <#lemma315>.

<#lemma313> a r:Extraction; r:gives {{?x0 ex:rel102 ?x1.
  ?x2 ex:rel102 ?x3.
  ?x4 ex:rel102 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel103 ?x1.
  ?x2 ex:rel103 ?x3.
  ?x4 ex:rel103 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma314> a r:Inference; r:gives {_:sk598 http:methodName "GET".
  _:sk598 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk598 http:resp _:sk599.
  _:sk599 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel101 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel101 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel101 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma316>);
  r:rule <#lemma317>.

<#lemma315> a r:Extraction; r:gives {{?x0 ex:rel101 ?x1.
  ?x2 ex:rel101 ?x3.
  ?x4 ex:rel101 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel102 ?x1.
  ?x2 ex:rel102 ?x3.
  ?x4 ex:rel102 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma316> a r:Inference; r:gives {_:sk592 http:methodName "GET".
  _:sk592 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk592 http:resp _:sk593.
  _:sk593 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel100 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel100 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel100 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma318>);
  r:rule <#lemma319>.

<#lemma317> a r:Extraction; r:gives {{?x0 ex:rel100 ?x1.
  ?x2 ex:rel100 ?x3.
  ?x4 ex:rel100 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel101 ?x1.
  ?x2 ex:rel101 ?x3.
  ?x4 ex:rel101 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma318> a r:Inference; r:gives {_:sk586 http:methodName "GET".
  _:sk586 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk586 http:resp _:sk587.
  _:sk587 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel99 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel99 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel99 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma320>);
  r:rule <#lemma321>.

<#lemma319> a r:Extraction; r:gives {{?x0 ex:rel99 ?x1.
  ?x2 ex:rel99 ?x3.
  ?x4 ex:rel99 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel100 ?x1.
  ?x2 ex:rel100 ?x3.
  ?x4 ex:rel100 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma320> a r:Inference; r:gives {_:sk580 http:methodName "GET".
  _:sk580 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk580 http:resp _:sk581.
  _:sk581 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel98 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel98 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel98 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma322>);
  r:rule <#lemma323>.

<#lemma321> a r:Extraction; r:gives {{?x0 ex:rel98 ?x1.
  ?x2 ex:rel98 ?x3.
  ?x4 ex:rel98 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel99 ?x1.
  ?x2 ex:rel99 ?x3.
  ?x4 ex:rel99 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma322> a r:Inference; r:gives {_:sk574 http:methodName "GET".
  _:sk574 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk574 http:resp _:sk575.
  _:sk575 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel97 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel97 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel97 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma324>);
  r:rule <#lemma325>.

<#lemma323> a r:Extraction; r:gives {{?x0 ex:rel97 ?x1.
  ?x2 ex:rel97 ?x3.
  ?x4 ex:rel97 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel98 ?x1.
  ?x2 ex:rel98 ?x3.
  ?x4 ex:rel98 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma324> a r:Inference; r:gives {_:sk568 http:methodName "GET".
  _:sk568 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk568 http:resp _:sk569.
  _:sk569 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel96 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel96 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel96 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma326>);
  r:rule <#lemma327>.

<#lemma325> a r:Extraction; r:gives {{?x0 ex:rel96 ?x1.
  ?x2 ex:rel96 ?x3.
  ?x4 ex:rel96 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel97 ?x1.
  ?x2 ex:rel97 ?x3.
  ?x4 ex:rel97 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma326> a r:Inference; r:gives {_:sk562 http:methodName "GET".
  _:sk562 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk562 http:resp _:sk563.
  _:sk563 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel95 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel95 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel95 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma328>);
  r:rule <#lemma329>.

<#lemma327> a r:Extraction; r:gives {{?x0 ex:rel95 ?x1.
  ?x2 ex:rel95 ?x3.
  ?x4 ex:rel95 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel96 ?x1.
  ?x2 ex:rel96 ?x3.
  ?x4 ex:rel96 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma328> a r:Inference; r:gives {_:sk556 http:methodName "GET".
  _:sk556 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk556 http:resp _:sk557.
  _:sk557 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel94 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel94 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel94 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma330>);
  r:rule <#lemma331>.

<#lemma329> a r:Extraction; r:gives {{?x0 ex:rel94 ?x1.
  ?x2 ex:rel94 ?x3.
  ?x4 ex:rel94 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel95 ?x1.
  ?x2 ex:rel95 ?x3.
  ?x4 ex:rel95 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma330> a r:Inference; r:gives {_:sk550 http:methodName "GET".
  _:sk550 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk550 http:resp _:sk551.
  _:sk551 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel93 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel93 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel93 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma332>);
  r:rule <#lemma333>.

<#lemma331> a r:Extraction; r:gives {{?x0 ex:rel93 ?x1.
  ?x2 ex:rel93 ?x3.
  ?x4 ex:rel93 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel94 ?x1.
  ?x2 ex:rel94 ?x3.
  ?x4 ex:rel94 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma332> a r:Inference; r:gives {_:sk544 http:methodName "GET".
  _:sk544 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk544 http:resp _:sk545.
  _:sk545 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel92 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel92 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel92 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma334>);
  r:rule <#lemma335>.

<#lemma333> a r:Extraction; r:gives {{?x0 ex:rel92 ?x1.
  ?x2 ex:rel92 ?x3.
  ?x4 ex:rel92 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel93 ?x1.
  ?x2 ex:rel93 ?x3.
  ?x4 ex:rel93 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma334> a r:Inference; r:gives {_:sk538 http:methodName "GET".
  _:sk538 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk538 http:resp _:sk539.
  _:sk539 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel91 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel91 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel91 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma336>);
  r:rule <#lemma337>.

<#lemma335> a r:Extraction; r:gives {{?x0 ex:rel91 ?x1.
  ?x2 ex:rel91 ?x3.
  ?x4 ex:rel91 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel92 ?x1.
  ?x2 ex:rel92 ?x3.
  ?x4 ex:rel92 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma336> a r:Inference; r:gives {_:sk532 http:methodName "GET".
  _:sk532 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk532 http:resp _:sk533.
  _:sk533 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel90 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel90 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel90 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma338>);
  r:rule <#lemma339>.

<#lemma337> a r:Extraction; r:gives {{?x0 ex:rel90 ?x1.
  ?x2 ex:rel90 ?x3.
  ?x4 ex:rel90 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel91 ?x1.
  ?x2 ex:rel91 ?x3.
  ?x4 ex:rel91 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma338> a r:Inference; r:gives {_:sk526 http:methodName "GET".
  _:sk526 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk526 http:resp _:sk527.
  _:sk527 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel89 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel89 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel89 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma340>);
  r:rule <#lemma341>.

<#lemma339> a r:Extraction; r:gives {{?x0 ex:rel89 ?x1.
  ?x2 ex:rel89 ?x3.
  ?x4 ex:rel89 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel90 ?x1.
  ?x2 ex:rel90 ?x3.
  ?x4 ex:rel90 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma340> a r:Inference; r:gives {_:sk520 http:methodName "GET".
  _:sk520 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk520 http:resp _:sk521.
  _:sk521 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel88 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel88 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel88 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma342>);
  r:rule <#lemma343>.

<#lemma341> a r:Extraction; r:gives {{?x0 ex:rel88 ?x1.
  ?x2 ex:rel88 ?x3.
  ?x4 ex:rel88 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel89 ?x1.
  ?x2 ex:rel89 ?x3.
  ?x4 ex:rel89 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma342> a r:Inference; r:gives {_:sk514 http:methodName "GET".
  _:sk514 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk514 http:resp _:sk515.
  _:sk515 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel87 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel87 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel87 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma344>);
  r:rule <#lemma345>.

<#lemma343> a r:Extraction; r:gives {{?x0 ex:rel87 ?x1.
  ?x2 ex:rel87 ?x3.
  ?x4 ex:rel87 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel88 ?x1.
  ?x2 ex:rel88 ?x3.
  ?x4 ex:rel88 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma344> a r:Inference; r:gives {_:sk508 http:methodName "GET".
  _:sk508 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk508 http:resp _:sk509.
  _:sk509 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel86 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel86 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel86 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma346>);
  r:rule <#lemma347>.

<#lemma345> a r:Extraction; r:gives {{?x0 ex:rel86 ?x1.
  ?x2 ex:rel86 ?x3.
  ?x4 ex:rel86 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel87 ?x1.
  ?x2 ex:rel87 ?x3.
  ?x4 ex:rel87 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma346> a r:Inference; r:gives {_:sk502 http:methodName "GET".
  _:sk502 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk502 http:resp _:sk503.
  _:sk503 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel85 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel85 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel85 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma348>);
  r:rule <#lemma349>.

<#lemma347> a r:Extraction; r:gives {{?x0 ex:rel85 ?x1.
  ?x2 ex:rel85 ?x3.
  ?x4 ex:rel85 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel86 ?x1.
  ?x2 ex:rel86 ?x3.
  ?x4 ex:rel86 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma348> a r:Inference; r:gives {_:sk496 http:methodName "GET".
  _:sk496 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk496 http:resp _:sk497.
  _:sk497 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel84 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel84 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel84 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma350>);
  r:rule <#lemma351>.

<#lemma349> a r:Extraction; r:gives {{?x0 ex:rel84 ?x1.
  ?x2 ex:rel84 ?x3.
  ?x4 ex:rel84 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel85 ?x1.
  ?x2 ex:rel85 ?x3.
  ?x4 ex:rel85 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma350> a r:Inference; r:gives {_:sk490 http:methodName "GET".
  _:sk490 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk490 http:resp _:sk491.
  _:sk491 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel83 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel83 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel83 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma352>);
  r:rule <#lemma353>.

<#lemma351> a r:Extraction; r:gives {{?x0 ex:rel83 ?x1.
  ?x2 ex:rel83 ?x3.
  ?x4 ex:rel83 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel84 ?x1.
  ?x2 ex:rel84 ?x3.
  ?x4 ex:rel84 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma352> a r:Inference; r:gives {_:sk484 http:methodName "GET".
  _:sk484 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk484 http:resp _:sk485.
  _:sk485 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel82 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel82 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel82 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma354>);
  r:rule <#lemma355>.

<#lemma353> a r:Extraction; r:gives {{?x0 ex:rel82 ?x1.
  ?x2 ex:rel82 ?x3.
  ?x4 ex:rel82 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel83 ?x1.
  ?x2 ex:rel83 ?x3.
  ?x4 ex:rel83 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma354> a r:Inference; r:gives {_:sk478 http:methodName "GET".
  _:sk478 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk478 http:resp _:sk479.
  _:sk479 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel81 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel81 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel81 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma356>);
  r:rule <#lemma357>.

<#lemma355> a r:Extraction; r:gives {{?x0 ex:rel81 ?x1.
  ?x2 ex:rel81 ?x3.
  ?x4 ex:rel81 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel82 ?x1.
  ?x2 ex:rel82 ?x3.
  ?x4 ex:rel82 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma356> a r:Inference; r:gives {_:sk472 http:methodName "GET".
  _:sk472 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk472 http:resp _:sk473.
  _:sk473 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel80 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel80 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel80 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma358>);
  r:rule <#lemma359>.

<#lemma357> a r:Extraction; r:gives {{?x0 ex:rel80 ?x1.
  ?x2 ex:rel80 ?x3.
  ?x4 ex:rel80 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel81 ?x1.
  ?x2 ex:rel81 ?x3.
  ?x4 ex:rel81 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma358> a r:Inference; r:gives {_:sk466 http:methodName "GET".
  _:sk466 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk466 http:resp _:sk467.
  _:sk467 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel79 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel79 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel79 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma360>);
  r:rule <#lemma361>.

<#lemma359> a r:Extraction; r:gives {{?x0 ex:rel79 ?x1.
  ?x2 ex:rel79 ?x3.
  ?x4 ex:rel79 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel80 ?x1.
  ?x2 ex:rel80 ?x3.
  ?x4 ex:rel80 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma360> a r:Inference; r:gives {_:sk460 http:methodName "GET".
  _:sk460 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk460 http:resp _:sk461.
  _:sk461 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel78 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel78 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel78 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma362>);
  r:rule <#lemma363>.

<#lemma361> a r:Extraction; r:gives {{?x0 ex:rel78 ?x1.
  ?x2 ex:rel78 ?x3.
  ?x4 ex:rel78 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel79 ?x1.
  ?x2 ex:rel79 ?x3.
  ?x4 ex:rel79 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma362> a r:Inference; r:gives {_:sk454 http:methodName "GET".
  _:sk454 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk454 http:resp _:sk455.
  _:sk455 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel77 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel77 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel77 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma364>);
  r:rule <#lemma365>.

<#lemma363> a r:Extraction; r:gives {{?x0 ex:rel77 ?x1.
  ?x2 ex:rel77 ?x3.
  ?x4 ex:rel77 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel78 ?x1.
  ?x2 ex:rel78 ?x3.
  ?x4 ex:rel78 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma364> a r:Inference; r:gives {_:sk448 http:methodName "GET".
  _:sk448 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk448 http:resp _:sk449.
  _:sk449 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel76 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel76 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel76 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma366>);
  r:rule <#lemma367>.

<#lemma365> a r:Extraction; r:gives {{?x0 ex:rel76 ?x1.
  ?x2 ex:rel76 ?x3.
  ?x4 ex:rel76 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel77 ?x1.
  ?x2 ex:rel77 ?x3.
  ?x4 ex:rel77 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma366> a r:Inference; r:gives {_:sk442 http:methodName "GET".
  _:sk442 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk442 http:resp _:sk443.
  _:sk443 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel75 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel75 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel75 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma368>);
  r:rule <#lemma369>.

<#lemma367> a r:Extraction; r:gives {{?x0 ex:rel75 ?x1.
  ?x2 ex:rel75 ?x3.
  ?x4 ex:rel75 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel76 ?x1.
  ?x2 ex:rel76 ?x3.
  ?x4 ex:rel76 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma368> a r:Inference; r:gives {_:sk436 http:methodName "GET".
  _:sk436 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk436 http:resp _:sk437.
  _:sk437 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel74 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel74 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel74 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma370>);
  r:rule <#lemma371>.

<#lemma369> a r:Extraction; r:gives {{?x0 ex:rel74 ?x1.
  ?x2 ex:rel74 ?x3.
  ?x4 ex:rel74 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel75 ?x1.
  ?x2 ex:rel75 ?x3.
  ?x4 ex:rel75 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma370> a r:Inference; r:gives {_:sk430 http:methodName "GET".
  _:sk430 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk430 http:resp _:sk431.
  _:sk431 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel73 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel73 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel73 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma372>);
  r:rule <#lemma373>.

<#lemma371> a r:Extraction; r:gives {{?x0 ex:rel73 ?x1.
  ?x2 ex:rel73 ?x3.
  ?x4 ex:rel73 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel74 ?x1.
  ?x2 ex:rel74 ?x3.
  ?x4 ex:rel74 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma372> a r:Inference; r:gives {_:sk424 http:methodName "GET".
  _:sk424 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk424 http:resp _:sk425.
  _:sk425 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel72 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel72 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel72 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma374>);
  r:rule <#lemma375>.

<#lemma373> a r:Extraction; r:gives {{?x0 ex:rel72 ?x1.
  ?x2 ex:rel72 ?x3.
  ?x4 ex:rel72 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel73 ?x1.
  ?x2 ex:rel73 ?x3.
  ?x4 ex:rel73 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma374> a r:Inference; r:gives {_:sk418 http:methodName "GET".
  _:sk418 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk418 http:resp _:sk419.
  _:sk419 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel71 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel71 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel71 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma376>);
  r:rule <#lemma377>.

<#lemma375> a r:Extraction; r:gives {{?x0 ex:rel71 ?x1.
  ?x2 ex:rel71 ?x3.
  ?x4 ex:rel71 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel72 ?x1.
  ?x2 ex:rel72 ?x3.
  ?x4 ex:rel72 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma376> a r:Inference; r:gives {_:sk412 http:methodName "GET".
  _:sk412 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk412 http:resp _:sk413.
  _:sk413 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel70 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel70 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel70 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma378>);
  r:rule <#lemma379>.

<#lemma377> a r:Extraction; r:gives {{?x0 ex:rel70 ?x1.
  ?x2 ex:rel70 ?x3.
  ?x4 ex:rel70 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel71 ?x1.
  ?x2 ex:rel71 ?x3.
  ?x4 ex:rel71 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma378> a r:Inference; r:gives {_:sk406 http:methodName "GET".
  _:sk406 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk406 http:resp _:sk407.
  _:sk407 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel69 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel69 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel69 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma380>);
  r:rule <#lemma381>.

<#lemma379> a r:Extraction; r:gives {{?x0 ex:rel69 ?x1.
  ?x2 ex:rel69 ?x3.
  ?x4 ex:rel69 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel70 ?x1.
  ?x2 ex:rel70 ?x3.
  ?x4 ex:rel70 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma380> a r:Inference; r:gives {_:sk400 http:methodName "GET".
  _:sk400 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk400 http:resp _:sk401.
  _:sk401 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel68 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel68 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel68 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma382>);
  r:rule <#lemma383>.

<#lemma381> a r:Extraction; r:gives {{?x0 ex:rel68 ?x1.
  ?x2 ex:rel68 ?x3.
  ?x4 ex:rel68 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel69 ?x1.
  ?x2 ex:rel69 ?x3.
  ?x4 ex:rel69 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma382> a r:Inference; r:gives {_:sk394 http:methodName "GET".
  _:sk394 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk394 http:resp _:sk395.
  _:sk395 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel67 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel67 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel67 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma384>);
  r:rule <#lemma385>.

<#lemma383> a r:Extraction; r:gives {{?x0 ex:rel67 ?x1.
  ?x2 ex:rel67 ?x3.
  ?x4 ex:rel67 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel68 ?x1.
  ?x2 ex:rel68 ?x3.
  ?x4 ex:rel68 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma384> a r:Inference; r:gives {_:sk388 http:methodName "GET".
  _:sk388 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk388 http:resp _:sk389.
  _:sk389 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel66 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel66 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel66 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma386>);
  r:rule <#lemma387>.

<#lemma385> a r:Extraction; r:gives {{?x0 ex:rel66 ?x1.
  ?x2 ex:rel66 ?x3.
  ?x4 ex:rel66 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel67 ?x1.
  ?x2 ex:rel67 ?x3.
  ?x4 ex:rel67 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma386> a r:Inference; r:gives {_:sk382 http:methodName "GET".
  _:sk382 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk382 http:resp _:sk383.
  _:sk383 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel65 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel65 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel65 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma388>);
  r:rule <#lemma389>.

<#lemma387> a r:Extraction; r:gives {{?x0 ex:rel65 ?x1.
  ?x2 ex:rel65 ?x3.
  ?x4 ex:rel65 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel66 ?x1.
  ?x2 ex:rel66 ?x3.
  ?x4 ex:rel66 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma388> a r:Inference; r:gives {_:sk376 http:methodName "GET".
  _:sk376 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk376 http:resp _:sk377.
  _:sk377 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel64 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel64 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel64 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma390>);
  r:rule <#lemma391>.

<#lemma389> a r:Extraction; r:gives {{?x0 ex:rel64 ?x1.
  ?x2 ex:rel64 ?x3.
  ?x4 ex:rel64 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel65 ?x1.
  ?x2 ex:rel65 ?x3.
  ?x4 ex:rel65 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma390> a r:Inference; r:gives {_:sk370 http:methodName "GET".
  _:sk370 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk370 http:resp _:sk371.
  _:sk371 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel63 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel63 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel63 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma392>);
  r:rule <#lemma393>.

<#lemma391> a r:Extraction; r:gives {{?x0 ex:rel63 ?x1.
  ?x2 ex:rel63 ?x3.
  ?x4 ex:rel63 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel64 ?x1.
  ?x2 ex:rel64 ?x3.
  ?x4 ex:rel64 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma392> a r:Inference; r:gives {_:sk364 http:methodName "GET".
  _:sk364 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk364 http:resp _:sk365.
  _:sk365 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel62 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel62 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel62 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma394>);
  r:rule <#lemma395>.

<#lemma393> a r:Extraction; r:gives {{?x0 ex:rel62 ?x1.
  ?x2 ex:rel62 ?x3.
  ?x4 ex:rel62 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel63 ?x1.
  ?x2 ex:rel63 ?x3.
  ?x4 ex:rel63 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma394> a r:Inference; r:gives {_:sk358 http:methodName "GET".
  _:sk358 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk358 http:resp _:sk359.
  _:sk359 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel61 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel61 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel61 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma396>);
  r:rule <#lemma397>.

<#lemma395> a r:Extraction; r:gives {{?x0 ex:rel61 ?x1.
  ?x2 ex:rel61 ?x3.
  ?x4 ex:rel61 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel62 ?x1.
  ?x2 ex:rel62 ?x3.
  ?x4 ex:rel62 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma396> a r:Inference; r:gives {_:sk352 http:methodName "GET".
  _:sk352 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk352 http:resp _:sk353.
  _:sk353 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel60 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel60 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel60 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma398>);
  r:rule <#lemma399>.

<#lemma397> a r:Extraction; r:gives {{?x0 ex:rel60 ?x1.
  ?x2 ex:rel60 ?x3.
  ?x4 ex:rel60 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel61 ?x1.
  ?x2 ex:rel61 ?x3.
  ?x4 ex:rel61 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma398> a r:Inference; r:gives {_:sk346 http:methodName "GET".
  _:sk346 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk346 http:resp _:sk347.
  _:sk347 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel59 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel59 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel59 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma400>);
  r:rule <#lemma401>.

<#lemma399> a r:Extraction; r:gives {{?x0 ex:rel59 ?x1.
  ?x2 ex:rel59 ?x3.
  ?x4 ex:rel59 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel60 ?x1.
  ?x2 ex:rel60 ?x3.
  ?x4 ex:rel60 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma400> a r:Inference; r:gives {_:sk340 http:methodName "GET".
  _:sk340 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk340 http:resp _:sk341.
  _:sk341 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel58 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel58 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel58 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma402>);
  r:rule <#lemma403>.

<#lemma401> a r:Extraction; r:gives {{?x0 ex:rel58 ?x1.
  ?x2 ex:rel58 ?x3.
  ?x4 ex:rel58 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel59 ?x1.
  ?x2 ex:rel59 ?x3.
  ?x4 ex:rel59 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma402> a r:Inference; r:gives {_:sk334 http:methodName "GET".
  _:sk334 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk334 http:resp _:sk335.
  _:sk335 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel57 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel57 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel57 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma404>);
  r:rule <#lemma405>.

<#lemma403> a r:Extraction; r:gives {{?x0 ex:rel57 ?x1.
  ?x2 ex:rel57 ?x3.
  ?x4 ex:rel57 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel58 ?x1.
  ?x2 ex:rel58 ?x3.
  ?x4 ex:rel58 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma404> a r:Inference; r:gives {_:sk328 http:methodName "GET".
  _:sk328 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk328 http:resp _:sk329.
  _:sk329 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel56 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel56 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel56 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma406>);
  r:rule <#lemma407>.

<#lemma405> a r:Extraction; r:gives {{?x0 ex:rel56 ?x1.
  ?x2 ex:rel56 ?x3.
  ?x4 ex:rel56 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel57 ?x1.
  ?x2 ex:rel57 ?x3.
  ?x4 ex:rel57 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma406> a r:Inference; r:gives {_:sk322 http:methodName "GET".
  _:sk322 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk322 http:resp _:sk323.
  _:sk323 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel55 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel55 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel55 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma408>);
  r:rule <#lemma409>.

<#lemma407> a r:Extraction; r:gives {{?x0 ex:rel55 ?x1.
  ?x2 ex:rel55 ?x3.
  ?x4 ex:rel55 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel56 ?x1.
  ?x2 ex:rel56 ?x3.
  ?x4 ex:rel56 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma408> a r:Inference; r:gives {_:sk316 http:methodName "GET".
  _:sk316 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk316 http:resp _:sk317.
  _:sk317 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel54 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel54 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel54 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma410>);
  r:rule <#lemma411>.

<#lemma409> a r:Extraction; r:gives {{?x0 ex:rel54 ?x1.
  ?x2 ex:rel54 ?x3.
  ?x4 ex:rel54 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel55 ?x1.
  ?x2 ex:rel55 ?x3.
  ?x4 ex:rel55 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma410> a r:Inference; r:gives {_:sk310 http:methodName "GET".
  _:sk310 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk310 http:resp _:sk311.
  _:sk311 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel53 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel53 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel53 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma412>);
  r:rule <#lemma413>.

<#lemma411> a r:Extraction; r:gives {{?x0 ex:rel53 ?x1.
  ?x2 ex:rel53 ?x3.
  ?x4 ex:rel53 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel54 ?x1.
  ?x2 ex:rel54 ?x3.
  ?x4 ex:rel54 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma412> a r:Inference; r:gives {_:sk304 http:methodName "GET".
  _:sk304 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk304 http:resp _:sk305.
  _:sk305 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel52 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel52 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel52 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma414>);
  r:rule <#lemma415>.

<#lemma413> a r:Extraction; r:gives {{?x0 ex:rel52 ?x1.
  ?x2 ex:rel52 ?x3.
  ?x4 ex:rel52 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel53 ?x1.
  ?x2 ex:rel53 ?x3.
  ?x4 ex:rel53 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma414> a r:Inference; r:gives {_:sk298 http:methodName "GET".
  _:sk298 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk298 http:resp _:sk299.
  _:sk299 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel51 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel51 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel51 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma416>);
  r:rule <#lemma417>.

<#lemma415> a r:Extraction; r:gives {{?x0 ex:rel51 ?x1.
  ?x2 ex:rel51 ?x3.
  ?x4 ex:rel51 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel52 ?x1.
  ?x2 ex:rel52 ?x3.
  ?x4 ex:rel52 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma416> a r:Inference; r:gives {_:sk292 http:methodName "GET".
  _:sk292 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk292 http:resp _:sk293.
  _:sk293 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel50 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel50 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel50 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma418>);
  r:rule <#lemma419>.

<#lemma417> a r:Extraction; r:gives {{?x0 ex:rel50 ?x1.
  ?x2 ex:rel50 ?x3.
  ?x4 ex:rel50 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel51 ?x1.
  ?x2 ex:rel51 ?x3.
  ?x4 ex:rel51 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma418> a r:Inference; r:gives {_:sk286 http:methodName "GET".
  _:sk286 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk286 http:resp _:sk287.
  _:sk287 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel49 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel49 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel49 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma420>);
  r:rule <#lemma421>.

<#lemma419> a r:Extraction; r:gives {{?x0 ex:rel49 ?x1.
  ?x2 ex:rel49 ?x3.
  ?x4 ex:rel49 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel50 ?x1.
  ?x2 ex:rel50 ?x3.
  ?x4 ex:rel50 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma420> a r:Inference; r:gives {_:sk280 http:methodName "GET".
  _:sk280 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk280 http:resp _:sk281.
  _:sk281 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel48 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel48 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel48 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma422>);
  r:rule <#lemma423>.

<#lemma421> a r:Extraction; r:gives {{?x0 ex:rel48 ?x1.
  ?x2 ex:rel48 ?x3.
  ?x4 ex:rel48 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel49 ?x1.
  ?x2 ex:rel49 ?x3.
  ?x4 ex:rel49 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma422> a r:Inference; r:gives {_:sk274 http:methodName "GET".
  _:sk274 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk274 http:resp _:sk275.
  _:sk275 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel47 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel47 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel47 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma424>);
  r:rule <#lemma425>.

<#lemma423> a r:Extraction; r:gives {{?x0 ex:rel47 ?x1.
  ?x2 ex:rel47 ?x3.
  ?x4 ex:rel47 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel48 ?x1.
  ?x2 ex:rel48 ?x3.
  ?x4 ex:rel48 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma424> a r:Inference; r:gives {_:sk268 http:methodName "GET".
  _:sk268 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk268 http:resp _:sk269.
  _:sk269 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel46 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel46 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel46 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma426>);
  r:rule <#lemma427>.

<#lemma425> a r:Extraction; r:gives {{?x0 ex:rel46 ?x1.
  ?x2 ex:rel46 ?x3.
  ?x4 ex:rel46 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel47 ?x1.
  ?x2 ex:rel47 ?x3.
  ?x4 ex:rel47 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma426> a r:Inference; r:gives {_:sk262 http:methodName "GET".
  _:sk262 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk262 http:resp _:sk263.
  _:sk263 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel45 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel45 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel45 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma428>);
  r:rule <#lemma429>.

<#lemma427> a r:Extraction; r:gives {{?x0 ex:rel45 ?x1.
  ?x2 ex:rel45 ?x3.
  ?x4 ex:rel45 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel46 ?x1.
  ?x2 ex:rel46 ?x3.
  ?x4 ex:rel46 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma428> a r:Inference; r:gives {_:sk256 http:methodName "GET".
  _:sk256 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk256 http:resp _:sk257.
  _:sk257 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel44 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel44 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel44 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma430>);
  r:rule <#lemma431>.

<#lemma429> a r:Extraction; r:gives {{?x0 ex:rel44 ?x1.
  ?x2 ex:rel44 ?x3.
  ?x4 ex:rel44 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel45 ?x1.
  ?x2 ex:rel45 ?x3.
  ?x4 ex:rel45 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma430> a r:Inference; r:gives {_:sk250 http:methodName "GET".
  _:sk250 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk250 http:resp _:sk251.
  _:sk251 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel43 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel43 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel43 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma432>);
  r:rule <#lemma433>.

<#lemma431> a r:Extraction; r:gives {{?x0 ex:rel43 ?x1.
  ?x2 ex:rel43 ?x3.
  ?x4 ex:rel43 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel44 ?x1.
  ?x2 ex:rel44 ?x3.
  ?x4 ex:rel44 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma432> a r:Inference; r:gives {_:sk244 http:methodName "GET".
  _:sk244 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk244 http:resp _:sk245.
  _:sk245 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel42 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel42 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel42 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma434>);
  r:rule <#lemma435>.

<#lemma433> a r:Extraction; r:gives {{?x0 ex:rel42 ?x1.
  ?x2 ex:rel42 ?x3.
  ?x4 ex:rel42 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel43 ?x1.
  ?x2 ex:rel43 ?x3.
  ?x4 ex:rel43 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma434> a r:Inference; r:gives {_:sk238 http:methodName "GET".
  _:sk238 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk238 http:resp _:sk239.
  _:sk239 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel41 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel41 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel41 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma436>);
  r:rule <#lemma437>.

<#lemma435> a r:Extraction; r:gives {{?x0 ex:rel41 ?x1.
  ?x2 ex:rel41 ?x3.
  ?x4 ex:rel41 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel42 ?x1.
  ?x2 ex:rel42 ?x3.
  ?x4 ex:rel42 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma436> a r:Inference; r:gives {_:sk232 http:methodName "GET".
  _:sk232 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk232 http:resp _:sk233.
  _:sk233 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel40 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel40 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel40 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma438>);
  r:rule <#lemma439>.

<#lemma437> a r:Extraction; r:gives {{?x0 ex:rel40 ?x1.
  ?x2 ex:rel40 ?x3.
  ?x4 ex:rel40 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel41 ?x1.
  ?x2 ex:rel41 ?x3.
  ?x4 ex:rel41 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma438> a r:Inference; r:gives {_:sk226 http:methodName "GET".
  _:sk226 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk226 http:resp _:sk227.
  _:sk227 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel39 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel39 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel39 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma440>);
  r:rule <#lemma441>.

<#lemma439> a r:Extraction; r:gives {{?x0 ex:rel39 ?x1.
  ?x2 ex:rel39 ?x3.
  ?x4 ex:rel39 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel40 ?x1.
  ?x2 ex:rel40 ?x3.
  ?x4 ex:rel40 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma440> a r:Inference; r:gives {_:sk220 http:methodName "GET".
  _:sk220 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk220 http:resp _:sk221.
  _:sk221 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel38 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel38 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel38 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma442>);
  r:rule <#lemma443>.

<#lemma441> a r:Extraction; r:gives {{?x0 ex:rel38 ?x1.
  ?x2 ex:rel38 ?x3.
  ?x4 ex:rel38 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel39 ?x1.
  ?x2 ex:rel39 ?x3.
  ?x4 ex:rel39 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma442> a r:Inference; r:gives {_:sk214 http:methodName "GET".
  _:sk214 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk214 http:resp _:sk215.
  _:sk215 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel37 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel37 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel37 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma444>);
  r:rule <#lemma445>.

<#lemma443> a r:Extraction; r:gives {{?x0 ex:rel37 ?x1.
  ?x2 ex:rel37 ?x3.
  ?x4 ex:rel37 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel38 ?x1.
  ?x2 ex:rel38 ?x3.
  ?x4 ex:rel38 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma444> a r:Inference; r:gives {_:sk208 http:methodName "GET".
  _:sk208 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk208 http:resp _:sk209.
  _:sk209 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel36 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel36 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel36 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma446>);
  r:rule <#lemma447>.

<#lemma445> a r:Extraction; r:gives {{?x0 ex:rel36 ?x1.
  ?x2 ex:rel36 ?x3.
  ?x4 ex:rel36 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel37 ?x1.
  ?x2 ex:rel37 ?x3.
  ?x4 ex:rel37 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma446> a r:Inference; r:gives {_:sk202 http:methodName "GET".
  _:sk202 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk202 http:resp _:sk203.
  _:sk203 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel35 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel35 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel35 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma448>);
  r:rule <#lemma449>.

<#lemma447> a r:Extraction; r:gives {{?x0 ex:rel35 ?x1.
  ?x2 ex:rel35 ?x3.
  ?x4 ex:rel35 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel36 ?x1.
  ?x2 ex:rel36 ?x3.
  ?x4 ex:rel36 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma448> a r:Inference; r:gives {_:sk196 http:methodName "GET".
  _:sk196 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk196 http:resp _:sk197.
  _:sk197 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel34 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel34 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel34 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma450>);
  r:rule <#lemma451>.

<#lemma449> a r:Extraction; r:gives {{?x0 ex:rel34 ?x1.
  ?x2 ex:rel34 ?x3.
  ?x4 ex:rel34 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel35 ?x1.
  ?x2 ex:rel35 ?x3.
  ?x4 ex:rel35 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma450> a r:Inference; r:gives {_:sk190 http:methodName "GET".
  _:sk190 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk190 http:resp _:sk191.
  _:sk191 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel33 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel33 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel33 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma452>);
  r:rule <#lemma453>.

<#lemma451> a r:Extraction; r:gives {{?x0 ex:rel33 ?x1.
  ?x2 ex:rel33 ?x3.
  ?x4 ex:rel33 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel34 ?x1.
  ?x2 ex:rel34 ?x3.
  ?x4 ex:rel34 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma452> a r:Inference; r:gives {_:sk184 http:methodName "GET".
  _:sk184 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk184 http:resp _:sk185.
  _:sk185 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel32 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel32 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel32 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma454>);
  r:rule <#lemma455>.

<#lemma453> a r:Extraction; r:gives {{?x0 ex:rel32 ?x1.
  ?x2 ex:rel32 ?x3.
  ?x4 ex:rel32 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel33 ?x1.
  ?x2 ex:rel33 ?x3.
  ?x4 ex:rel33 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma454> a r:Inference; r:gives {_:sk178 http:methodName "GET".
  _:sk178 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk178 http:resp _:sk179.
  _:sk179 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel31 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel31 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel31 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma456>);
  r:rule <#lemma457>.

<#lemma455> a r:Extraction; r:gives {{?x0 ex:rel31 ?x1.
  ?x2 ex:rel31 ?x3.
  ?x4 ex:rel31 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel32 ?x1.
  ?x2 ex:rel32 ?x3.
  ?x4 ex:rel32 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma456> a r:Inference; r:gives {_:sk172 http:methodName "GET".
  _:sk172 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk172 http:resp _:sk173.
  _:sk173 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel30 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel30 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel30 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma458>);
  r:rule <#lemma459>.

<#lemma457> a r:Extraction; r:gives {{?x0 ex:rel30 ?x1.
  ?x2 ex:rel30 ?x3.
  ?x4 ex:rel30 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel31 ?x1.
  ?x2 ex:rel31 ?x3.
  ?x4 ex:rel31 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma458> a r:Inference; r:gives {_:sk166 http:methodName "GET".
  _:sk166 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk166 http:resp _:sk167.
  _:sk167 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel29 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel29 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel29 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma460>);
  r:rule <#lemma461>.

<#lemma459> a r:Extraction; r:gives {{?x0 ex:rel29 ?x1.
  ?x2 ex:rel29 ?x3.
  ?x4 ex:rel29 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel30 ?x1.
  ?x2 ex:rel30 ?x3.
  ?x4 ex:rel30 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma460> a r:Inference; r:gives {_:sk160 http:methodName "GET".
  _:sk160 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk160 http:resp _:sk161.
  _:sk161 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel28 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel28 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel28 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma462>);
  r:rule <#lemma463>.

<#lemma461> a r:Extraction; r:gives {{?x0 ex:rel28 ?x1.
  ?x2 ex:rel28 ?x3.
  ?x4 ex:rel28 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel29 ?x1.
  ?x2 ex:rel29 ?x3.
  ?x4 ex:rel29 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma462> a r:Inference; r:gives {_:sk154 http:methodName "GET".
  _:sk154 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk154 http:resp _:sk155.
  _:sk155 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel27 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel27 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel27 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma464>);
  r:rule <#lemma465>.

<#lemma463> a r:Extraction; r:gives {{?x0 ex:rel27 ?x1.
  ?x2 ex:rel27 ?x3.
  ?x4 ex:rel27 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel28 ?x1.
  ?x2 ex:rel28 ?x3.
  ?x4 ex:rel28 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma464> a r:Inference; r:gives {_:sk148 http:methodName "GET".
  _:sk148 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk148 http:resp _:sk149.
  _:sk149 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel26 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel26 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel26 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma466>);
  r:rule <#lemma467>.

<#lemma465> a r:Extraction; r:gives {{?x0 ex:rel26 ?x1.
  ?x2 ex:rel26 ?x3.
  ?x4 ex:rel26 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel27 ?x1.
  ?x2 ex:rel27 ?x3.
  ?x4 ex:rel27 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma466> a r:Inference; r:gives {_:sk142 http:methodName "GET".
  _:sk142 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk142 http:resp _:sk143.
  _:sk143 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel25 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel25 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel25 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma468>);
  r:rule <#lemma469>.

<#lemma467> a r:Extraction; r:gives {{?x0 ex:rel25 ?x1.
  ?x2 ex:rel25 ?x3.
  ?x4 ex:rel25 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel26 ?x1.
  ?x2 ex:rel26 ?x3.
  ?x4 ex:rel26 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma468> a r:Inference; r:gives {_:sk136 http:methodName "GET".
  _:sk136 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk136 http:resp _:sk137.
  _:sk137 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel24 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel24 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel24 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma470>);
  r:rule <#lemma471>.

<#lemma469> a r:Extraction; r:gives {{?x0 ex:rel24 ?x1.
  ?x2 ex:rel24 ?x3.
  ?x4 ex:rel24 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel25 ?x1.
  ?x2 ex:rel25 ?x3.
  ?x4 ex:rel25 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma470> a r:Inference; r:gives {_:sk130 http:methodName "GET".
  _:sk130 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk130 http:resp _:sk131.
  _:sk131 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel23 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel23 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel23 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma472>);
  r:rule <#lemma473>.

<#lemma471> a r:Extraction; r:gives {{?x0 ex:rel23 ?x1.
  ?x2 ex:rel23 ?x3.
  ?x4 ex:rel23 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel24 ?x1.
  ?x2 ex:rel24 ?x3.
  ?x4 ex:rel24 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma472> a r:Inference; r:gives {_:sk124 http:methodName "GET".
  _:sk124 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk124 http:resp _:sk125.
  _:sk125 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel22 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel22 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel22 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma474>);
  r:rule <#lemma475>.

<#lemma473> a r:Extraction; r:gives {{?x0 ex:rel22 ?x1.
  ?x2 ex:rel22 ?x3.
  ?x4 ex:rel22 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel23 ?x1.
  ?x2 ex:rel23 ?x3.
  ?x4 ex:rel23 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma474> a r:Inference; r:gives {_:sk118 http:methodName "GET".
  _:sk118 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk118 http:resp _:sk119.
  _:sk119 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel21 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel21 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel21 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma476>);
  r:rule <#lemma477>.

<#lemma475> a r:Extraction; r:gives {{?x0 ex:rel21 ?x1.
  ?x2 ex:rel21 ?x3.
  ?x4 ex:rel21 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel22 ?x1.
  ?x2 ex:rel22 ?x3.
  ?x4 ex:rel22 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma476> a r:Inference; r:gives {_:sk112 http:methodName "GET".
  _:sk112 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk112 http:resp _:sk113.
  _:sk113 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel20 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel20 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel20 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma478>);
  r:rule <#lemma479>.

<#lemma477> a r:Extraction; r:gives {{?x0 ex:rel20 ?x1.
  ?x2 ex:rel20 ?x3.
  ?x4 ex:rel20 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel21 ?x1.
  ?x2 ex:rel21 ?x3.
  ?x4 ex:rel21 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma478> a r:Inference; r:gives {_:sk106 http:methodName "GET".
  _:sk106 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk106 http:resp _:sk107.
  _:sk107 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel19 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel19 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel19 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma480>);
  r:rule <#lemma481>.

<#lemma479> a r:Extraction; r:gives {{?x0 ex:rel19 ?x1.
  ?x2 ex:rel19 ?x3.
  ?x4 ex:rel19 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel20 ?x1.
  ?x2 ex:rel20 ?x3.
  ?x4 ex:rel20 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma480> a r:Inference; r:gives {_:sk100 http:methodName "GET".
  _:sk100 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk100 http:resp _:sk101.
  _:sk101 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel18 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel18 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel18 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma482>);
  r:rule <#lemma483>.

<#lemma481> a r:Extraction; r:gives {{?x0 ex:rel18 ?x1.
  ?x2 ex:rel18 ?x3.
  ?x4 ex:rel18 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel19 ?x1.
  ?x2 ex:rel19 ?x3.
  ?x4 ex:rel19 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma482> a r:Inference; r:gives {_:sk94 http:methodName "GET".
  _:sk94 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk94 http:resp _:sk95.
  _:sk95 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel17 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel17 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel17 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma484>);
  r:rule <#lemma485>.

<#lemma483> a r:Extraction; r:gives {{?x0 ex:rel17 ?x1.
  ?x2 ex:rel17 ?x3.
  ?x4 ex:rel17 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel18 ?x1.
  ?x2 ex:rel18 ?x3.
  ?x4 ex:rel18 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma484> a r:Inference; r:gives {_:sk88 http:methodName "GET".
  _:sk88 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk88 http:resp _:sk89.
  _:sk89 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel16 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel16 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel16 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma486>);
  r:rule <#lemma487>.

<#lemma485> a r:Extraction; r:gives {{?x0 ex:rel16 ?x1.
  ?x2 ex:rel16 ?x3.
  ?x4 ex:rel16 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel17 ?x1.
  ?x2 ex:rel17 ?x3.
  ?x4 ex:rel17 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma486> a r:Inference; r:gives {_:sk82 http:methodName "GET".
  _:sk82 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk82 http:resp _:sk83.
  _:sk83 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel15 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel15 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel15 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma488>);
  r:rule <#lemma489>.

<#lemma487> a r:Extraction; r:gives {{?x0 ex:rel15 ?x1.
  ?x2 ex:rel15 ?x3.
  ?x4 ex:rel15 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel16 ?x1.
  ?x2 ex:rel16 ?x3.
  ?x4 ex:rel16 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma488> a r:Inference; r:gives {_:sk76 http:methodName "GET".
  _:sk76 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk76 http:resp _:sk77.
  _:sk77 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel14 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel14 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel14 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma490>);
  r:rule <#lemma491>.

<#lemma489> a r:Extraction; r:gives {{?x0 ex:rel14 ?x1.
  ?x2 ex:rel14 ?x3.
  ?x4 ex:rel14 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel15 ?x1.
  ?x2 ex:rel15 ?x3.
  ?x4 ex:rel15 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma490> a r:Inference; r:gives {_:sk70 http:methodName "GET".
  _:sk70 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk70 http:resp _:sk71.
  _:sk71 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel13 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel13 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel13 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma492>);
  r:rule <#lemma493>.

<#lemma491> a r:Extraction; r:gives {{?x0 ex:rel13 ?x1.
  ?x2 ex:rel13 ?x3.
  ?x4 ex:rel13 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel14 ?x1.
  ?x2 ex:rel14 ?x3.
  ?x4 ex:rel14 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma492> a r:Inference; r:gives {_:sk64 http:methodName "GET".
  _:sk64 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk64 http:resp _:sk65.
  _:sk65 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel12 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel12 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel12 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma494>);
  r:rule <#lemma495>.

<#lemma493> a r:Extraction; r:gives {{?x0 ex:rel12 ?x1.
  ?x2 ex:rel12 ?x3.
  ?x4 ex:rel12 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel13 ?x1.
  ?x2 ex:rel13 ?x3.
  ?x4 ex:rel13 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma494> a r:Inference; r:gives {_:sk58 http:methodName "GET".
  _:sk58 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk58 http:resp _:sk59.
  _:sk59 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel11 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel11 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel11 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma496>);
  r:rule <#lemma497>.

<#lemma495> a r:Extraction; r:gives {{?x0 ex:rel11 ?x1.
  ?x2 ex:rel11 ?x3.
  ?x4 ex:rel11 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel12 ?x1.
  ?x2 ex:rel12 ?x3.
  ?x4 ex:rel12 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma496> a r:Inference; r:gives {_:sk52 http:methodName "GET".
  _:sk52 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk52 http:resp _:sk53.
  _:sk53 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel10 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel10 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel10 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma498>);
  r:rule <#lemma499>.

<#lemma497> a r:Extraction; r:gives {{?x0 ex:rel10 ?x1.
  ?x2 ex:rel10 ?x3.
  ?x4 ex:rel10 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel11 ?x1.
  ?x2 ex:rel11 ?x3.
  ?x4 ex:rel11 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma498> a r:Inference; r:gives {_:sk46 http:methodName "GET".
  _:sk46 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk46 http:resp _:sk47.
  _:sk47 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel9 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel9 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel9 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma500>);
  r:rule <#lemma501>.

<#lemma499> a r:Extraction; r:gives {{?x0 ex:rel9 ?x1.
  ?x2 ex:rel9 ?x3.
  ?x4 ex:rel9 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel10 ?x1.
  ?x2 ex:rel10 ?x3.
  ?x4 ex:rel10 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma500> a r:Inference; r:gives {_:sk40 http:methodName "GET".
  _:sk40 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk40 http:resp _:sk41.
  _:sk41 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel8 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel8 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel8 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma502>);
  r:rule <#lemma503>.

<#lemma501> a r:Extraction; r:gives {{?x0 ex:rel8 ?x1.
  ?x2 ex:rel8 ?x3.
  ?x4 ex:rel8 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel9 ?x1.
  ?x2 ex:rel9 ?x3.
  ?x4 ex:rel9 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma502> a r:Inference; r:gives {_:sk34 http:methodName "GET".
  _:sk34 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk34 http:resp _:sk35.
  _:sk35 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel7 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel7 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel7 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma504>);
  r:rule <#lemma505>.

<#lemma503> a r:Extraction; r:gives {{?x0 ex:rel7 ?x1.
  ?x2 ex:rel7 ?x3.
  ?x4 ex:rel7 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel8 ?x1.
  ?x2 ex:rel8 ?x3.
  ?x4 ex:rel8 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma504> a r:Inference; r:gives {_:sk28 http:methodName "GET".
  _:sk28 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk28 http:resp _:sk29.
  _:sk29 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel6 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel6 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel6 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma506>);
  r:rule <#lemma507>.

<#lemma505> a r:Extraction; r:gives {{?x0 ex:rel6 ?x1.
  ?x2 ex:rel6 ?x3.
  ?x4 ex:rel6 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel7 ?x1.
  ?x2 ex:rel7 ?x3.
  ?x4 ex:rel7 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma506> a r:Inference; r:gives {_:sk22 http:methodName "GET".
  _:sk22 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk22 http:resp _:sk23.
  _:sk23 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel5 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel5 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel5 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma508>);
  r:rule <#lemma509>.

<#lemma507> a r:Extraction; r:gives {{?x0 ex:rel5 ?x1.
  ?x2 ex:rel5 ?x3.
  ?x4 ex:rel5 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel6 ?x1.
  ?x2 ex:rel6 ?x3.
  ?x4 ex:rel6 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma508> a r:Inference; r:gives {_:sk16 http:methodName "GET".
  _:sk16 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk16 http:resp _:sk17.
  _:sk17 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel4 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel4 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel4 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma510>);
  r:rule <#lemma511>.

<#lemma509> a r:Extraction; r:gives {{?x0 ex:rel4 ?x1.
  ?x2 ex:rel4 ?x3.
  ?x4 ex:rel4 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel5 ?x1.
  ?x2 ex:rel5 ?x3.
  ?x4 ex:rel5 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma510> a r:Inference; r:gives {_:sk6 http:methodName "GET".
  _:sk6 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk6 http:resp _:sk7.
  _:sk7 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel3 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel3 <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel3 <http://eulersharp.sourceforge.net/2007/07test/y>}; r:evidence (
  <#lemma512>);
  r:rule <#lemma513>.

<#lemma511> a r:Extraction; r:gives {{?x0 ex:rel3 ?x1.
  ?x2 ex:rel3 ?x3.
  ?x4 ex:rel3 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel4 ?x1.
  ?x2 ex:rel4 ?x3.
  ?x4 ex:rel4 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma512> a r:Inference; r:gives {_:sk0 http:methodName "GET".
  _:sk0 http:requestURI <http://eulersharp.sourceforge.net/2007/07test/x>.
  _:sk0 http:resp _:sk1.
  _:sk1 http:body <http://eulersharp.sourceforge.net/2007/07test/y>.
  <http://eulersharp.sourceforge.net/2007/07test/x> ex:rel2 <http://eulersharp.sourceforge.net/2007/07test/y>.
  _:sk2 ex:rel2 _:sk3.
  _:sk4 ex:rel2 _:sk5}; r:evidence (
  <#lemma514>);
  r:rule <#lemma515>.

<#lemma513> a r:Extraction; r:gives {{?x0 ex:rel2 ?x1.
  ?x2 ex:rel2 ?x3.
  ?x4 ex:rel2 ?x5} => {_:x6 http:methodName "GET".
  _:x6 http:requestURI ?x0.
  _:x6 http:resp _:x7.
  _:x7 http:body ?x1.
  ?x0 ex:rel3 ?x1.
  ?x2 ex:rel3 ?x3.
  ?x4 ex:rel3 ?x5}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

<#lemma514> a r:Extraction; r:gives {<http://eulersharp.sourceforge.net/2007/07test/x> ex:rel1 <http://eulersharp.sourceforge.net/2007/07test/y>};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/initial.n3>].

<#lemma515> a r:Extraction; r:gives {{?x0 ex:rel1 ?x1} => {_:x2 http:methodName "GET".
  _:x2 http:requestURI ?x0.
  _:x2 http:resp _:x3.
  _:x3 http:body ?x1.
  ?x0 ex:rel2 ?x1.
  _:x4 ex:rel2 _:x5.
  _:x6 ex:rel2 _:x7}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/path-256-3.n3>].

#ENDS 2.127 [sec] TC=771 TP=13774 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

#Processed by Id: euler.yap 7602 2014-12-10 20:26:19Z josd
#eye http://eulersharp.sourceforge.net/2007/07test/turing.n3 --query http://eulersharp.sourceforge.net/2007/07test/turingQ.n3

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX : <http://eulersharp.sourceforge.net/2007/07test/turing#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    ((1 1 1) (1 1 1 1)) :turing true.
  }].

<#lemma1> a r:Inference; r:gives {((1 1 1) (1 1 1 1)) :turing true}; r:evidence (
  <#lemma2>);
  r:rule <#lemma3>.

<#lemma2> a r:Inference; r:gives {((1 1 1) (1 1 1 1)) :turing true}; r:evidence (
  <#lemma4>
  <#lemma5>
  <#lemma6>);
  r:rule <#lemma7>.

<#lemma3> a r:Extraction; r:gives {{((1 1 1) ?x0) :turing true} => {((1 1 1) ?x0) :turing true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turingQ.n3>].

<#lemma4> a r:Inference; r:gives {(:q0 () (1 1 1) (1 1 1) (1)) :perform true}; r:evidence (
  <#lemma8>
  <#lemma9>
  <#lemma10>
  <#lemma11>);
  r:rule <#lemma12>.

<#lemma5> a r:Inference; r:gives {((1 1 1) (1 1 1)) :reverse true}; r:evidence (
  <#lemma13>);
  r:rule <#lemma14>.

<#lemma6> a r:Inference; r:gives {((1 1 1) (1) (1 1 1 1)) :append true}; r:evidence (
  <#lemma15>);
  r:rule <#lemma16>.

<#lemma7> a r:Extraction; r:gives {{(?x1 ?x4) :turing true} <= {(:q0 () ?x0 ?x1 ?x2) :perform true.
  (?x0 ?x3) :reverse true.
  (?x3 ?x2 ?x4) :append true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma8> a r:Extraction; r:gives {((1 1 1) 1 (1 1)) :symbol true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma9> a r:Extraction; r:gives {(:q0 1 :q0 1 :right) :rule true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma10> a r:Extraction; r:gives {(:right () (1) (1 1 1) (1 1)) :action true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma11> a r:Inference; r:gives {(:q0 (1) (1 1 1) (1 1) (1)) :perform true}; r:evidence (
  <#lemma17>
  <#lemma9>
  <#lemma18>
  <#lemma19>);
  r:rule <#lemma12>.

<#lemma12> a r:Extraction; r:gives {{(?x3 ?x7 ?x10 ?x0 ?x11) :perform true} <= {(?x0 ?x1 ?x2) :symbol true.
  (?x3 ?x1 ?x4 ?x5 ?x6) :rule true.
  (?x6 ?x7 ?x8 [ rdf:first ?x5; rdf:rest ?x2] ?x9) :action true.
  (?x4 ?x8 ?x10 ?x9 ?x11) :perform true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma13> a r:Inference; r:gives {((1 1 1) () (1 1 1)) :reverse true}; r:evidence (
  <#lemma20>);
  r:rule <#lemma21>.

<#lemma14> a r:Extraction; r:gives {{(?x0 ?x1) :reverse true} <= {(?x0 () ?x1) :reverse true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma15> a r:Inference; r:gives {((1 1) (1) (1 1 1)) :append true}; r:evidence (
  <#lemma22>);
  r:rule <#lemma16>.

<#lemma16> a r:Extraction; r:gives {{([ rdf:first ?x3; rdf:rest ?x0] ?x1 [ rdf:first ?x3; rdf:rest ?x2]) :append true} <= {(?x0 ?x1 ?x2) :append true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma17> a r:Extraction; r:gives {((1 1) 1 (1)) :symbol true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma18> a r:Extraction; r:gives {(:right (1) (1 1) (1 1) (1)) :action true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma19> a r:Inference; r:gives {(:q0 (1 1) (1 1 1) (1) (1)) :perform true}; r:evidence (
  <#lemma23>
  <#lemma9>
  <#lemma24>
  <#lemma25>);
  r:rule <#lemma12>.

<#lemma20> a r:Inference; r:gives {((1 1) (1) (1 1 1)) :reverse true}; r:evidence (
  <#lemma26>);
  r:rule <#lemma21>.

<#lemma21> a r:Extraction; r:gives {{([ rdf:first ?x1; rdf:rest ?x0] ?x2 ?x3) :reverse true} <= {(?x0 [ rdf:first ?x1; rdf:rest ?x2] ?x3) :reverse true}};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma22> a r:Inference; r:gives {((1) (1) (1 1)) :append true}; r:evidence (
  <#lemma27>);
  r:rule <#lemma16>.

<#lemma23> a r:Extraction; r:gives {((1) 1 ()) :symbol true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma24> a r:Extraction; r:gives {(:right (1 1) (1 1 1) (1) ()) :action true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma25> a r:Inference; r:gives {(:q0 (1 1 1) (1 1 1) () (1)) :perform true}; r:evidence (
  <#lemma28>
  <#lemma29>
  <#lemma30>
  <#lemma31>);
  r:rule <#lemma12>.

<#lemma26> a r:Inference; r:gives {((1) (1 1) (1 1 1)) :reverse true}; r:evidence (
  <#lemma32>);
  r:rule <#lemma21>.

<#lemma27> a r:Extraction; r:gives {(() (1) (1)) :append true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma28> a r:Extraction; r:gives {(() :b ()) :symbol true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma29> a r:Extraction; r:gives {(:q0 :b :qf 1 :stay) :rule true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma30> a r:Extraction; r:gives {(:stay (1 1 1) (1 1 1) (1) (1)) :action true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma31> a r:Extraction; r:gives {(:qf (1 1 1) (1 1 1) (1) (1)) :perform true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

<#lemma32> a r:Extraction; r:gives {(() (1 1 1) (1 1 1)) :reverse true};
  r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/turing.n3>].

#ENDS 0.870 [sec] TC=1 TP=2 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

