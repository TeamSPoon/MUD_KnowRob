#socrates....
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://www.agfa.com/w3c/euler/socrates#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {@forSome var:Man_0_. :Socrates a var:Man_0_}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:Man_0_. :Socrates a var:Man_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/socrates#Socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#Man_0_"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socratesF.n3>]]];

 r:component [ a r:Inference; r:gives {:Socrates a :Mortal}; r:evidence (
  [ a r:Inference; r:gives {:Socrates a :Mortal}; r:evidence (
   [ a r:Extraction; r:gives {@forSome var:Man_0_. var:Man_0_ rdfs:subClassOf :Mortal}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>]]
   [ a r:Extraction; r:gives {@forSome var:Man_0_. :Socrates a var:Man_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#Man_0_"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/socrates#Mortal"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/socrates#Socrates"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 rdfs:subClassOf var:x1. var:x2 a var:x0} => {var:x2 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socrates.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/socrates#Socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/socrates#Mortal"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/socratesF.n3>]]];

 r:gives {
  @forSome var:Man_0_. :Socrates a var:Man_0_.
  :Socrates a :Mortal.
 }].

#ENDS 103 msec
#Trunk : 9/15 = 60.0 %
#Branch: 1/4 = 25.0 %

#socrates2...
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2007/07test/socrates#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:socrates a :Human}; r:evidence (
  [ a r:Extraction; r:gives {:socrates a :Human}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Human"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {:socrates a :NonFemale}; r:evidence (
  [ a r:Extraction; r:gives {:socrates a :NonFemale}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#NonFemale"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {:socrates a :MaleOrFemale}; r:evidence (
  [ a r:Inference; r:gives {:socrates a :MaleOrFemale}; r:evidence (
   [ a r:Extraction; r:gives {:socrates a :Human}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
   [ a r:Extraction; r:gives {:Human rdfs:subClassOf :MaleOrFemale}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Human"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#MaleOrFemale"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2} => {var:x0 a var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#MaleOrFemale"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:gives {
  :socrates a :Human.
  :socrates a :NonFemale.
  :socrates a :MaleOrFemale.
 }].

[ e:falseModel {:socrates a :Female}
; e:because [ e:integrityConstraint {{:socrates a :NonFemale. :NonFemale owl:disjointWith :Female. :socrates a :Female} => false}
  ; e:selected [ e:triple {:socrates a :NonFemale}
    ; e:falseAncestors true
    ; e:falseDescendents true
    ]
  ; e:selected [ e:triple {:NonFemale owl:disjointWith :Female}
    ; e:falseAncestors true
    ; e:falseDescendents true
    ]
  ; e:selected [ e:triple {:socrates a :Female}
    ; e:falseAncestors true
    ; e:falseDescendents true
    ]
  ]
; r:gives {
[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:socrates a :Female}; r:evidence (
  [ a r:Inference; r:gives {:socrates a :Female}; r:evidence (
   [ a r:Extraction; r:gives {:socrates a :Human}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
   [ a r:Extraction; r:gives {:Human rdfs:subClassOf :MaleOrFemale}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
   [ a r:Extraction; r:gives {:MaleOrFemale owl:unionOf (:Female :Male)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Human"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#MaleOrFemale"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Female"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Male"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2. var:x2 owl:unionOf (var:x3 var:x4)} => ({var:x0 a var:x3} {var:x0 a var:x4})!e:disjunction}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Female"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {:socrates a :Mortal}; r:evidence (
  [ a r:Inference; r:gives {:socrates a :Mortal}; r:evidence (
   [ a r:Inference; r:gives {:socrates a :Female}; r:evidence (
    [ a r:Extraction; r:gives {:socrates a :Human}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
    [ a r:Extraction; r:gives {:Human rdfs:subClassOf :MaleOrFemale}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
    [ a r:Extraction; r:gives {:MaleOrFemale owl:unionOf (:Female :Male)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Human"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#MaleOrFemale"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Female"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Male"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2. var:x2 owl:unionOf (var:x3 var:x4)} => ({var:x0 a var:x3} {var:x0 a var:x4})!e:disjunction}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]
   [ a r:Extraction; r:gives {:Female rdfs:subClassOf :Mortal}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Female"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Mortal"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2} => {var:x0 a var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Mortal"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:socrates a :Mortal} e:allAncestors {:socrates a :Female. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Female rdfs:subClassOf :Mortal}}; r:evidence (
  [ a r:Fact; r:gives {{:socrates a :Mortal} e:allAncestors {:socrates a :Female. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Female rdfs:subClassOf :Mortal}}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:socrates a :Female. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Female rdfs:subClassOf :Mortal}];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {{:socrates a :Mortal} e:allAncestors var:x0} => {{:socrates a :Mortal} e:allAncestors var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:socrates a :Mortal} e:allDescendents true}; r:evidence (
  [ a r:Fact; r:gives {{:socrates a :Mortal} e:allDescendents true}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo true];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {{:socrates a :Mortal} e:allDescendents var:x0} => {{:socrates a :Mortal} e:allDescendents var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:gives {
  :socrates a :Female.
  :socrates a :Mortal.
  {:socrates a :Mortal} e:allAncestors {:socrates a :Female. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Female rdfs:subClassOf :Mortal}.
  {:socrates a :Mortal} e:allDescendents true.
 }].

}].

[ e:possibleModel {:socrates a :Male}
; r:gives {
[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:socrates a :Male}; r:evidence (
  [ a r:Inference; r:gives {:socrates a :Male}; r:evidence (
   [ a r:Extraction; r:gives {:socrates a :Human}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
   [ a r:Extraction; r:gives {:Human rdfs:subClassOf :MaleOrFemale}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
   [ a r:Extraction; r:gives {:MaleOrFemale owl:unionOf (:Female :Male)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Human"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#MaleOrFemale"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Female"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Male"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2. var:x2 owl:unionOf (var:x3 var:x4)} => ({var:x0 a var:x3} {var:x0 a var:x4})!e:disjunction}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Male"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {:socrates a :Mortal}; r:evidence (
  [ a r:Inference; r:gives {:socrates a :Mortal}; r:evidence (
   [ a r:Inference; r:gives {:socrates a :Male}; r:evidence (
    [ a r:Extraction; r:gives {:socrates a :Human}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
    [ a r:Extraction; r:gives {:Human rdfs:subClassOf :MaleOrFemale}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]
    [ a r:Extraction; r:gives {:MaleOrFemale owl:unionOf (:Female :Male)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Human"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#MaleOrFemale"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Female"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Male"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2. var:x2 owl:unionOf (var:x3 var:x4)} => ({var:x0 a var:x3} {var:x0 a var:x4})!e:disjunction}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]
   [ a r:Extraction; r:gives {:Male rdfs:subClassOf :Mortal}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Male"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Mortal"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a var:x1. var:x1 rdfs:subClassOf var:x2} => {var:x0 a var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socrates.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#socrates"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test/socrates#Mortal"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:socrates a :Mortal} e:allAncestors {:socrates a :Male. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Male rdfs:subClassOf :Mortal}}; r:evidence (
  [ a r:Fact; r:gives {{:socrates a :Mortal} e:allAncestors {:socrates a :Male. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Male rdfs:subClassOf :Mortal}}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:socrates a :Male. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Male rdfs:subClassOf :Mortal}];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {{:socrates a :Mortal} e:allAncestors var:x0} => {{:socrates a :Mortal} e:allAncestors var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:socrates a :Mortal} e:allDescendents true}; r:evidence (
  [ a r:Fact; r:gives {{:socrates a :Mortal} e:allDescendents true}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo true];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {{:socrates a :Mortal} e:allDescendents var:x0} => {{:socrates a :Mortal} e:allDescendents var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/socratesQ.n3>]]];

 r:gives {
  :socrates a :Male.
  :socrates a :Mortal.
  {:socrates a :Mortal} e:allAncestors {:socrates a :Male. :socrates a :Human. :Human rdfs:subClassOf :MaleOrFemale. :MaleOrFemale owl:unionOf (:Female :Male). :Male rdfs:subClassOf :Mortal}.
  {:socrates a :Mortal} e:allDescendents true.
 }].

}].

#ENDS 1018 msec
#Trunk : 16/24 = 66.66666666666666 %
#Branch: 19/104 = 18.269230769230766 %

#graph.......
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix p0: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules#>.
@prefix nsp0: <http://eulersharp.sourceforge.net/2003/03swap/>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix nsp1: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix : <http://www.agfa.com/w3c/euler/graph.axiom#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix var: <http://localhost/var#>.
@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:paris :path :nantes}; r:evidence (
  [ a r:Inference; r:gives {:paris :path :nantes}; r:evidence (
   [ a r:Extraction; r:gives {:path a owl:TransitiveProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
   [ a r:Inference; r:gives {:angers :path :nantes}; r:evidence (
    [ a r:Extraction; r:gives {:oneway rdfs:subPropertyOf :path}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
    [ a r:Extraction; r:gives {:angers :oneway :nantes}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#oneway"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#angers"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#nantes"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:subPropertyOf var:x1. var:x2 var:x0 var:x3} => {var:x2 var:x1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
   [ a r:Inference; r:gives {:paris :path :angers}; r:evidence (
    [ a r:Extraction; r:gives {:path a owl:TransitiveProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
    [ a r:Inference; r:gives {:lemans :path :angers}; r:evidence (
     [ a r:Extraction; r:gives {:oneway rdfs:subPropertyOf :path}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
     [ a r:Extraction; r:gives {:lemans :oneway :angers}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#oneway"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#lemans"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#angers"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:subPropertyOf var:x1. var:x2 var:x0 var:x3} => {var:x2 var:x1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
    [ a r:Inference; r:gives {:paris :path :lemans}; r:evidence (
     [ a r:Extraction; r:gives {:path a owl:TransitiveProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
     [ a r:Inference; r:gives {:chartres :path :lemans}; r:evidence (
      [ a r:Extraction; r:gives {:oneway rdfs:subPropertyOf :path}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
      [ a r:Extraction; r:gives {:chartres :oneway :lemans}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#oneway"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#chartres"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#lemans"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:subPropertyOf var:x1. var:x2 var:x0 var:x3} => {var:x2 var:x1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
     [ a r:Inference; r:gives {:paris :path :chartres}; r:evidence (
      [ a r:Extraction; r:gives {:oneway rdfs:subPropertyOf :path}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]
      [ a r:Extraction; r:gives {:paris :oneway :chartres}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.axiom.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#oneway"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#paris"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#chartres"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:subPropertyOf var:x1. var:x2 var:x0 var:x3} => {var:x2 var:x1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#chartres"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#lemans"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#paris"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a owl:TransitiveProperty. var:x1 var:x0 var:x2. var:x3 var:x0 var:x1} => {var:x3 var:x0 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#lemans"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#angers"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#paris"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a owl:TransitiveProperty. var:x1 var:x0 var:x2. var:x3 var:x0 var:x1} => {var:x3 var:x0 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#path"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#angers"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#nantes"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/graph.axiom#paris"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a owl:TransitiveProperty. var:x1 var:x0 var:x2. var:x3 var:x0 var:x1} => {var:x3 var:x0 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
  r:rule [ a r:Extraction; r:gives {{:paris :path :nantes} => {:paris :path :nantes}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/graph.filter.n3>]]];

 r:gives {
  :paris :path :nantes.
 }].

#ENDS 481 msec
#Trunk : 27/102 = 26.47058823529412 %
#Branch: 1/36 = 2.7777777777777777 %

#gedcom......
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix p0: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules#>.
@prefix nsp0: <http://eulersharp.sourceforge.net/2003/03swap/>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix nsp1: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3#>.
@prefix gc: <http://www.daml.org/2001/01/gedcom/gedcom#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix : <http://www.agfa.com/w3c/euler/gedcom-facts#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix var: <http://localhost/var#>.
@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:Jos :testRelationship :Bart}; r:evidence (
  [ a r:Inference; r:gives {:Jos gc:mother :Maria}; r:evidence (
   [ a r:Inference; r:gives {:Jos gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Jos gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Maria gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x1 gc:sex gc:Female} => {var:x0 gc:mother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Maria gc:daughter :Rita}; r:evidence (
   [ a r:Inference; r:gives {:Rita gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Rita gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Rita gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Female} => {var:x1 gc:daughter var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Rita gc:son :Bart}; r:evidence (
   [ a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
    [ a r:Extraction; r:gives {:Bart gc:childIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Rita gc:spouseIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#gd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Bart gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Male} => {var:x1 gc:son var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Bart gc:uncle :Jos}; r:evidence (
   [ a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
    [ a r:Extraction; r:gives {:Bart gc:childIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Rita gc:spouseIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#gd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Inference; r:gives {:Rita gc:brother :Jos}; r:evidence (
    [ a r:Inference; r:gives {:Rita gc:sibling :Jos}; r:evidence (
     [ a r:Extraction; r:gives {gc:sibling a owl:SymmetricProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]
     [ a r:Inference; r:gives {:Jos gc:sibling :Rita}; r:evidence (
      [ a r:Extraction; r:gives {:Jos gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Extraction; r:gives {:Rita gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Inference; r:gives {:Jos owl:differentFrom :Rita}; r:evidence (
       [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
       [ a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) p0:subListOf (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {owl:distinctMembers rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
         [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2002/07/owl#distinctMembers"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {var:x0 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:first :Jos}]
       [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
       [ a r:Fact; r:gives {:Rita list:in (:Rita :Geert :Caroline :Dirk :Greta)}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5. {var:x0 owl:distinctMembers var:x1. var:x2 p0:subListOf var:x1. var:x2 rdf:first var:x3. var:x2 rdf:rest var:x4. var:x5 list:in var:x4} => {var:x3 owl:differentFrom var:x5}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:childIn var:x1. var:x0 owl:differentFrom var:x2} => {var:x0 gc:sibling var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.daml.org/2001/01/gedcom/gedcom#sibling"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a owl:SymmetricProperty. var:x1 var:x0 var:x2} => {var:x2 var:x0 var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
    [ a r:Extraction; r:gives {:Jos gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:sibling var:x1. var:x1 gc:sex gc:Male} => {var:x0 gc:brother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:parent var:x1. var:x1 gc:brother var:x2} => {var:x0 gc:uncle var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 gc:mother var:x1. var:x1 gc:daughter var:x2. var:x2 gc:son var:x3. var:x3 gc:uncle var:x0} => {var:x0 :testRelationship var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:Jos :testRelationship :Tom}; r:evidence (
  [ a r:Inference; r:gives {:Jos gc:mother :Maria}; r:evidence (
   [ a r:Inference; r:gives {:Jos gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Jos gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Maria gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x1 gc:sex gc:Female} => {var:x0 gc:mother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Maria gc:daughter :Greta}; r:evidence (
   [ a r:Inference; r:gives {:Greta gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Greta gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Greta gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Female} => {var:x1 gc:daughter var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Greta gc:son :Tom}; r:evidence (
   [ a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
    [ a r:Extraction; r:gives {:Tom gc:childIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Greta gc:spouseIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#sd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Tom gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Male} => {var:x1 gc:son var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Tom gc:uncle :Jos}; r:evidence (
   [ a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
    [ a r:Extraction; r:gives {:Tom gc:childIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Greta gc:spouseIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#sd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Inference; r:gives {:Greta gc:brother :Jos}; r:evidence (
    [ a r:Inference; r:gives {:Greta gc:sibling :Jos}; r:evidence (
     [ a r:Extraction; r:gives {gc:sibling a owl:SymmetricProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]
     [ a r:Inference; r:gives {:Jos gc:sibling :Greta}; r:evidence (
      [ a r:Extraction; r:gives {:Jos gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Extraction; r:gives {:Greta gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Inference; r:gives {:Jos owl:differentFrom :Greta}; r:evidence (
       [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
       [ a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) p0:subListOf (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {owl:distinctMembers rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
         [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2002/07/owl#distinctMembers"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {var:x0 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:first :Jos}]
       [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
       [ a r:Fact; r:gives {:Greta list:in (:Rita :Geert :Caroline :Dirk :Greta)}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5. {var:x0 owl:distinctMembers var:x1. var:x2 p0:subListOf var:x1. var:x2 rdf:first var:x3. var:x2 rdf:rest var:x4. var:x5 list:in var:x4} => {var:x3 owl:differentFrom var:x5}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:childIn var:x1. var:x0 owl:differentFrom var:x2} => {var:x0 gc:sibling var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.daml.org/2001/01/gedcom/gedcom#sibling"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a owl:SymmetricProperty. var:x1 var:x0 var:x2} => {var:x2 var:x0 var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
    [ a r:Extraction; r:gives {:Jos gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:sibling var:x1. var:x1 gc:sex gc:Male} => {var:x0 gc:brother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:parent var:x1. var:x1 gc:brother var:x2} => {var:x0 gc:uncle var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Jos"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 gc:mother var:x1. var:x1 gc:daughter var:x2. var:x2 gc:son var:x3. var:x3 gc:uncle var:x0} => {var:x0 :testRelationship var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:Geert :testRelationship :Bart}; r:evidence (
  [ a r:Inference; r:gives {:Geert gc:mother :Maria}; r:evidence (
   [ a r:Inference; r:gives {:Geert gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Geert gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Maria gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x1 gc:sex gc:Female} => {var:x0 gc:mother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Maria gc:daughter :Rita}; r:evidence (
   [ a r:Inference; r:gives {:Rita gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Rita gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Rita gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Female} => {var:x1 gc:daughter var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Rita gc:son :Bart}; r:evidence (
   [ a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
    [ a r:Extraction; r:gives {:Bart gc:childIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Rita gc:spouseIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#gd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Bart gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Male} => {var:x1 gc:son var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Bart gc:uncle :Geert}; r:evidence (
   [ a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
    [ a r:Extraction; r:gives {:Bart gc:childIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Rita gc:spouseIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#gd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Inference; r:gives {:Rita gc:brother :Geert}; r:evidence (
    [ a r:Inference; r:gives {:Rita gc:sibling :Geert}; r:evidence (
     [ a r:Extraction; r:gives {:Rita gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
     [ a r:Extraction; r:gives {:Geert gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
     [ a r:Inference; r:gives {:Rita owl:differentFrom :Geert}; r:evidence (
      [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) p0:subListOf (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
       [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
       [ a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
        [ a r:Extraction; r:gives {owl:distinctMembers rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
        [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2002/07/owl#distinctMembers"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) p0:subListOf (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {rdf:rest rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
         [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {var:x0 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 rdf:rest var:x1. var:x0 a rdf:List. var:x2 p0:subListOf var:x1} => {var:x2 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
      [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:first :Rita}]
      [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]
      [ a r:Fact; r:gives {:Geert list:in (:Geert :Caroline :Dirk :Greta)}]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5. {var:x0 owl:distinctMembers var:x1. var:x2 p0:subListOf var:x1. var:x2 rdf:first var:x3. var:x2 rdf:rest var:x4. var:x5 list:in var:x4} => {var:x3 owl:differentFrom var:x5}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:childIn var:x1. var:x0 owl:differentFrom var:x2} => {var:x0 gc:sibling var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
    [ a r:Extraction; r:gives {:Geert gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:sibling var:x1. var:x1 gc:sex gc:Male} => {var:x0 gc:brother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:parent var:x1. var:x1 gc:brother var:x2} => {var:x0 gc:uncle var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 gc:mother var:x1. var:x1 gc:daughter var:x2. var:x2 gc:son var:x3. var:x3 gc:uncle var:x0} => {var:x0 :testRelationship var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:Dirk :testRelationship :Bart}; r:evidence (
  [ a r:Inference; r:gives {:Dirk gc:mother :Maria}; r:evidence (
   [ a r:Inference; r:gives {:Dirk gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Dirk gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Maria gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x1 gc:sex gc:Female} => {var:x0 gc:mother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Maria gc:daughter :Rita}; r:evidence (
   [ a r:Inference; r:gives {:Rita gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Rita gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Rita gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Female} => {var:x1 gc:daughter var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Rita gc:son :Bart}; r:evidence (
   [ a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
    [ a r:Extraction; r:gives {:Bart gc:childIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Rita gc:spouseIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#gd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Bart gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Male} => {var:x1 gc:son var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Bart gc:uncle :Dirk}; r:evidence (
   [ a r:Inference; r:gives {:Bart gc:parent :Rita}; r:evidence (
    [ a r:Extraction; r:gives {:Bart gc:childIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Rita gc:spouseIn :gd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#gd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Inference; r:gives {:Rita gc:brother :Dirk}; r:evidence (
    [ a r:Inference; r:gives {:Rita gc:sibling :Dirk}; r:evidence (
     [ a r:Extraction; r:gives {:Rita gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
     [ a r:Extraction; r:gives {:Dirk gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
     [ a r:Inference; r:gives {:Rita owl:differentFrom :Dirk}; r:evidence (
      [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) p0:subListOf (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
       [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]
       [ a r:Inference; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
        [ a r:Extraction; r:gives {owl:distinctMembers rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
        [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2002/07/owl#distinctMembers"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) p0:subListOf (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {rdf:rest rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
         [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {var:x0 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 rdf:rest var:x1. var:x0 a rdf:List. var:x2 p0:subListOf var:x1} => {var:x2 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
      [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:first :Rita}]
      [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]
      [ a r:Fact; r:gives {:Dirk list:in (:Geert :Caroline :Dirk :Greta)}]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5. {var:x0 owl:distinctMembers var:x1. var:x2 p0:subListOf var:x1. var:x2 rdf:first var:x3. var:x2 rdf:rest var:x4. var:x5 list:in var:x4} => {var:x3 owl:differentFrom var:x5}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:childIn var:x1. var:x0 owl:differentFrom var:x2} => {var:x0 gc:sibling var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
    [ a r:Extraction; r:gives {:Dirk gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:sibling var:x1. var:x1 gc:sex gc:Male} => {var:x0 gc:brother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:parent var:x1. var:x1 gc:brother var:x2} => {var:x0 gc:uncle var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Rita"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Bart"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 gc:mother var:x1. var:x1 gc:daughter var:x2. var:x2 gc:son var:x3. var:x3 gc:uncle var:x0} => {var:x0 :testRelationship var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:Geert :testRelationship :Tom}; r:evidence (
  [ a r:Inference; r:gives {:Geert gc:mother :Maria}; r:evidence (
   [ a r:Inference; r:gives {:Geert gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Geert gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Maria gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x1 gc:sex gc:Female} => {var:x0 gc:mother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Maria gc:daughter :Greta}; r:evidence (
   [ a r:Inference; r:gives {:Greta gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Greta gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Greta gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Female} => {var:x1 gc:daughter var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Greta gc:son :Tom}; r:evidence (
   [ a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
    [ a r:Extraction; r:gives {:Tom gc:childIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Greta gc:spouseIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#sd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Tom gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Male} => {var:x1 gc:son var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Tom gc:uncle :Geert}; r:evidence (
   [ a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
    [ a r:Extraction; r:gives {:Tom gc:childIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Greta gc:spouseIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#sd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Inference; r:gives {:Greta gc:brother :Geert}; r:evidence (
    [ a r:Inference; r:gives {:Greta gc:sibling :Geert}; r:evidence (
     [ a r:Extraction; r:gives {gc:sibling a owl:SymmetricProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]
     [ a r:Inference; r:gives {:Geert gc:sibling :Greta}; r:evidence (
      [ a r:Extraction; r:gives {:Geert gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Extraction; r:gives {:Greta gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Inference; r:gives {:Geert owl:differentFrom :Greta}; r:evidence (
       [ a r:Inference; r:gives {:dp owl:distinctMembers (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
        [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 owl:distinctMembers var:x1. var:x1 rdf:rest var:x2} => {var:x0 owl:distinctMembers var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Inference; r:gives {(:Geert :Caroline :Dirk :Greta) p0:subListOf (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]
        [ a r:Inference; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {rdf:rest rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
         [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
        [ a r:Inference; r:gives {(:Geert :Caroline :Dirk :Greta) p0:subListOf (:Geert :Caroline :Dirk :Greta)}; r:evidence (
         [ a r:Inference; r:gives {(:Geert :Caroline :Dirk :Greta) a rdf:List}; r:evidence (
          [ a r:Extraction; r:gives {rdf:rest rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
          [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {var:x0 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 rdf:rest var:x1. var:x0 a rdf:List. var:x2 p0:subListOf var:x1} => {var:x2 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:first :Geert}]
       [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:rest (:Caroline :Dirk :Greta)}]
       [ a r:Fact; r:gives {:Greta list:in (:Caroline :Dirk :Greta)}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5. {var:x0 owl:distinctMembers var:x1. var:x2 p0:subListOf var:x1. var:x2 rdf:first var:x3. var:x2 rdf:rest var:x4. var:x5 list:in var:x4} => {var:x3 owl:differentFrom var:x5}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:childIn var:x1. var:x0 owl:differentFrom var:x2} => {var:x0 gc:sibling var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.daml.org/2001/01/gedcom/gedcom#sibling"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a owl:SymmetricProperty. var:x1 var:x0 var:x2} => {var:x2 var:x0 var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
    [ a r:Extraction; r:gives {:Geert gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:sibling var:x1. var:x1 gc:sex gc:Male} => {var:x0 gc:brother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:parent var:x1. var:x1 gc:brother var:x2} => {var:x0 gc:uncle var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Geert"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 gc:mother var:x1. var:x1 gc:daughter var:x2. var:x2 gc:son var:x3. var:x3 gc:uncle var:x0} => {var:x0 :testRelationship var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:Dirk :testRelationship :Tom}; r:evidence (
  [ a r:Inference; r:gives {:Dirk gc:mother :Maria}; r:evidence (
   [ a r:Inference; r:gives {:Dirk gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Dirk gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Maria gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x1 gc:sex gc:Female} => {var:x0 gc:mother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Maria gc:daughter :Greta}; r:evidence (
   [ a r:Inference; r:gives {:Greta gc:parent :Maria}; r:evidence (
    [ a r:Extraction; r:gives {:Greta gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Maria gc:spouseIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Greta gc:sex gc:Female}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Female} => {var:x1 gc:daughter var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Greta gc:son :Tom}; r:evidence (
   [ a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
    [ a r:Extraction; r:gives {:Tom gc:childIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Greta gc:spouseIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#sd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Extraction; r:gives {:Tom gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:parent var:x1. var:x0 gc:sex gc:Male} => {var:x1 gc:son var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
  [ a r:Inference; r:gives {:Tom gc:uncle :Dirk}; r:evidence (
   [ a r:Inference; r:gives {:Tom gc:parent :Greta}; r:evidence (
    [ a r:Extraction; r:gives {:Tom gc:childIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
    [ a r:Extraction; r:gives {:Greta gc:spouseIn :sd}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#sd"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:spouseIn var:x1} => {var:x0 gc:parent var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]
   [ a r:Inference; r:gives {:Greta gc:brother :Dirk}; r:evidence (
    [ a r:Inference; r:gives {:Greta gc:sibling :Dirk}; r:evidence (
     [ a r:Extraction; r:gives {gc:sibling a owl:SymmetricProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]
     [ a r:Inference; r:gives {:Dirk gc:sibling :Greta}; r:evidence (
      [ a r:Extraction; r:gives {:Dirk gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Extraction; r:gives {:Greta gc:childIn :dp}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
      [ a r:Inference; r:gives {:Dirk owl:differentFrom :Greta}; r:evidence (
       [ a r:Inference; r:gives {:dp owl:distinctMembers (:Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Inference; r:gives {:dp owl:distinctMembers (:Geert :Caroline :Dirk :Greta)}; r:evidence (
         [ a r:Inference; r:gives {:dp owl:distinctMembers (:Rita :Geert :Caroline :Dirk :Greta)}; r:evidence (
          [ a r:Extraction; r:gives {:dp owl:distinctMembers (:Jos :Rita :Geert :Caroline :Dirk :Greta)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]
          [ a r:Fact; r:gives {(:Jos :Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Rita :Geert :Caroline :Dirk :Greta)}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Jos :Rita :Geert :Caroline :Dirk :Greta)];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 owl:distinctMembers var:x1. var:x1 rdf:rest var:x2} => {var:x0 owl:distinctMembers var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
         [ a r:Fact; r:gives {(:Rita :Geert :Caroline :Dirk :Greta) rdf:rest (:Geert :Caroline :Dirk :Greta)}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Rita :Geert :Caroline :Dirk :Greta)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 owl:distinctMembers var:x1. var:x1 rdf:rest var:x2} => {var:x0 owl:distinctMembers var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
        [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:rest (:Caroline :Dirk :Greta)}]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Caroline :Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 owl:distinctMembers var:x1. var:x1 rdf:rest var:x2} => {var:x0 owl:distinctMembers var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Inference; r:gives {(:Dirk :Greta) p0:subListOf (:Caroline :Dirk :Greta)}; r:evidence (
        [ a r:Fact; r:gives {(:Caroline :Dirk :Greta) rdf:rest (:Dirk :Greta)}]
        [ a r:Inference; r:gives {(:Caroline :Dirk :Greta) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {rdf:rest rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
         [ a r:Fact; r:gives {(:Geert :Caroline :Dirk :Greta) rdf:rest (:Caroline :Dirk :Greta)}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Geert :Caroline :Dirk :Greta)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Caroline :Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
        [ a r:Inference; r:gives {(:Dirk :Greta) p0:subListOf (:Dirk :Greta)}; r:evidence (
         [ a r:Inference; r:gives {(:Dirk :Greta) a rdf:List}; r:evidence (
          [ a r:Extraction; r:gives {rdf:rest rdfs:range rdf:List}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]
          [ a r:Fact; r:gives {(:Caroline :Dirk :Greta) rdf:rest (:Dirk :Greta)}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#List"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Caroline :Dirk :Greta)];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:Dirk :Greta)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 rdfs:range var:x1. var:x2 var:x0 var:x3} => {var:x3 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Dirk :Greta)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {var:x0 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:Caroline :Dirk :Greta)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Dirk :Greta)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Dirk :Greta)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 rdf:rest var:x1. var:x0 a rdf:List. var:x2 p0:subListOf var:x1} => {var:x2 p0:subListOf var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
       [ a r:Fact; r:gives {(:Dirk :Greta) rdf:first :Dirk}]
       [ a r:Fact; r:gives {(:Dirk :Greta) rdf:rest (:Greta)}]
       [ a r:Fact; r:gives {:Greta list:in (:Greta)}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:Caroline :Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (:Dirk :Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:Greta)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5. {var:x0 owl:distinctMembers var:x1. var:x2 p0:subListOf var:x1. var:x2 rdf:first var:x3. var:x2 rdf:rest var:x4. var:x5 list:in var:x4} => {var:x3 owl:differentFrom var:x5}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#dp"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:childIn var:x1. var:x2 gc:childIn var:x1. var:x0 owl:differentFrom var:x2} => {var:x0 gc:sibling var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.daml.org/2001/01/gedcom/gedcom#sibling"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a owl:SymmetricProperty. var:x1 var:x0 var:x2} => {var:x2 var:x0 var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules.n3>]]]
    [ a r:Extraction; r:gives {:Dirk gc:sex gc:Male}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-facts.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 gc:sibling var:x1. var:x1 gc:sex gc:Male} => {var:x0 gc:brother var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 gc:parent var:x1. var:x1 gc:brother var:x2} => {var:x0 gc:uncle var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-relations.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Dirk"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Maria"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Greta"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/gedcom-facts#Tom"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 gc:mother var:x1. var:x1 gc:daughter var:x2. var:x2 gc:son var:x3. var:x3 gc:uncle var:x0} => {var:x0 :testRelationship var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/gedcom-filter.n3>]]];

 r:gives {
  :Jos :testRelationship :Bart.
  :Jos :testRelationship :Tom.
  :Geert :testRelationship :Bart.
  :Dirk :testRelationship :Bart.
  :Geert :testRelationship :Tom.
  :Dirk :testRelationship :Tom.
 }].

#ENDS 5935 msec
#Trunk : 1645/23055 = 7.135111689438299 %
#Branch: 1/2133 = 0.04688232536333802 %

#easter......
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://www.agfa.com/w3c/euler/easterP#>.
@prefix nsp0: <http://eulersharp.sourceforge.net/2004/04test/>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {2009 :hasEasterOnDay 12. 2009 :hasEasterOnMonth 4}; r:evidence (
  [ a r:Extraction; r:gives {2009 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
  [ a r:Inference; r:gives {2009 :hasEasterOnDay 12}; r:evidence (
   [ a r:Extraction; r:gives {2009 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
   [ a r:Fact; r:gives {(2009 19) math:remainder 14}]
   [ a r:Fact; r:gives {(2009 100) math:integerQuotient 20}]
   [ a r:Fact; r:gives {(2009 100) math:remainder 9}]
   [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
   [ a r:Fact; r:gives {(20 4) math:remainder 0}]
   [ a r:Fact; r:gives {((20 8)!math:sum 25) math:integerQuotient 1}]
   [ a r:Fact; r:gives {(((20 1)!math:difference 1)!math:sum 3) math:integerQuotient 6}]
   [ a r:Fact; r:gives {((((((19 14)!math:product 20)!math:sum 5)!math:difference 6)!math:difference 15)!math:sum 30) math:remainder 20}]
   [ a r:Fact; r:gives {(9 4) math:integerQuotient 2}]
   [ a r:Fact; r:gives {(9 4) math:remainder 1}]
   [ a r:Fact; r:gives {((32 (2 0)!math:product (2 2)!math:product 20!math:negation 1!math:negation)!math:sum 7) math:remainder 1}]
   [ a r:Fact; r:gives {((14 (11 20)!math:product (22 1)!math:product)!math:sum 451) math:integerQuotient 0}]
   [ a r:Fact; r:gives {((20 1 (7 0)!math:product!math:negation 114)!math:sum 31) math:integerQuotient 4}]
   [ a r:Fact; r:gives {((20 1 (7 0)!math:product!math:negation 114)!math:sum 31) math:remainder 11}]
   [ a r:Fact; r:gives {(11 1) math:sum 12}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2009];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 14];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 9];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo 6];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo 11];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo 12];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15. {var:x0 a :Year. (var:x0 19) math:remainder var:x1. (var:x0 100) math:integerQuotient var:x2. (var:x0 100) math:remainder var:x3. (var:x2 4) math:integerQuotient var:x4. (var:x2 4) math:remainder var:x5. ((var:x2 8)!math:sum 25) math:integerQuotient var:x6. (((var:x2 var:x6)!math:difference 1)!math:sum 3) math:integerQuotient var:x7. ((((((19 var:x1)!math:product var:x2)!math:sum var:x4)!math:difference var:x7)!math:difference 15)!math:sum 30) math:remainder var:x8. (var:x3 4) math:integerQuotient var:x9. (var:x3 4) math:remainder var:x10. ((32 (2 var:x5)!math:product (2 var:x9)!math:product var:x8!math:negation var:x10!math:negation)!math:sum 7) math:remainder var:x11. ((var:x1 (11 var:x8)!math:product (22 var:x11)!math:product)!math:sum 451) math:integerQuotient var:x12. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:integerQuotient var:x13. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:remainder var:x14. (var:x14 1) math:sum var:x15} => {var:x0 :hasEasterOnDay var:x15. var:x0 :hasEasterOnMonth var:x13}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]]
  [ a r:Inference; r:gives {2009 :hasEasterOnMonth 4}; r:evidence (
   [ a r:Extraction; r:gives {2009 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
   [ a r:Fact; r:gives {(2009 19) math:remainder 14}]
   [ a r:Fact; r:gives {(2009 100) math:integerQuotient 20}]
   [ a r:Fact; r:gives {(2009 100) math:remainder 9}]
   [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
   [ a r:Fact; r:gives {(20 4) math:remainder 0}]
   [ a r:Fact; r:gives {((20 8)!math:sum 25) math:integerQuotient 1}]
   [ a r:Fact; r:gives {(((20 1)!math:difference 1)!math:sum 3) math:integerQuotient 6}]
   [ a r:Fact; r:gives {((((((19 14)!math:product 20)!math:sum 5)!math:difference 6)!math:difference 15)!math:sum 30) math:remainder 20}]
   [ a r:Fact; r:gives {(9 4) math:integerQuotient 2}]
   [ a r:Fact; r:gives {(9 4) math:remainder 1}]
   [ a r:Fact; r:gives {((32 (2 0)!math:product (2 2)!math:product 20!math:negation 1!math:negation)!math:sum 7) math:remainder 1}]
   [ a r:Fact; r:gives {((14 (11 20)!math:product (22 1)!math:product)!math:sum 451) math:integerQuotient 0}]
   [ a r:Fact; r:gives {((20 1 (7 0)!math:product!math:negation 114)!math:sum 31) math:integerQuotient 4}]
   [ a r:Fact; r:gives {((20 1 (7 0)!math:product!math:negation 114)!math:sum 31) math:remainder 11}]
   [ a r:Fact; r:gives {(11 1) math:sum 12}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2009];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 14];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 9];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo 6];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo 11];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo 12];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15. {var:x0 a :Year. (var:x0 19) math:remainder var:x1. (var:x0 100) math:integerQuotient var:x2. (var:x0 100) math:remainder var:x3. (var:x2 4) math:integerQuotient var:x4. (var:x2 4) math:remainder var:x5. ((var:x2 8)!math:sum 25) math:integerQuotient var:x6. (((var:x2 var:x6)!math:difference 1)!math:sum 3) math:integerQuotient var:x7. ((((((19 var:x1)!math:product var:x2)!math:sum var:x4)!math:difference var:x7)!math:difference 15)!math:sum 30) math:remainder var:x8. (var:x3 4) math:integerQuotient var:x9. (var:x3 4) math:remainder var:x10. ((32 (2 var:x5)!math:product (2 var:x9)!math:product var:x8!math:negation var:x10!math:negation)!math:sum 7) math:remainder var:x11. ((var:x1 (11 var:x8)!math:product (22 var:x11)!math:product)!math:sum 451) math:integerQuotient var:x12. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:integerQuotient var:x13. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:remainder var:x14. (var:x14 1) math:sum var:x15} => {var:x0 :hasEasterOnDay var:x15. var:x0 :hasEasterOnMonth var:x13}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2009];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 12];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 4];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Year. var:x0 :hasEasterOnDay var:x1. var:x0 :hasEasterOnMonth var:x2} => {var:x0 :hasEasterOnDay var:x1. var:x0 :hasEasterOnMonth var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterF.n3>]]];

 r:component [ a r:Inference; r:gives {2010 :hasEasterOnDay 4. 2010 :hasEasterOnMonth 4}; r:evidence (
  [ a r:Extraction; r:gives {2010 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
  [ a r:Inference; r:gives {2010 :hasEasterOnDay 4}; r:evidence (
   [ a r:Extraction; r:gives {2010 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
   [ a r:Fact; r:gives {(2010 19) math:remainder 15}]
   [ a r:Fact; r:gives {(2010 100) math:integerQuotient 20}]
   [ a r:Fact; r:gives {(2010 100) math:remainder 10}]
   [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
   [ a r:Fact; r:gives {(20 4) math:remainder 0}]
   [ a r:Fact; r:gives {((20 8)!math:sum 25) math:integerQuotient 1}]
   [ a r:Fact; r:gives {(((20 1)!math:difference 1)!math:sum 3) math:integerQuotient 6}]
   [ a r:Fact; r:gives {((((((19 15)!math:product 20)!math:sum 5)!math:difference 6)!math:difference 15)!math:sum 30) math:remainder 9}]
   [ a r:Fact; r:gives {(10 4) math:integerQuotient 2}]
   [ a r:Fact; r:gives {(10 4) math:remainder 2}]
   [ a r:Fact; r:gives {((32 (2 0)!math:product (2 2)!math:product 9!math:negation 2!math:negation)!math:sum 7) math:remainder 4}]
   [ a r:Fact; r:gives {((15 (11 9)!math:product (22 4)!math:product)!math:sum 451) math:integerQuotient 0}]
   [ a r:Fact; r:gives {((9 4 (7 0)!math:product!math:negation 114)!math:sum 31) math:integerQuotient 4}]
   [ a r:Fact; r:gives {((9 4 (7 0)!math:product!math:negation 114)!math:sum 31) math:remainder 3}]
   [ a r:Fact; r:gives {(3 1) math:sum 4}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2010];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 15];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 10];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo 6];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo 9];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo 3];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo 4];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15. {var:x0 a :Year. (var:x0 19) math:remainder var:x1. (var:x0 100) math:integerQuotient var:x2. (var:x0 100) math:remainder var:x3. (var:x2 4) math:integerQuotient var:x4. (var:x2 4) math:remainder var:x5. ((var:x2 8)!math:sum 25) math:integerQuotient var:x6. (((var:x2 var:x6)!math:difference 1)!math:sum 3) math:integerQuotient var:x7. ((((((19 var:x1)!math:product var:x2)!math:sum var:x4)!math:difference var:x7)!math:difference 15)!math:sum 30) math:remainder var:x8. (var:x3 4) math:integerQuotient var:x9. (var:x3 4) math:remainder var:x10. ((32 (2 var:x5)!math:product (2 var:x9)!math:product var:x8!math:negation var:x10!math:negation)!math:sum 7) math:remainder var:x11. ((var:x1 (11 var:x8)!math:product (22 var:x11)!math:product)!math:sum 451) math:integerQuotient var:x12. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:integerQuotient var:x13. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:remainder var:x14. (var:x14 1) math:sum var:x15} => {var:x0 :hasEasterOnDay var:x15. var:x0 :hasEasterOnMonth var:x13}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]]
  [ a r:Inference; r:gives {2010 :hasEasterOnMonth 4}; r:evidence (
   [ a r:Extraction; r:gives {2010 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
   [ a r:Fact; r:gives {(2010 19) math:remainder 15}]
   [ a r:Fact; r:gives {(2010 100) math:integerQuotient 20}]
   [ a r:Fact; r:gives {(2010 100) math:remainder 10}]
   [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
   [ a r:Fact; r:gives {(20 4) math:remainder 0}]
   [ a r:Fact; r:gives {((20 8)!math:sum 25) math:integerQuotient 1}]
   [ a r:Fact; r:gives {(((20 1)!math:difference 1)!math:sum 3) math:integerQuotient 6}]
   [ a r:Fact; r:gives {((((((19 15)!math:product 20)!math:sum 5)!math:difference 6)!math:difference 15)!math:sum 30) math:remainder 9}]
   [ a r:Fact; r:gives {(10 4) math:integerQuotient 2}]
   [ a r:Fact; r:gives {(10 4) math:remainder 2}]
   [ a r:Fact; r:gives {((32 (2 0)!math:product (2 2)!math:product 9!math:negation 2!math:negation)!math:sum 7) math:remainder 4}]
   [ a r:Fact; r:gives {((15 (11 9)!math:product (22 4)!math:product)!math:sum 451) math:integerQuotient 0}]
   [ a r:Fact; r:gives {((9 4 (7 0)!math:product!math:negation 114)!math:sum 31) math:integerQuotient 4}]
   [ a r:Fact; r:gives {((9 4 (7 0)!math:product!math:negation 114)!math:sum 31) math:remainder 3}]
   [ a r:Fact; r:gives {(3 1) math:sum 4}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2010];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 15];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 10];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo 6];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo 9];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo 3];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo 4];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15. {var:x0 a :Year. (var:x0 19) math:remainder var:x1. (var:x0 100) math:integerQuotient var:x2. (var:x0 100) math:remainder var:x3. (var:x2 4) math:integerQuotient var:x4. (var:x2 4) math:remainder var:x5. ((var:x2 8)!math:sum 25) math:integerQuotient var:x6. (((var:x2 var:x6)!math:difference 1)!math:sum 3) math:integerQuotient var:x7. ((((((19 var:x1)!math:product var:x2)!math:sum var:x4)!math:difference var:x7)!math:difference 15)!math:sum 30) math:remainder var:x8. (var:x3 4) math:integerQuotient var:x9. (var:x3 4) math:remainder var:x10. ((32 (2 var:x5)!math:product (2 var:x9)!math:product var:x8!math:negation var:x10!math:negation)!math:sum 7) math:remainder var:x11. ((var:x1 (11 var:x8)!math:product (22 var:x11)!math:product)!math:sum 451) math:integerQuotient var:x12. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:integerQuotient var:x13. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:remainder var:x14. (var:x14 1) math:sum var:x15} => {var:x0 :hasEasterOnDay var:x15. var:x0 :hasEasterOnMonth var:x13}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2010];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 4];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 4];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Year. var:x0 :hasEasterOnDay var:x1. var:x0 :hasEasterOnMonth var:x2} => {var:x0 :hasEasterOnDay var:x1. var:x0 :hasEasterOnMonth var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterF.n3>]]];

 r:component [ a r:Inference; r:gives {2011 :hasEasterOnDay 24. 2011 :hasEasterOnMonth 4}; r:evidence (
  [ a r:Extraction; r:gives {2011 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
  [ a r:Inference; r:gives {2011 :hasEasterOnDay 24}; r:evidence (
   [ a r:Extraction; r:gives {2011 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
   [ a r:Fact; r:gives {(2011 19) math:remainder 16}]
   [ a r:Fact; r:gives {(2011 100) math:integerQuotient 20}]
   [ a r:Fact; r:gives {(2011 100) math:remainder 11}]
   [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
   [ a r:Fact; r:gives {(20 4) math:remainder 0}]
   [ a r:Fact; r:gives {((20 8)!math:sum 25) math:integerQuotient 1}]
   [ a r:Fact; r:gives {(((20 1)!math:difference 1)!math:sum 3) math:integerQuotient 6}]
   [ a r:Fact; r:gives {((((((19 16)!math:product 20)!math:sum 5)!math:difference 6)!math:difference 15)!math:sum 30) math:remainder 28}]
   [ a r:Fact; r:gives {(11 4) math:integerQuotient 2}]
   [ a r:Fact; r:gives {(11 4) math:remainder 3}]
   [ a r:Fact; r:gives {((32 (2 0)!math:product (2 2)!math:product 28!math:negation 3!math:negation)!math:sum 7) math:remainder 5}]
   [ a r:Fact; r:gives {((16 (11 28)!math:product (22 5)!math:product)!math:sum 451) math:integerQuotient 0}]
   [ a r:Fact; r:gives {((28 5 (7 0)!math:product!math:negation 114)!math:sum 31) math:integerQuotient 4}]
   [ a r:Fact; r:gives {((28 5 (7 0)!math:product!math:negation 114)!math:sum 31) math:remainder 23}]
   [ a r:Fact; r:gives {(23 1) math:sum 24}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2011];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 16];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 11];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo 6];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo 28];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo 3];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo 23];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo 24];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15. {var:x0 a :Year. (var:x0 19) math:remainder var:x1. (var:x0 100) math:integerQuotient var:x2. (var:x0 100) math:remainder var:x3. (var:x2 4) math:integerQuotient var:x4. (var:x2 4) math:remainder var:x5. ((var:x2 8)!math:sum 25) math:integerQuotient var:x6. (((var:x2 var:x6)!math:difference 1)!math:sum 3) math:integerQuotient var:x7. ((((((19 var:x1)!math:product var:x2)!math:sum var:x4)!math:difference var:x7)!math:difference 15)!math:sum 30) math:remainder var:x8. (var:x3 4) math:integerQuotient var:x9. (var:x3 4) math:remainder var:x10. ((32 (2 var:x5)!math:product (2 var:x9)!math:product var:x8!math:negation var:x10!math:negation)!math:sum 7) math:remainder var:x11. ((var:x1 (11 var:x8)!math:product (22 var:x11)!math:product)!math:sum 451) math:integerQuotient var:x12. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:integerQuotient var:x13. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:remainder var:x14. (var:x14 1) math:sum var:x15} => {var:x0 :hasEasterOnDay var:x15. var:x0 :hasEasterOnMonth var:x13}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]]
  [ a r:Inference; r:gives {2011 :hasEasterOnMonth 4}; r:evidence (
   [ a r:Extraction; r:gives {2011 a :Year}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]
   [ a r:Fact; r:gives {(2011 19) math:remainder 16}]
   [ a r:Fact; r:gives {(2011 100) math:integerQuotient 20}]
   [ a r:Fact; r:gives {(2011 100) math:remainder 11}]
   [ a r:Fact; r:gives {(20 4) math:integerQuotient 5}]
   [ a r:Fact; r:gives {(20 4) math:remainder 0}]
   [ a r:Fact; r:gives {((20 8)!math:sum 25) math:integerQuotient 1}]
   [ a r:Fact; r:gives {(((20 1)!math:difference 1)!math:sum 3) math:integerQuotient 6}]
   [ a r:Fact; r:gives {((((((19 16)!math:product 20)!math:sum 5)!math:difference 6)!math:difference 15)!math:sum 30) math:remainder 28}]
   [ a r:Fact; r:gives {(11 4) math:integerQuotient 2}]
   [ a r:Fact; r:gives {(11 4) math:remainder 3}]
   [ a r:Fact; r:gives {((32 (2 0)!math:product (2 2)!math:product 28!math:negation 3!math:negation)!math:sum 7) math:remainder 5}]
   [ a r:Fact; r:gives {((16 (11 28)!math:product (22 5)!math:product)!math:sum 451) math:integerQuotient 0}]
   [ a r:Fact; r:gives {((28 5 (7 0)!math:product!math:negation 114)!math:sum 31) math:integerQuotient 4}]
   [ a r:Fact; r:gives {((28 5 (7 0)!math:product!math:negation 114)!math:sum 31) math:remainder 23}]
   [ a r:Fact; r:gives {(23 1) math:sum 24}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2011];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 16];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 20];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 11];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo 1];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo 6];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo 28];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo 2];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo 3];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo 5];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo 0];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo 4];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo 23];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo 24];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15. {var:x0 a :Year. (var:x0 19) math:remainder var:x1. (var:x0 100) math:integerQuotient var:x2. (var:x0 100) math:remainder var:x3. (var:x2 4) math:integerQuotient var:x4. (var:x2 4) math:remainder var:x5. ((var:x2 8)!math:sum 25) math:integerQuotient var:x6. (((var:x2 var:x6)!math:difference 1)!math:sum 3) math:integerQuotient var:x7. ((((((19 var:x1)!math:product var:x2)!math:sum var:x4)!math:difference var:x7)!math:difference 15)!math:sum 30) math:remainder var:x8. (var:x3 4) math:integerQuotient var:x9. (var:x3 4) math:remainder var:x10. ((32 (2 var:x5)!math:product (2 var:x9)!math:product var:x8!math:negation var:x10!math:negation)!math:sum 7) math:remainder var:x11. ((var:x1 (11 var:x8)!math:product (22 var:x11)!math:product)!math:sum 451) math:integerQuotient var:x12. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:integerQuotient var:x13. ((var:x8 var:x11 (7 var:x12)!math:product!math:negation 114)!math:sum 31) math:remainder var:x14. (var:x14 1) math:sum var:x15} => {var:x0 :hasEasterOnDay var:x15. var:x0 :hasEasterOnMonth var:x13}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 2011];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 24];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 4];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Year. var:x0 :hasEasterOnDay var:x1. var:x0 :hasEasterOnMonth var:x2} => {var:x0 :hasEasterOnDay var:x1. var:x0 :hasEasterOnMonth var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/easterF.n3>]]];

 r:gives {
  2009 :hasEasterOnDay 12. 2009 :hasEasterOnMonth 4.
  2010 :hasEasterOnDay 4. 2010 :hasEasterOnMonth 4.
  2011 :hasEasterOnDay 24. 2011 :hasEasterOnMonth 4.
 }].

#ENDS 291 msec
#Trunk : 15/27 = 55.55555555555556 %
#Branch: 1/7 = 14.285714285714285 %

#danc........
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2004/04test/danP#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {q:result q:is ("Cambridge" 42.3 -71.1)}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e14_0_. var:e14_0_ :latitude 42.3}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e14_0_. var:e14_0_ :longitude -71.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e14_0_. var:e14_0_ :cityName "Cambridge"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>]]
  [ a r:Fact; r:gives {((((42.3 42.3)!math:difference 2)!math:exponentiation ((-71.1 -71.1)!math:difference 2)!math:exponentiation)!math:sum 0.5)!math:exponentiation math:lessThan 0.5}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e14_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 42.3];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -71.1];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "Cambridge"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :latitude var:x1. var:x0 :longitude var:x2. var:x0 :cityName var:x3. ((((var:x1 42.3)!math:difference 2)!math:exponentiation ((var:x2 -71.1)!math:difference 2)!math:exponentiation)!math:sum 0.5)!math:exponentiation math:lessThan 0.5} => {q:result q:is (var:x3 var:x1 var:x2)}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danC.n3>]]];

 r:component [ a r:Inference; r:gives {q:result q:is ("Boston" 42.19 -71.05)}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e60_0_. var:e60_0_ :latitude 42.19}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e60_0_. var:e60_0_ :longitude -71.05}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e60_0_. var:e60_0_ :cityName "Boston"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danP.n3>]]
  [ a r:Fact; r:gives {((((42.19 42.3)!math:difference 2)!math:exponentiation ((-71.05 -71.1)!math:difference 2)!math:exponentiation)!math:sum 0.5)!math:exponentiation math:lessThan 0.5}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e60_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 42.19];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -71.05];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "Boston"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :latitude var:x1. var:x0 :longitude var:x2. var:x0 :cityName var:x3. ((((var:x1 42.3)!math:difference 2)!math:exponentiation ((var:x2 -71.1)!math:difference 2)!math:exponentiation)!math:sum 0.5)!math:exponentiation math:lessThan 0.5} => {q:result q:is (var:x3 var:x1 var:x2)}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/danC.n3>]]];

 r:gives {
  q:result q:is ("Cambridge" 42.3 -71.1).
  q:result q:is ("Boston" 42.19 -71.05).
 }].

#ENDS 72 msec
#Trunk : 8/12 = 66.66666666666666 %
#Branch: 1/3 = 33.33333333333333 %

#lldm........
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:meas47 a :LLDAlarm}; r:evidence (
  [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
  [ a r:Inference; r:gives {:meas47 a :LLDAlarm}; r:evidence (
   [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
   [ a r:Inference; r:gives {:meas47 :dCm -1.9082339805374957}; r:evidence (
    [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
    [ a r:Inference; r:gives {:meas47 :d53Cm 21.548900464617255}; r:evidence (
     [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
     [ a r:Inference; r:gives {:meas47 :ssd53Cm2 464.35511123398175}; r:evidence (
      [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
      [ a r:Inference; r:gives {:meas47 :sdx53Cm2 1.8274562043619251}; r:evidence (
       [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
       [ a r:Inference; r:gives {:meas47 :dx53Cm -1.351834384960645}; r:evidence (
        [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Inference; r:gives {:meas47 :p5xCm 2.248165615039355}; r:evidence (
         [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
         [ a r:Inference; r:gives {:meas47 :ddy13Cm -35.90758441558442}; r:evidence (
          [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
          [ a r:Inference; r:gives {:meas47 :dd13Cm -57.90758441558442}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :pL1x1Cm -0.6348571428571429}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(-0.06285714285714286 10.1) math:product -0.6348571428571429}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 10.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.6348571428571429];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :p1xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL1x1Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Inference; r:gives {:meas47 :pL3x3Cm 57.27272727272727}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Extraction; r:gives {:meas47 :p3xCm 3.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(15.909090909090908 3.6) math:product 57.27272727272727}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 15.909090909090908];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 3.6];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 57.27272727272727];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL3 var:x1. var:x0 :p3xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL3x3Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(-0.6348571428571429 57.27272727272727) math:difference -57.90758441558442}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.6348571428571429];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 57.27272727272727];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -57.90758441558442];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :pL1x1Cm var:x1. var:x0 :pL3x3Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dd13Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Inference; r:gives {:meas47 :dy13Cm -22.0}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Extraction; r:gives {:meas47 :p3yCm 29.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Fact; r:gives {(7.8 29.8) math:difference -22.0}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 29.8];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -22.0];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p3yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy13Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Fact; r:gives {(-57.90758441558442 -22.0) math:difference -35.90758441558442}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -57.90758441558442];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -22.0];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.90758441558442];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dd13Cm var:x1. var:x0 :dy13Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddy13Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
         [ a r:Inference; r:gives {:meas47 :ddL13 -15.97194805194805}; r:evidence (
          [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
          [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Fact; r:gives {(-0.06285714285714286 15.909090909090908) math:difference -15.97194805194805}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -15.97194805194805];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :cL3 var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddL13 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
         [ a r:Fact; r:gives {(-35.90758441558442 -15.97194805194805) math:quotient 2.248165615039355}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -35.90758441558442];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.97194805194805];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.248165615039355];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :ddy13Cm var:x1. var:x0 :ddL13 var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :p5xCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
        [ a r:Extraction; r:gives {:meas47 :p3xCm 3.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Fact; r:gives {(2.248165615039355 3.6) math:difference -1.351834384960645}]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.248165615039355];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 3.6];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -1.351834384960645];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p5xCm var:x1. var:x0 :p3xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx53Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
       [ a r:Fact; r:gives {(-1.351834384960645 2) math:exponentiation 1.8274562043619251}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -1.351834384960645];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 1.8274562043619251];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dx53Cm var:x1. (var:x1 2) math:exponentiation var:x2} => {var:x0 :sdx53Cm2 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
      [ a r:Inference; r:gives {:meas47 :sdy53Cm2 462.52765502961984}; r:evidence (
       [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
       [ a r:Inference; r:gives {:meas47 :dy53Cm -21.506456124373905}; r:evidence (
        [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Inference; r:gives {:meas47 :p5yCm 8.293543875626098}; r:evidence (
         [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
         [ a r:Inference; r:gives {:meas47 :pL1dx51Cm 0.4935438756260977}; r:evidence (
          [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
          [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Inference; r:gives {:meas47 :dx51Cm -7.851834384960645}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :p5xCm 2.248165615039355}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :ddy13Cm -35.90758441558442}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dd13Cm -57.90758441558442}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :pL1x1Cm -0.6348571428571429}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(-0.06285714285714286 10.1) math:product -0.6348571428571429}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 10.1];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.6348571428571429];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :p1xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL1x1Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Inference; r:gives {:meas47 :pL3x3Cm 57.27272727272727}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
                  [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                  [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                   [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                  [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                   [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                  [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
                  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                 [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Extraction; r:gives {:meas47 :p3xCm 3.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(15.909090909090908 3.6) math:product 57.27272727272727}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 15.909090909090908];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 3.6];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 57.27272727272727];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL3 var:x1. var:x0 :p3xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL3x3Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(-0.6348571428571429 57.27272727272727) math:difference -57.90758441558442}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.6348571428571429];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 57.27272727272727];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -57.90758441558442];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :pL1x1Cm var:x1. var:x0 :pL3x3Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dd13Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :dy13Cm -22.0}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p3yCm 29.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(7.8 29.8) math:difference -22.0}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 29.8];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -22.0];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p3yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy13Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(-57.90758441558442 -22.0) math:difference -35.90758441558442}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -57.90758441558442];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -22.0];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.90758441558442];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dd13Cm var:x1. var:x0 :dy13Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddy13Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Inference; r:gives {:meas47 :ddL13 -15.97194805194805}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(-0.06285714285714286 15.909090909090908) math:difference -15.97194805194805}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -15.97194805194805];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :cL3 var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddL13 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Fact; r:gives {(-35.90758441558442 -15.97194805194805) math:quotient 2.248165615039355}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -35.90758441558442];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.97194805194805];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.248165615039355];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :ddy13Cm var:x1. var:x0 :ddL13 var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :p5xCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Fact; r:gives {(2.248165615039355 10.1) math:difference -7.851834384960645}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.248165615039355];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 10.1];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -7.851834384960645];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p5xCm var:x1. var:x0 :p1xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx51Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Fact; r:gives {(-0.06285714285714286 -7.851834384960645) math:product 0.4935438756260977}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -7.851834384960645];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 0.4935438756260977];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :dx51Cm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL1dx51Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
         [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
         [ a r:Fact; r:gives {(0.4935438756260977 7.8) math:sum 8.293543875626098}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.4935438756260977];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 7.8];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 8.293543875626098];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :pL1dx51Cm var:x1. var:x0 :p1yCm var:x2. (var:x1 var:x2) math:sum var:x3} => {var:x0 :p5yCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
        [ a r:Extraction; r:gives {:meas47 :p3yCm 29.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Fact; r:gives {(8.293543875626098 29.8) math:difference -21.506456124373905}]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 8.293543875626098];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 29.8];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -21.506456124373905];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p5yCm var:x1. var:x0 :p3yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy53Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
       [ a r:Fact; r:gives {(-21.506456124373905 2) math:exponentiation 462.52765502961984}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -21.506456124373905];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 462.52765502961984];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dy53Cm var:x1. (var:x1 2) math:exponentiation var:x2} => {var:x0 :sdy53Cm2 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
      [ a r:Fact; r:gives {(1.8274562043619251 462.52765502961984) math:sum 464.35511123398175}]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 1.8274562043619251];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 462.52765502961984];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 464.35511123398175];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :sdx53Cm2 var:x1. var:x0 :sdy53Cm2 var:x2. (var:x1 var:x2) math:sum var:x3} => {var:x0 :ssd53Cm2 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
     [ a r:Fact; r:gives {(464.35511123398175 0.5) math:exponentiation 21.548900464617255}]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 464.35511123398175];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 21.548900464617255];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :ssd53Cm2 var:x1. (var:x1 0.5) math:exponentiation var:x2} => {var:x0 :d53Cm var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
    [ a r:Inference; r:gives {:meas47 :d64Cm 23.45713444515475}; r:evidence (
     [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
     [ a r:Inference; r:gives {:meas47 :ssd64Cm2 550.2371563780655}; r:evidence (
      [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
      [ a r:Inference; r:gives {:meas47 :sdx64Cm2 2.1654425265642967}; r:evidence (
       [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
       [ a r:Inference; r:gives {:meas47 :dx64Cm -1.4715442659207696}; r:evidence (
        [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Inference; r:gives {:meas47 :p6xCm 53.22845573407923}; r:evidence (
         [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
         [ a r:Inference; r:gives {:meas47 :ddy24Cm -850.1621298701299}; r:evidence (
          [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
          [ a r:Inference; r:gives {:meas47 :dd24Cm -873.0621298701299}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :pL1x2Cm -2.834857142857143}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(-0.06285714285714286 45.1) math:product -2.834857142857143}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -2.834857142857143];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL1x2Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Inference; r:gives {:meas47 :pL3x4Cm 870.2272727272727}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Extraction; r:gives {:meas47 :p4xCm 54.7}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(15.909090909090908 54.7) math:product 870.2272727272727}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 15.909090909090908];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 54.7];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 870.2272727272727];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL3 var:x1. var:x0 :p4xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL3x4Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(-2.834857142857143 870.2272727272727) math:difference -873.0621298701299}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -2.834857142857143];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 870.2272727272727];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -873.0621298701299];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :pL1x2Cm var:x1. var:x0 :pL3x4Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dd24Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Inference; r:gives {:meas47 :dy24Cm -22.9}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Extraction; r:gives {:meas47 :p4yCm 28.5}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Fact; r:gives {(5.6 28.5) math:difference -22.9}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 5.6];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 28.5];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -22.9];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p2yCm var:x1. var:x0 :p4yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy24Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Fact; r:gives {(-873.0621298701299 -22.9) math:difference -850.1621298701299}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -873.0621298701299];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -22.9];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -850.1621298701299];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dd24Cm var:x1. var:x0 :dy24Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddy24Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
         [ a r:Inference; r:gives {:meas47 :ddL13 -15.97194805194805}; r:evidence (
          [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
          [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Fact; r:gives {(-0.06285714285714286 15.909090909090908) math:difference -15.97194805194805}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -15.97194805194805];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :cL3 var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddL13 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
         [ a r:Fact; r:gives {(-850.1621298701299 -15.97194805194805) math:quotient 53.22845573407923}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -850.1621298701299];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.97194805194805];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 53.22845573407923];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :ddy24Cm var:x1. var:x0 :ddL13 var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :p6xCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
        [ a r:Extraction; r:gives {:meas47 :p4xCm 54.7}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Fact; r:gives {(53.22845573407923 54.7) math:difference -1.4715442659207696}]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 53.22845573407923];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 54.7];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -1.4715442659207696];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p6xCm var:x1. var:x0 :p4xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx64Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
       [ a r:Fact; r:gives {(-1.4715442659207696 2) math:exponentiation 2.1654425265642967}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -1.4715442659207696];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 2.1654425265642967];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dx64Cm var:x1. (var:x1 2) math:exponentiation var:x2} => {var:x0 :sdx64Cm2 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
      [ a r:Inference; r:gives {:meas47 :sdy64Cm2 548.0717138515012}; r:evidence (
       [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
       [ a r:Inference; r:gives {:meas47 :dy64Cm -23.41093150328498}; r:evidence (
        [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Inference; r:gives {:meas47 :p6yCm 5.0890684967150195}; r:evidence (
         [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
         [ a r:Inference; r:gives {:meas47 :pL1dx62Cm -0.5109315032849803}; r:evidence (
          [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
          [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Inference; r:gives {:meas47 :dx62Cm 8.128455734079232}; r:evidence (
           [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Inference; r:gives {:meas47 :p6xCm 53.22845573407923}; r:evidence (
            [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
            [ a r:Inference; r:gives {:meas47 :ddy24Cm -850.1621298701299}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :dd24Cm -873.0621298701299}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :pL1x2Cm -2.834857142857143}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(-0.06285714285714286 45.1) math:product -2.834857142857143}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -2.834857142857143];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL1x2Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Inference; r:gives {:meas47 :pL3x4Cm 870.2272727272727}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
                  [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                  [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                   [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                  [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                   [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                   [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                  [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
                  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
                  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                 [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Extraction; r:gives {:meas47 :p4xCm 54.7}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(15.909090909090908 54.7) math:product 870.2272727272727}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 15.909090909090908];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 54.7];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 870.2272727272727];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL3 var:x1. var:x0 :p4xCm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL3x4Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(-2.834857142857143 870.2272727272727) math:difference -873.0621298701299}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -2.834857142857143];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 870.2272727272727];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -873.0621298701299];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :pL1x2Cm var:x1. var:x0 :pL3x4Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dd24Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :dy24Cm -22.9}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Extraction; r:gives {:meas47 :p4yCm 28.5}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Fact; r:gives {(5.6 28.5) math:difference -22.9}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 5.6];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 28.5];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -22.9];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p2yCm var:x1. var:x0 :p4yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy24Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(-873.0621298701299 -22.9) math:difference -850.1621298701299}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -873.0621298701299];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -22.9];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -850.1621298701299];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dd24Cm var:x1. var:x0 :dy24Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddy24Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Inference; r:gives {:meas47 :ddL13 -15.97194805194805}; r:evidence (
             [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
             [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Inference; r:gives {:meas47 :cL3 15.909090909090908}; r:evidence (
              [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
              [ a r:Inference; r:gives {:meas47 :dL3m -15.909090909090908}; r:evidence (
               [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
               [ a r:Inference; r:gives {:meas47 :cL1 -0.06285714285714286}; r:evidence (
                [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                [ a r:Inference; r:gives {:meas47 :dy12Cm 2.2}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1yCm 7.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(7.8 5.6) math:difference 2.2}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 7.8];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 2.2];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1yCm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Inference; r:gives {:meas47 :dx12Cm -35.0}; r:evidence (
                 [ a r:Extraction; r:gives {:meas47 a :Measurement}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p1xCm 10.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
                 [ a r:Fact; r:gives {(10.1 45.1) math:difference -35.0}]);
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 10.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
                 r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -35.0];
                 r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p1xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx12Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
                [ a r:Fact; r:gives {(2.2 -35.0) math:quotient -0.06285714285714286}]);
                r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.2];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -35.0];
                r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.06285714285714286];
                r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :dy12Cm var:x1. var:x0 :dx12Cm var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :cL1 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
               [ a r:Fact; r:gives {(1 -0.06285714285714286) math:quotient -15.909090909090908}]);
               r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
               r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.909090909090908];
               r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :cL1 var:x1. (1 var:x1) math:quotient var:x2} => {var:x0 :dL3m var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
              [ a r:Fact; r:gives {(0 -15.909090909090908) math:difference 15.909090909090908}]);
              r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -15.909090909090908];
              r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
              r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dL3m var:x1. (0 var:x1) math:difference var:x2} => {var:x0 :cL3 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
             [ a r:Fact; r:gives {(-0.06285714285714286 15.909090909090908) math:difference -15.97194805194805}]);
             r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 15.909090909090908];
             r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -15.97194805194805];
             r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :cL3 var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :ddL13 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
            [ a r:Fact; r:gives {(-850.1621298701299 -15.97194805194805) math:quotient 53.22845573407923}]);
            r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -850.1621298701299];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo -15.97194805194805];
            r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 53.22845573407923];
            r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :ddy24Cm var:x1. var:x0 :ddL13 var:x2. (var:x1 var:x2) math:quotient var:x3} => {var:x0 :p6xCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
           [ a r:Extraction; r:gives {:meas47 :p2xCm 45.1}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
           [ a r:Fact; r:gives {(53.22845573407923 45.1) math:difference 8.128455734079232}]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 53.22845573407923];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 45.1];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 8.128455734079232];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p6xCm var:x1. var:x0 :p2xCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dx62Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
          [ a r:Fact; r:gives {(-0.06285714285714286 8.128455734079232) math:product -0.5109315032849803}]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.06285714285714286];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 8.128455734079232];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -0.5109315032849803];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :cL1 var:x1. var:x0 :dx62Cm var:x2. (var:x1 var:x2) math:product var:x3} => {var:x0 :pL1dx62Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
         [ a r:Extraction; r:gives {:meas47 :p2yCm 5.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
         [ a r:Fact; r:gives {(-0.5109315032849803 5.6) math:sum 5.0890684967150195}]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -0.5109315032849803];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 5.6];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 5.0890684967150195];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :pL1dx62Cm var:x1. var:x0 :p2yCm var:x2. (var:x1 var:x2) math:sum var:x3} => {var:x0 :p6yCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
        [ a r:Extraction; r:gives {:meas47 :p4yCm 28.5}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmD.n3>]]
        [ a r:Fact; r:gives {(5.0890684967150195 28.5) math:difference -23.41093150328498}]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 5.0890684967150195];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 28.5];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -23.41093150328498];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :p6yCm var:x1. var:x0 :p4yCm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dy64Cm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
       [ a r:Fact; r:gives {(-23.41093150328498 2) math:exponentiation 548.0717138515012}]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -23.41093150328498];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 548.0717138515012];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :dy64Cm var:x1. (var:x1 2) math:exponentiation var:x2} => {var:x0 :sdy64Cm2 var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
      [ a r:Fact; r:gives {(2.1654425265642967 548.0717138515012) math:sum 550.2371563780655}]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 2.1654425265642967];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 548.0717138515012];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 550.2371563780655];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :sdx64Cm2 var:x1. var:x0 :sdy64Cm2 var:x2. (var:x1 var:x2) math:sum var:x3} => {var:x0 :ssd64Cm2 var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
     [ a r:Fact; r:gives {(550.2371563780655 0.5) math:exponentiation 23.45713444515475}]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 550.2371563780655];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 23.45713444515475];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Measurement. var:x0 :ssd64Cm2 var:x1. (var:x1 0.5) math:exponentiation var:x2} => {var:x0 :d64Cm var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
    [ a r:Fact; r:gives {(21.548900464617255 23.45713444515475) math:difference -1.9082339805374957}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 21.548900464617255];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 23.45713444515475];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo -1.9082339805374957];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 a :Measurement. var:x0 :d53Cm var:x1. var:x0 :d64Cm var:x2. (var:x1 var:x2) math:difference var:x3} => {var:x0 :dCm var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]
   [ a r:Fact; r:gives {-1.9082339805374957 math:lessThan -1.25}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo -1.9082339805374957];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :Measurement. var:x0 :dCm var:x1. var:x1 math:lessThan -1.25} => {var:x0 a :LLDAlarm}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/2002/10/medicad/op/lldmP#meas47"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Measurement. var:x0 a :LLDAlarm} => {var:x0 a :LLDAlarm}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lldmF.n3>]]];

 r:gives {
  :meas47 a :LLDAlarm.
 }].

#ENDS 4358 msec
#Trunk : 42/166 = 25.301204819277107 %
#Branch: 1/40 = 2.5 %

#iop.........
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix fl: <http://eulersharp.sourceforge.net/2003/03swap/fl-rules#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://www.agfa.com/w3c/euler/case001#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {(:Ann :ChildAge) fl:pi 0.4167000000000005}; r:evidence (
  [ a r:Fact; r:gives {(:Ann :ChildAge) fl:pi 0.4167000000000005}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#ChildAge"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.4167000000000005];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann :AdultAge) fl:pi 0.5832999999999995}; r:evidence (
  [ a r:Fact; r:gives {(:Ann :AdultAge) fl:pi 0.5832999999999995}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#AdultAge"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.5832999999999995];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann owl:Thing) fl:pi 1.0}; r:evidence (
  [ a r:Fact; r:gives {(:Ann owl:Thing) fl:pi 1.0}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/2002/07/owl#Thing"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 1.0];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann owl:Nothing) fl:pi 0.0}; r:evidence (
  [ a r:Fact; r:gives {(:Ann owl:Nothing) fl:pi 0.0}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/2002/07/owl#Nothing"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.0];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann :NormalIntraocularPressure) fl:pi 0.42055693693538665}; r:evidence (
  [ a r:Fact; r:gives {(:Ann :NormalIntraocularPressure) fl:pi 0.42055693693538665}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#NormalIntraocularPressure"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.42055693693538665];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann :IncreasedIntraocularPressure) fl:pi 0.5762688313443307}; r:evidence (
  [ a r:Fact; r:gives {(:Ann :IncreasedIntraocularPressure) fl:pi 0.5762688313443307}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#IncreasedIntraocularPressure"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.5762688313443307];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann :NonNormalIntraocularPressure) fl:pi 0.650603049163276}; r:evidence (
  [ a r:Fact; r:gives {(:Ann :NonNormalIntraocularPressure) fl:pi 0.650603049163276}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#NonNormalIntraocularPressure"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.650603049163276];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:component [ a r:Inference; r:gives {(:Ann :NonIncreasedIntraocularPressure) fl:pi 0.3548565190212678}; r:evidence (
  [ a r:Fact; r:gives {(:Ann :NonIncreasedIntraocularPressure) fl:pi 0.3548565190212678}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#Ann"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.agfa.com/w3c/euler/case001#NonIncreasedIntraocularPressure"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo 0.3548565190212678];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {(var:x0 var:x1) fl:pi var:x2} => {(var:x0 var:x1) fl:pi var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/example003Q.n3>]]];

 r:gives {
  (:Ann :ChildAge) fl:pi 0.4167000000000005.
  (:Ann :AdultAge) fl:pi 0.5832999999999995.
  (:Ann owl:Thing) fl:pi 1.0.
  (:Ann owl:Nothing) fl:pi 0.0.
  (:Ann :NormalIntraocularPressure) fl:pi 0.42055693693538665.
  (:Ann :IncreasedIntraocularPressure) fl:pi 0.5762688313443307.
  (:Ann :NonNormalIntraocularPressure) fl:pi 0.650603049163276.
  (:Ann :NonIncreasedIntraocularPressure) fl:pi 0.3548565190212678.
 }].

#ENDS 311 msec
#Trunk : 50/209 = 23.923444976076556 %
#Branch: 7/131 = 5.343511450381679 %

#radlex......
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix ACR: <http://eulersharp.sourceforge.net/2004/04test/ACR#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix : <http://eulersharp.sourceforge.net/2004/04test/RadLex#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix var: <http://localhost/var#>.
@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix UMLS: <http://eulersharp.sourceforge.net/2004/04test/UMLS#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:RL433 :name "rotator cuff muscles"}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e31295_0_. var:e31295_0_ :rl-term :RL432}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31295_0_, var:e31350_0_. var:e31295_0_ :axis-term var:e31350_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31350_0_. var:e31350_0_ :rl-term :RL433}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {:RL433 :name "rotator cuff muscles"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31295_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31350_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/RadLex#RL433"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "rotator cuff muscles"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :rl-term :RL432. var:x0 :axis-term var:x1. var:x1 :rl-term var:x2. var:x2 :name var:x3} => {var:x2 :name var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>]]];

 r:component [ a r:Inference; r:gives {:RL438 :name "teres major muscle"}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e31295_0_. var:e31295_0_ :rl-term :RL432}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31295_0_, var:e31395_0_. var:e31295_0_ :axis-term var:e31395_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31395_0_. var:e31395_0_ :rl-term :RL438}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {:RL438 :name "teres major muscle"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31295_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31395_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/RadLex#RL438"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "teres major muscle"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :rl-term :RL432. var:x0 :axis-term var:x1. var:x1 :rl-term var:x2. var:x2 :name var:x3} => {var:x2 :name var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>]]];

 r:component [ a r:Inference; r:gives {:RL439 :name "deltoid muscle"}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e31295_0_. var:e31295_0_ :rl-term :RL432}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31295_0_, var:e31400_0_. var:e31295_0_ :axis-term var:e31400_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31400_0_. var:e31400_0_ :rl-term :RL439}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {:RL439 :name "deltoid muscle"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31295_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31400_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/RadLex#RL439"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "deltoid muscle"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :rl-term :RL432. var:x0 :axis-term var:x1. var:x1 :rl-term var:x2. var:x2 :name var:x3} => {var:x2 :name var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>]]];

 r:component [ a r:Inference; r:gives {:RL440 :name "trapezius muscle"}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e31295_0_. var:e31295_0_ :rl-term :RL432}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31295_0_, var:e31405_0_. var:e31295_0_ :axis-term var:e31405_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31405_0_. var:e31405_0_ :rl-term :RL440}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {:RL440 :name "trapezius muscle"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31295_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31405_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/RadLex#RL440"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "trapezius muscle"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :rl-term :RL432. var:x0 :axis-term var:x1. var:x1 :rl-term var:x2. var:x2 :name var:x3} => {var:x2 :name var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>]]];

 r:component [ a r:Inference; r:gives {:RL441 :name "pectoralis major muscle"}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e31295_0_. var:e31295_0_ :rl-term :RL432}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31295_0_, var:e31410_0_. var:e31295_0_ :axis-term var:e31410_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31410_0_. var:e31410_0_ :rl-term :RL441}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {:RL441 :name "pectoralis major muscle"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31295_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31410_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/RadLex#RL441"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "pectoralis major muscle"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :rl-term :RL432. var:x0 :axis-term var:x1. var:x1 :rl-term var:x2. var:x2 :name var:x3} => {var:x2 :name var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>]]];

 r:component [ a r:Inference; r:gives {:RL442 :name "pectoralis minor muscle"}; r:evidence (
  [ a r:Extraction; r:gives {@forSome var:e31295_0_. var:e31295_0_ :rl-term :RL432}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31295_0_, var:e31415_0_. var:e31295_0_ :axis-term var:e31415_0_}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {@forSome var:e31415_0_. var:e31415_0_ :rl-term :RL442}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]
  [ a r:Extraction; r:gives {:RL442 :name "pectoralis minor muscle"}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlex.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31295_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "http://localhost/var#e31415_0_"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/RadLex#RL442"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo "pectoralis minor muscle"];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :rl-term :RL432. var:x0 :axis-term var:x1. var:x1 :rl-term var:x2. var:x2 :name var:x3} => {var:x2 :name var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/radlexQ.n3>]]];

 r:gives {
  :RL433 :name "rotator cuff muscles".
  :RL438 :name "teres major muscle".
  :RL439 :name "deltoid muscle".
  :RL440 :name "trapezius muscle".
  :RL441 :name "pectoralis major muscle".
  :RL442 :name "pectoralis minor muscle".
 }].

#ENDS 643 msec
#Trunk : 24/36 = 66.66666666666666 %
#Branch: 1/7 = 14.285714285714285 %

#anatomy.....
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://idm.univ-rennes1.fr/~obierlai/anatomy#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2}; r:evidence (
  [ a r:Extraction; r:gives {:MAE1 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
  [ a r:Extraction; r:gives {:MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE2"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :MaterialAnatomicalEntity. var:x0 :isMaterialAnatomicalEntityConnectedTo var:x1} => {var:x0 :isMaterialAnatomicalEntityConnectedTo var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE2 :isMaterialAnatomicalEntityConnectedTo :MAE1}; r:evidence (
  [ a r:Extraction; r:gives {:MAE2 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
  [ a r:Inference; r:gives {:MAE2 :isMaterialAnatomicalEntityConnectedTo :MAE1}; r:evidence (
   [ a r:Extraction; r:gives {:isMaterialAnatomicalEntityConnectedTo a owl:SymmetricProperty}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]
   [ a r:Extraction; r:gives {:MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#isMaterialAnatomicalEntityConnectedTo"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE2"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a owl:SymmetricProperty. var:x1 var:x0 var:x2} => {var:x2 var:x0 var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE2"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :MaterialAnatomicalEntity. var:x0 :isMaterialAnatomicalEntityConnectedTo var:x1} => {var:x0 :isMaterialAnatomicalEntityConnectedTo var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE2 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE2 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE2 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE2 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo ()];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE2"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE4 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE4 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE4 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE4 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE4"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo ()];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE4"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE5 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE5 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE5 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE5 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE5"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo ()];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE5"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE6 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE6 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE6 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE6 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE6"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo ()];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE6"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE8 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE8 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE8 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE8 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo ()];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE9 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE9 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE9 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE9 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo ()];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:component [ a r:Inference; r:gives {:MAE7 :hasNoCommonPart :MAE3}; r:evidence (
  [ a r:Inference; r:gives {:MAE7 :hasNoCommonPart :MAE3}; r:evidence (
   [ a r:Extraction; r:gives {:MAE7 :hasAnatomicalPartList (:MAE8 :MAE9)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Inference; r:gives {(:MAE8 :MAE9) :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
    [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:first :MAE8}]
    [ a r:Inference; r:gives {(:MAE8 :MAE9) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE7 :hasAnatomicalPartList (:MAE8 :MAE9)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE7"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE8 :MAE9)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
    [ a r:Extraction; r:gives {:MAE8 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
    [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
     [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
      [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
    [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) :hasNoAnatomicalPart :MAE8}; r:evidence (
     [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:first :MAE5}]
     [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
      [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Extraction; r:gives {:MAE5 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
     [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE8}; r:evidence (
      [ a r:Extraction; r:gives {:MAE8 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Extraction; r:gives {:MAE5 owl:differentFrom :MAE8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
     [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
     [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
      [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Inference; r:gives {(:MAE6 :MAE4) :hasNoAnatomicalPart :MAE8}; r:evidence (
      [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:first :MAE6}]
      [ a r:Inference; r:gives {(:MAE6 :MAE4) a rdf:List}; r:evidence (
       [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
       [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
        [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE6 :MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
      [ a r:Extraction; r:gives {:MAE6 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
      [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE8}; r:evidence (
       [ a r:Extraction; r:gives {:MAE8 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
      [ a r:Extraction; r:gives {:MAE6 owl:differentFrom :MAE8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
      [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:rest (:MAE4)}]
      [ a r:Inference; r:gives {(:MAE6 :MAE4) a rdf:List}; r:evidence (
       [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
       [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
        [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE6 :MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
      [ a r:Inference; r:gives {(:MAE4) :hasNoAnatomicalPart :MAE8}; r:evidence (
       [ a r:Fact; r:gives {(:MAE4) rdf:first :MAE4}]
       [ a r:Inference; r:gives {(:MAE4) a rdf:List}; r:evidence (
        [ a r:Fact; r:gives {(:MAE3 :MAE4) rdf:rest (:MAE4)}]
        [ a r:Inference; r:gives {(:MAE3 :MAE4) a rdf:List}; r:evidence (
         [ a r:Fact; r:gives {(:MAE2 :MAE3 :MAE4) rdf:rest (:MAE3 :MAE4)}]
         [ a r:Inference; r:gives {(:MAE2 :MAE3 :MAE4) a rdf:List}; r:evidence (
          [ a r:Extraction; r:gives {:MAE1 :hasAnatomicalPartList (:MAE2 :MAE3 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE3 :MAE4)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE3 :MAE4)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE4)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
       [ a r:Extraction; r:gives {:MAE4 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
       [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE8}; r:evidence (
        [ a r:Extraction; r:gives {:MAE8 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
       [ a r:Extraction; r:gives {:MAE4 owl:differentFrom :MAE8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
       [ a r:Fact; r:gives {(:MAE4) rdf:rest ()}]
       [ a r:Inference; r:gives {(:MAE4) a rdf:List}; r:evidence (
        [ a r:Fact; r:gives {(:MAE3 :MAE4) rdf:rest (:MAE4)}]
        [ a r:Inference; r:gives {(:MAE3 :MAE4) a rdf:List}; r:evidence (
         [ a r:Fact; r:gives {(:MAE2 :MAE3 :MAE4) rdf:rest (:MAE3 :MAE4)}]
         [ a r:Inference; r:gives {(:MAE2 :MAE3 :MAE4) a rdf:List}; r:evidence (
          [ a r:Extraction; r:gives {:MAE1 :hasAnatomicalPartList (:MAE2 :MAE3 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE3 :MAE4)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE3 :MAE4)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE4)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
       [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE8}; r:evidence (
        [ a r:Extraction; r:gives {:MAE8 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE4)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE4"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo ()];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPart var:x3. var:x1 owl:differentFrom var:x3. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPart var:x3} => {var:x0 :hasNoAnatomicalPart var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE6 :MAE4)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE6"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPart var:x3. var:x1 owl:differentFrom var:x3. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPart var:x3} => {var:x0 :hasNoAnatomicalPart var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE5"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:MAE6 :MAE4)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPart var:x3. var:x1 owl:differentFrom var:x3. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPart var:x3} => {var:x0 :hasNoAnatomicalPart var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
    [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:rest (:MAE9)}]
    [ a r:Inference; r:gives {(:MAE8 :MAE9) a rdf:List}; r:evidence (
     [ a r:Extraction; r:gives {:MAE7 :hasAnatomicalPartList (:MAE8 :MAE9)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE7"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE8 :MAE9)];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
    [ a r:Inference; r:gives {(:MAE9) :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
     [ a r:Fact; r:gives {(:MAE9) rdf:first :MAE9}]
     [ a r:Inference; r:gives {(:MAE9) a rdf:List}; r:evidence (
      [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:rest (:MAE9)}]
      [ a r:Inference; r:gives {(:MAE8 :MAE9) a rdf:List}; r:evidence (
       [ a r:Extraction; r:gives {:MAE7 :hasAnatomicalPartList (:MAE8 :MAE9)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE7"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE8 :MAE9)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE8 :MAE9)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE9)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Extraction; r:gives {:MAE9 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
     [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
      [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
       [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) :hasNoAnatomicalPart :MAE9}; r:evidence (
      [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:first :MAE5}]
      [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
       [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
      [ a r:Extraction; r:gives {:MAE5 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
      [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE9}; r:evidence (
       [ a r:Extraction; r:gives {:MAE9 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
      [ a r:Extraction; r:gives {:MAE5 owl:differentFrom :MAE9}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
      [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
      [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
       [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
      [ a r:Inference; r:gives {(:MAE6 :MAE4) :hasNoAnatomicalPart :MAE9}; r:evidence (
       [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:first :MAE6}]
       [ a r:Inference; r:gives {(:MAE6 :MAE4) a rdf:List}; r:evidence (
        [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
        [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE6 :MAE4)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
       [ a r:Extraction; r:gives {:MAE6 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
       [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE9}; r:evidence (
        [ a r:Extraction; r:gives {:MAE9 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
       [ a r:Extraction; r:gives {:MAE6 owl:differentFrom :MAE9}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
       [ a r:Fact; r:gives {(:MAE6 :MAE4) rdf:rest (:MAE4)}]
       [ a r:Inference; r:gives {(:MAE6 :MAE4) a rdf:List}; r:evidence (
        [ a r:Fact; r:gives {(:MAE5 :MAE6 :MAE4) rdf:rest (:MAE6 :MAE4)}]
        [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
         [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE6 :MAE4)];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
       [ a r:Inference; r:gives {(:MAE4) :hasNoAnatomicalPart :MAE9}; r:evidence (
        [ a r:Fact; r:gives {(:MAE4) rdf:first :MAE4}]
        [ a r:Inference; r:gives {(:MAE4) a rdf:List}; r:evidence (
         [ a r:Fact; r:gives {(:MAE3 :MAE4) rdf:rest (:MAE4)}]
         [ a r:Inference; r:gives {(:MAE3 :MAE4) a rdf:List}; r:evidence (
          [ a r:Fact; r:gives {(:MAE2 :MAE3 :MAE4) rdf:rest (:MAE3 :MAE4)}]
          [ a r:Inference; r:gives {(:MAE2 :MAE3 :MAE4) a rdf:List}; r:evidence (
           [ a r:Extraction; r:gives {:MAE1 :hasAnatomicalPartList (:MAE2 :MAE3 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE3 :MAE4)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE3 :MAE4)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE4)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
        [ a r:Extraction; r:gives {:MAE4 :hasAnatomicalPartList ()}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
        [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE9}; r:evidence (
         [ a r:Extraction; r:gives {:MAE9 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
        [ a r:Extraction; r:gives {:MAE4 owl:differentFrom :MAE9}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
        [ a r:Fact; r:gives {(:MAE4) rdf:rest ()}]
        [ a r:Inference; r:gives {(:MAE4) a rdf:List}; r:evidence (
         [ a r:Fact; r:gives {(:MAE3 :MAE4) rdf:rest (:MAE4)}]
         [ a r:Inference; r:gives {(:MAE3 :MAE4) a rdf:List}; r:evidence (
          [ a r:Fact; r:gives {(:MAE2 :MAE3 :MAE4) rdf:rest (:MAE3 :MAE4)}]
          [ a r:Inference; r:gives {(:MAE2 :MAE3 :MAE4) a rdf:List}; r:evidence (
           [ a r:Extraction; r:gives {:MAE1 :hasAnatomicalPartList (:MAE2 :MAE3 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
           r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE1"]];
           r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
           r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
          r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE2 :MAE3 :MAE4)];
          r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE3 :MAE4)];
          r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE3 :MAE4)];
         r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE4)];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
        [ a r:Inference; r:gives {() :hasNoAnatomicalPart :MAE9}; r:evidence (
         [ a r:Extraction; r:gives {:MAE9 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
         r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
         r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :MaterialAnatomicalEntity} => {() :hasNoAnatomicalPart var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
        r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE4)];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE4"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
        r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo ()];
        r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPart var:x3. var:x1 owl:differentFrom var:x3. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPart var:x3} => {var:x0 :hasNoAnatomicalPart var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE6 :MAE4)];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE6"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPart var:x3. var:x1 owl:differentFrom var:x3. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPart var:x3} => {var:x0 :hasNoAnatomicalPart var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE5"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:MAE6 :MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPart var:x3. var:x1 owl:differentFrom var:x3. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPart var:x3} => {var:x0 :hasNoAnatomicalPart var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Fact; r:gives {(:MAE9) rdf:rest ()}]
     [ a r:Inference; r:gives {(:MAE9) a rdf:List}; r:evidence (
      [ a r:Fact; r:gives {(:MAE8 :MAE9) rdf:rest (:MAE9)}]
      [ a r:Inference; r:gives {(:MAE8 :MAE9) a rdf:List}; r:evidence (
       [ a r:Extraction; r:gives {:MAE7 :hasAnatomicalPartList (:MAE8 :MAE9)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE7"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE8 :MAE9)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE8 :MAE9)];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE9)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 rdf:rest var:x1. var:x0 a rdf:List} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
     [ a r:Inference; r:gives {() :hasNoAnatomicalPartInList (:MAE5 :MAE6 :MAE4)}; r:evidence (
      [ a r:Inference; r:gives {(:MAE5 :MAE6 :MAE4) a rdf:List}; r:evidence (
       [ a r:Extraction; r:gives {:MAE3 :hasAnatomicalPartList (:MAE5 :MAE6 :MAE4)}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
       r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
       r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
       r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :hasAnatomicalPartList var:x1} => {var:x1 a rdf:List}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a rdf:List} => {() :hasNoAnatomicalPartInList var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE9)];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE9"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo ()];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPartInList var:x3. var:x3 :hasNoAnatomicalPart var:x1. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPartInList var:x3} => {var:x0 :hasNoAnatomicalPartInList var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo (:MAE8 :MAE9)];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE8"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (:MAE9)];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 rdf:first var:x1. var:x0 a rdf:List. var:x1 :hasAnatomicalPartList var:x2. var:x2 :hasNoAnatomicalPartInList var:x3. var:x3 :hasNoAnatomicalPart var:x1. var:x0 rdf:rest var:x4. var:x0 a rdf:List. var:x4 :hasNoAnatomicalPartInList var:x3} => {var:x0 :hasNoAnatomicalPartInList var:x3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]
   [ a r:Extraction; r:gives {:MAE7 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]
   [ a r:Extraction; r:gives {:MAE3 a :MaterialAnatomicalEntity}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-facts.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE7"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo (:MAE8 :MAE9)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:MAE5 :MAE6 :MAE4)];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {var:x0 :hasAnatomicalPartList var:x1. var:x2 :hasAnatomicalPartList var:x3. var:x1 :hasNoAnatomicalPartInList var:x3. var:x0 a :MaterialAnatomicalEntity. var:x2 a :MaterialAnatomicalEntity} => {var:x0 :hasNoCommonPart var:x2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-rules.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://idm.univ-rennes1.fr/~obierlai/anatomy#MAE7"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :hasNoCommonPart :MAE3} => {var:x0 :hasNoCommonPart :MAE3}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/anatomy-filter.n3>]]];

 r:gives {
  :MAE1 :isMaterialAnatomicalEntityConnectedTo :MAE2.
  :MAE2 :isMaterialAnatomicalEntityConnectedTo :MAE1.
  :MAE2 :hasNoCommonPart :MAE3.
  :MAE4 :hasNoCommonPart :MAE3.
  :MAE5 :hasNoCommonPart :MAE3.
  :MAE6 :hasNoCommonPart :MAE3.
  :MAE8 :hasNoCommonPart :MAE3.
  :MAE9 :hasNoCommonPart :MAE3.
  :MAE7 :hasNoCommonPart :MAE3.
 }].

#ENDS 2564 msec
#Trunk : 438/4387 = 9.984043765671302 %
#Branch: 1/417 = 0.2398081534772182 %

#medic.......
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix fl: <http://eulersharp.sourceforge.net/2003/03swap/fl-rules#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2006/02swap/med#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:Joe :isPrescribed :aspirinLowDose}; r:evidence (
  [ a r:Inference; r:gives {:Joe :isPrescribed :aspirinLowDose}; r:evidence (
   [ a r:Extraction; r:gives {:aspirinLowDose :prescribedFor :AcuteMyocardialInfarction}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>]]
   [ a r:Extraction; r:gives {(:Joe :AcuteMyocardialInfarction) fl:mu 0.9}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>]]
   [ a r:Fact; r:gives {0.9 math:greaterThan 0.7}]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk0 {:aspirinLowDose :excludedFor _:sk0} (:ActivePepticUlcerDisease :AllergyForAspirin))}]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk0 {:aspirinLowDose :excludedFor _:sk0. (:Joe _:sk0) fl:mu _:sk1. _:sk1 math:notGreaterThan 0.01} (:ActivePepticUlcerDisease :AllergyForAspirin))}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#aspirinLowDose"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#AcuteMyocardialInfarction"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Joe"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 0.9];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk0"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo (:ActivePepticUlcerDisease :AllergyForAspirin)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk1"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7. {var:x0 :prescribedFor var:x1. (var:x2 var:x1) fl:mu var:x3. var:x3 math:greaterThan 0.7. (var:x4 1) e:findall (var:x5 {var:x0 :excludedFor var:x5} var:x6). (var:x4 1) e:findall (var:x5 {var:x0 :excludedFor var:x5. (var:x2 var:x5) fl:mu var:x7. var:x7 math:notGreaterThan 0.01} var:x6)} => {var:x2 :isPrescribed var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Joe"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#aspirinLowDose"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :isPrescribed var:x1} => {var:x0 :isPrescribed var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medicF.n3>]]];

 r:component [ a r:Inference; r:gives {:Joe :isPrescribed :betaBlocker}; r:evidence (
  [ a r:Inference; r:gives {:Joe :isPrescribed :betaBlocker}; r:evidence (
   [ a r:Extraction; r:gives {:betaBlocker :prescribedFor :AcuteMyocardialInfarction}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>]]
   [ a r:Extraction; r:gives {(:Joe :AcuteMyocardialInfarction) fl:mu 0.9}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>]]
   [ a r:Fact; r:gives {0.9 math:greaterThan 0.7}]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk0 {:betaBlocker :excludedFor _:sk0} (:SevereAsthma :ChronicObstructivePumonaryDisease))}]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>) 1) e:findall (_:sk0 {:betaBlocker :excludedFor _:sk0. (:Joe _:sk0) fl:mu _:sk1. _:sk1 math:notGreaterThan 0.01} (:SevereAsthma :ChronicObstructivePumonaryDisease))}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#betaBlocker"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#AcuteMyocardialInfarction"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Joe"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo 0.9];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo (<http://eulersharp.sourceforge.net/2003/03swap/medic.n3>)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk0"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo (:SevereAsthma :ChronicObstructivePumonaryDisease)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk1"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7. {var:x0 :prescribedFor var:x1. (var:x2 var:x1) fl:mu var:x3. var:x3 math:greaterThan 0.7. (var:x4 1) e:findall (var:x5 {var:x0 :excludedFor var:x5} var:x6). (var:x4 1) e:findall (var:x5 {var:x0 :excludedFor var:x5. (var:x2 var:x5) fl:mu var:x7. var:x7 math:notGreaterThan 0.01} var:x6)} => {var:x2 :isPrescribed var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medic.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Joe"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/med#betaBlocker"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :isPrescribed var:x1} => {var:x0 :isPrescribed var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/medicF.n3>]]];

 r:gives {
  :Joe :isPrescribed :aspirinLowDose.
  :Joe :isPrescribed :betaBlocker.
 }].

#ENDS 293 msec
#Trunk : 8/12 = 66.66666666666666 %
#Branch: 1/5 = 20.0 %

#metastatic..
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2004/04test/metastatic#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {({:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:evidence (
  [ a r:Extraction; r:gives {({:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.2];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.2}; r:evidence (
  [ a r:Extraction; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.2];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:evidence (
  [ a r:Extraction; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.2];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.05}; r:evidence (
  [ a r:Extraction; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.05}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.05];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F}) e:conditional 0.05}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F}) e:conditional 0.05}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.05];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.6}; r:evidence (
  [ a r:Extraction; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP001.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.6];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {:test :answer 0.09727626459143966}; r:evidence (
  [ a r:Fact; r:gives {({:MetastaticCancer e:boolean e:T} {:Coma e:boolean e:F} {:HeadAche e:boolean e:T}) e:biconditional 0.09727626459143966}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 0.09727626459143966];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {({:MetastaticCancer e:boolean e:T} {:Coma e:boolean e:F} {:HeadAche e:boolean e:T}) e:biconditional var:x0} => {:test :answer var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticQ001.n3>]]];

 r:gives {
  ({:MetastaticCancer e:boolean e:T}) e:conditional 0.2.
  ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.8.
  ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.2.
  ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.2.
  ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.05.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.8.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T}) e:conditional 0.8.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F}) e:conditional 0.05.
  ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8.
  ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.6.
  :test :answer 0.09727626459143966.
 }].

#ENDS 184 msec
#Trunk : 47/81 = 58.0246913580247 %
#Branch: 1/2 = 50.0 %

#metastatic2.
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2004/04test/metastatic#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {({:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:evidence (
  [ a r:Extraction; r:gives {({:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.2];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.2}; r:evidence (
  [ a r:Extraction; r:gives {({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.2];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:evidence (
  [ a r:Extraction; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.2}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.2];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.05}; r:evidence (
  [ a r:Extraction; r:gives {({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.05}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.05];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F}) e:conditional 0.05}; r:evidence (
  [ a r:Extraction; r:gives {({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F}) e:conditional 0.05}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.05];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:evidence (
  [ a r:Extraction; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.8];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.6}; r:evidence (
  [ a r:Extraction; r:gives {({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.6}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.6];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:component [ a r:Inference; r:gives {:test :answer 0.09727626459143966}; r:evidence (
  [ a r:Fact; r:gives {({:MetastaticCancer e:boolean e:T} {:Coma e:boolean e:F} {:HeadAche e:boolean e:T}) e:biconditional 0.09727626459143966}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 0.09727626459143966];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {({:MetastaticCancer e:boolean e:T} {:Coma e:boolean e:F} {:HeadAche e:boolean e:T}) e:biconditional var:x0} => {:test :answer var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticQ001.n3>]]];

 r:component [ a r:Inference; r:gives {({:MetastaticCancer e:boolean e:T}) e:conditional 0.058823529411764705}; r:evidence (
  [ a r:Inference; r:gives {({:MetastaticCancer e:boolean e:T}) e:conditional 0.058823529411764705}; r:evidence (
   [ a r:Fact; r:gives {({:MetastaticCancer e:boolean e:T} {:SerumCalcium e:boolean e:F}) e:biconditional 0.058823529411764705}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 0.058823529411764705];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0. {({:MetastaticCancer e:boolean e:T} {:SerumCalcium e:boolean e:F}) e:biconditional var:x0} => {({:MetastaticCancer e:boolean e:T}) e:conditional var:x0}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/metastaticP002.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ({:MetastaticCancer e:boolean e:T})];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo 0.058823529411764705];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:conditional var:x1} => {var:x0 e:conditional var:x1}}; r:because [ a r:Parsing; r:source <>]]];

 r:gives {
  ({:MetastaticCancer e:boolean e:T}) e:conditional 0.2.
  ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.8.
  ({:SerumCalcium e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.2.
  ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:T}) e:conditional 0.2.
  ({:BrainTumor e:boolean e:T} {:MetastaticCancer e:boolean e:F}) e:conditional 0.05.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.8.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:T}) e:conditional 0.8.
  ({:Coma e:boolean e:T} {:SerumCalcium e:boolean e:F} {:BrainTumor e:boolean e:F}) e:conditional 0.05.
  ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:T}) e:conditional 0.8.
  ({:HeadAche e:boolean e:T} {:BrainTumor e:boolean e:F}) e:conditional 0.6.
  :test :answer 0.09727626459143966.
  ({:MetastaticCancer e:boolean e:T}) e:conditional 0.058823529411764705.
 }].

#ENDS 181 msec
#Trunk : 50/86 = 58.139534883720934 %
#Branch: 1/3 = 33.33333333333333 %

#witch.......
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://www.w3.org/2000/10/swap/test/reason/witch#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:GIRL a :WITCH}; r:evidence (
  [ a r:Inference; r:gives {:GIRL a :WITCH}; r:evidence (
   [ a r:Inference; r:gives {:GIRL a :BURNS}; r:evidence (
    [ a r:Inference; r:gives {:GIRL a :ISMADEOFWOOD}; r:evidence (
     [ a r:Inference; r:gives {:GIRL a :FLOATS}; r:evidence (
      [ a r:Extraction; r:gives {:DUCK a :FLOATS}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]
      [ a r:Extraction; r:gives {:DUCK :SAMEWEIGHT :GIRL}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]);
      r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/reason/witch#DUCK"]];
      r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/reason/witch#GIRL"]];
      r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :FLOATS. var:x0 :SAMEWEIGHT var:x1} => {var:x1 a :FLOATS}}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/reason/witch#GIRL"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :FLOATS} => {var:x0 a :ISMADEOFWOOD}}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/reason/witch#GIRL"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :ISMADEOFWOOD} => {var:x0 a :BURNS}}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]]
   [ a r:Extraction; r:gives {:GIRL a :WOMAN}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/reason/witch#GIRL"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :BURNS. var:x0 a :WOMAN} => {var:x0 a :WITCH}}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch.n3>]]]);
  r:rule [ a r:Extraction; r:gives {{:GIRL a :WITCH} => {:GIRL a :WITCH}}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/reason/witch-goal.n3>]]];

 r:gives {
  :GIRL a :WITCH.
 }].

#ENDS 126 msec
#Trunk : 10/35 = 28.57142857142857 %
#Branch: 1/8 = 12.5 %

#einstein....
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2005/11swap/einstein#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:german :eats :fish}; r:evidence (
  [ a r:Inference; r:gives {:german :eats :fish}; r:evidence (
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) log:equalTo ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) e:pair ((:blue :dane :horse :tea :blends) (:yellow :norwegian :cats :water :dunhill))}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) e:pair ((:blue :dane :horse :tea :blends) (:yellow :norwegian :cats :water :dunhill))}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) e:sublist ((:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) e:pair ((:blue :dane :horse :tea :blends) (:yellow :norwegian :cats :water :dunhill))}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:red :brit :birds :milk :pallmall)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:white :swede :dogs :beer :bluemasters)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:blue :dane :horse :tea :blends)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:red :brit :birds :milk :pallmall)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:yellow :norwegian :cats :water :dunhill)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:white :swede :dogs :beer :bluemasters)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:green :german :fish :coffee :prince)}]
   [ a r:Fact; r:gives {((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters)) list:member (:green :german :fish :coffee :prince)}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ((:yellow :norwegian :cats :water :dunhill) (:blue :dane :horse :tea :blends) (:red :brit :birds :milk :pallmall) (:green :german :fish :coffee :prince) (:white :swede :dogs :beer :bluemasters))];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#yellow"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#cats"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#water"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dunhill"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x5"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dane"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x6"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#horse"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x7"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#tea"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x8"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blends"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x9"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#red"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x10"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#brit"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x11"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#birds"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x12"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#pallmall"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x13"]; r:boundTo (:green :german :fish :coffee :prince)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x14"]; r:boundTo (:white :swede :dogs :beer :bluemasters)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x15"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blue"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x16"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dane"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x17"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#horse"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x18"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#tea"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x19"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#yellow"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x20"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#norwegian"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x21"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#water"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x22"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dunhill"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x23"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blue"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x24"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dane"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x25"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#tea"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x26"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blends"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x27"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#yellow"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x28"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#norwegian"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x29"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#cats"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x30"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#water"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x31"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#german"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x32"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#fish"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x33"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#prince"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x34"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#swede"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x35"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dogs"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x36"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#beer"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x37"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#bluemasters"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x38"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blue"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x39"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dane"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x40"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#horse"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x41"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#tea"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x42"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#yellow"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x43"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#norwegian"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x44"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#cats"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x45"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dunhill"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x46"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#birds"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x47"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#milk"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x48"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#pallmall"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x49"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#white"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x50"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#beer"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x51"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#bluemasters"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x52"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blue"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x53"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#horse"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x54"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#blends"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x55"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#red"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x56"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#brit"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x57"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#milk"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x58"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#norwegian"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x59"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#cats"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x60"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#water"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x61"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#white"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x62"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#swede"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x63"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#dogs"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x64"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#green"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x65"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#fish"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x66"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#coffee"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x67"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#green"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x68"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#german"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x69"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#coffee"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x70"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#prince"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4, var:x5, var:x6, var:x7, var:x8, var:x9, var:x10, var:x11, var:x12, var:x13, var:x14, var:x15, var:x16, var:x17, var:x18, var:x19, var:x20, var:x21, var:x22, var:x23, var:x24, var:x25, var:x26, var:x27, var:x28, var:x29, var:x30, var:x31, var:x32, var:x33, var:x34, var:x35, var:x36, var:x37, var:x38, var:x39, var:x40, var:x41, var:x42, var:x43, var:x44, var:x45, var:x46, var:x47, var:x48, var:x49, var:x50, var:x51, var:x52, var:x53, var:x54, var:x55, var:x56, var:x57, var:x58, var:x59, var:x60, var:x61, var:x62, var:x63, var:x64, var:x65, var:x66, var:x67, var:x68, var:x69, var:x70. {var:x0 log:equalTo ((var:x1 :norwegian var:x2 var:x3 var:x4) (:blue var:x5 var:x6 var:x7 var:x8) (var:x9 var:x10 var:x11 :milk var:x12) var:x13 var:x14). var:x0 e:pair ((var:x15 var:x16 var:x17 var:x18 :blends) (var:x19 var:x20 :cats var:x21 var:x22)). var:x0 e:pair ((var:x23 var:x24 :horse var:x25 var:x26) (var:x27 var:x28 var:x29 var:x30 :dunhill)). var:x0 e:sublist ((:green var:x31 var:x32 :coffee var:x33) (:white var:x34 var:x35 var:x36 var:x37)). var:x0 e:pair ((var:x38 var:x39 var:x40 var:x41 :blends) (var:x42 var:x43 var:x44 :water var:x45)). var:x0 list:member (:red :brit var:x46 var:x47 var:x48). var:x0 list:member (var:x49 :swede :dogs var:x50 var:x51). var:x0 list:member (var:x52 :dane var:x53 :tea var:x54). var:x0 list:member (var:x55 var:x56 :birds var:x57 :pallmall). var:x0 list:member (:yellow var:x58 var:x59 var:x60 :dunhill). var:x0 list:member (var:x61 var:x62 var:x63 :beer :bluemasters). var:x0 list:member (var:x64 :german var:x65 var:x66 :prince). var:x0 list:member (var:x67 var:x68 :fish var:x69 var:x70)} => {var:x68 :eats :fish}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/einstein.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2005/11swap/einstein#german"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 :eats :fish} => {var:x0 :eats :fish}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/einsteinQ.n3>]]];

 r:gives {
  :german :eats :fish.
 }].

#ENDS 1227 msec
#Trunk : 5/9 = 55.55555555555556 %
#Branch: 1/3 = 33.33333333333333 %

#xanthippe...
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2004/04test/xanthippe#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {:Xanthippe a :MortalWoman}; r:evidence (
  [ a r:Inference; r:gives {:Xanthippe a :MortalWoman}; r:evidence (
   [ a r:Extraction; r:gives {:he :says {:Socrates a :Man. :Xanthippe a :Woman}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/xanthippe.n3>]]
   [ a r:Fact; r:gives {{:Socrates a :Man. :Xanthippe a :Woman} log:includes {:Xanthippe a :Woman}}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/xanthippe#he"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo {:Socrates a :Man. :Xanthippe a :Woman}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/xanthippe#Xanthippe"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 :says var:x1. var:x1 log:includes {var:x2 a :Woman}} => {var:x2 a :MortalWoman}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/xanthippe.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/xanthippe#Xanthippe"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2004/04test/xanthippe#MortalWoman"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/xanthippeQ.n3>]]];

 r:gives {
  :Xanthippe a :MortalWoman.
 }].

#ENDS 106 msec
#Trunk : 5/9 = 55.55555555555556 %
#Branch: 1/3 = 33.33333333333333 %

#bi..........
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix nsp0: <http://eulersharp.sourceforge.net/2003/03swap/>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rpo: <http://eulersharp.sourceforge.net/2003/03swap/rpo-rules#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix galen: <http://www.co-ode.org/ontologies/galen#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix : <http://eulersharp.sourceforge.net/2007/07test#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix var: <http://localhost/var#>.
@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix med: <http://eulersharp.sourceforge.net/2006/02swap/med#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {{({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}} => {:egd1 :result true}}]
   [ a r:Inference; r:gives {:egd1 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}}]);
    r:rule [ a r:Extraction; r:gives {{({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}} => {:egd1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egd1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(true {:d :e :f}) e:graphDifference true} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(true {:d :e :f}) e:graphDifference true} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(true {:d :e :f}) e:graphDifference true} => {:egd2 :result true}}]
   [ a r:Inference; r:gives {:egd2 :result true}; r:evidence (
    [ a r:Fact; r:gives {(true {:d :e :f}) e:graphDifference true}]);
    r:rule [ a r:Extraction; r:gives {{(true {:d :e :f}) e:graphDifference true} => {:egd2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:d :e :f}) e:graphDifference true}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egd2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:d :e :f}) e:graphDifference true}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} => {:egd3 :result true}}]
   [ a r:Inference; r:gives {:egd3 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}}]);
    r:rule [ a r:Extraction; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} => {:egd3 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egd3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true} => {:egd5 :result true}}]
   [ a r:Inference; r:gives {:egd5 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true}]);
    r:rule [ a r:Extraction; r:gives {{({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true} => {:egd5 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egd5"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(true) e:graphIntersection true} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(true) e:graphIntersection true} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(true) e:graphIntersection true} => {:egi1 :result true}}]
   [ a r:Inference; r:gives {:egi1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(true) e:graphIntersection true}]);
    r:rule [ a r:Extraction; r:gives {{(true) e:graphIntersection true} => {:egi1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true) e:graphIntersection true}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egi1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true) e:graphIntersection true}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(true {:d :e :f}) e:graphIntersection true} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(true {:d :e :f}) e:graphIntersection true} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(true {:d :e :f}) e:graphIntersection true} => {:egi2 :result true}}]
   [ a r:Inference; r:gives {:egi2 :result true}; r:evidence (
    [ a r:Fact; r:gives {(true {:d :e :f}) e:graphIntersection true}]);
    r:rule [ a r:Extraction; r:gives {{(true {:d :e :f}) e:graphIntersection true} => {:egi2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:d :e :f}) e:graphIntersection true}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egi2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:d :e :f}) e:graphIntersection true}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true} => {:egi3 :result true}}]
   [ a r:Inference; r:gives {:egi3 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true}]);
    r:rule [ a r:Extraction; r:gives {{({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true} => {:egi3 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egi3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} => {:egi4 :result true}}]
   [ a r:Inference; r:gives {:egi4 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}}]);
    r:rule [ a r:Extraction; r:gives {{({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} => {:egi4 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egi4"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} => {:el1 :result true}}]
   [ a r:Inference; r:gives {:el1 :result true}; r:evidence (
    [ a r:Fact; r:gives {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6}]);
    r:rule [ a r:Extraction; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} => {:el1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#el1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(8 5 6 7 9 4) e:max 9} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(8 5 6 7 9 4) e:max 9} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(8 5 6 7 9 4) e:max 9} => {:em1 :result true}}]
   [ a r:Inference; r:gives {:em1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(8 5 6 7 9 4) e:max 9}]);
    r:rule [ a r:Extraction; r:gives {{(8 5 6 7 9 4) e:max 9} => {:em1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(8 5 6 7 9 4) e:max 9}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#em1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(8 5 6 7 9 4) e:max 9}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(8 5 6 7 9 4) e:min 4} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(8 5 6 7 9 4) e:min 4} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(8 5 6 7 9 4) e:min 4} => {:em2 :result true}}]
   [ a r:Inference; r:gives {:em2 :result true}; r:evidence (
    [ a r:Fact; r:gives {(8 5 6 7 9 4) e:min 4}]);
    r:rule [ a r:Extraction; r:gives {{(8 5 6 7 9 4) e:min 4} => {:em2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(8 5 6 7 9 4) e:min 4}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#em2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(8 5 6 7 9 4) e:min 4}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} => {:er1 :result true}}]
   [ a r:Inference; r:gives {:er1 :result true}; r:evidence (
    [ a r:Fact; r:gives {((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))}]);
    r:rule [ a r:Extraction; r:gives {{((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} => {:er1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#er1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} => {:es1 :result true}}]
   [ a r:Inference; r:gives {:es1 :result true}; r:evidence (
    [ a r:Fact; r:gives {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))}]);
    r:rule [ a r:Extraction; r:gives {{((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} => {:es1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#es1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} => {:ew1 :result true}}]
   [ a r:Inference; r:gives {:ew1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"}]);
    r:rule [ a r:Extraction; r:gives {{"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} => {:ew1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#ew1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"Hello World!" e:wwwFormEncode "Hello%20World%21"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"Hello World!" e:wwwFormEncode "Hello%20World%21"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"Hello World!" e:wwwFormEncode "Hello%20World%21"} => {:ew2 :result true}}]
   [ a r:Inference; r:gives {:ew2 :result true}; r:evidence (
    [ a r:Fact; r:gives {"Hello World!" e:wwwFormEncode "Hello%20World%21"}]);
    r:rule [ a r:Extraction; r:gives {{"Hello World!" e:wwwFormEncode "Hello%20World%21"} => {:ew2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"Hello World!" e:wwwFormEncode "Hello%20World%21"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#ew2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"Hello World!" e:wwwFormEncode "Hello%20World%21"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"} => {:fnr1 :result true}}]
   [ a r:Inference; r:gives {:fnr1 :result true}; r:evidence (
    [ a r:Fact; r:gives {("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"}]);
    r:rule [ a r:Extraction; r:gives {{("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"} => {:fnr1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#fnr1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("2006-12-14" 5 2) fn:substring "12"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("2006-12-14" 5 2) fn:substring "12"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("2006-12-14" 5 2) fn:substring "12"} => {:fns1 :result true}}]
   [ a r:Inference; r:gives {:fns1 :result true}; r:evidence (
    [ a r:Fact; r:gives {("2006-12-14" 5 2) fn:substring "12"}]);
    r:rule [ a r:Extraction; r:gives {{("2006-12-14" 5 2) fn:substring "12"} => {:fns1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("2006-12-14" 5 2) fn:substring "12"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#fns1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("2006-12-14" 5 2) fn:substring "12"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"} => {:fnsa1 :result true}}]
   [ a r:Inference; r:gives {:fnsa1 :result true}; r:evidence (
    [ a r:Fact; r:gives {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"}]);
    r:rule [ a r:Extraction; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"} => {:fnsa1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#fnsa1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"} => {:fnsb1 :result true}}]
   [ a r:Inference; r:gives {:fnsb1 :result true}; r:evidence (
    [ a r:Fact; r:gives {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"}]);
    r:rule [ a r:Extraction; r:gives {{("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"} => {:fnsb1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#fnsb1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} => {:lista1 :result true}}]
   [ a r:Inference; r:gives {:lista1 :result true}; r:evidence (
    [ a r:Fact; r:gives {((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)}]);
    r:rule [ a r:Extraction; r:gives {{((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} => {:lista1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#lista1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(:a :b :c) list:first :a} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(:a :b :c) list:first :a} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(:a :b :c) list:first :a} => {:listf1 :result true}}]
   [ a r:Inference; r:gives {:listf1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(:a :b :c) list:first :a}]);
    r:rule [ a r:Extraction; r:gives {{(:a :b :c) list:first :a} => {:listf1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c) list:first :a}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#listf1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c) list:first :a}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:c list:in (:a :b :c)} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{:c list:in (:a :b :c)} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{:c list:in (:a :b :c)} => {:listi1 :result true}}]
   [ a r:Inference; r:gives {:listi1 :result true}; r:evidence (
    [ a r:Fact; r:gives {:c list:in (:a :b :c)}]);
    r:rule [ a r:Extraction; r:gives {{:c list:in (:a :b :c)} => {:listi1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:c list:in (:a :b :c)}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#listi1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:c list:in (:a :b :c)}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(:a :b :c) list:last :c} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(:a :b :c) list:last :c} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(:a :b :c) list:last :c} => {:listl1 :result true}}]
   [ a r:Inference; r:gives {:listl1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(:a :b :c) list:last :c}]);
    r:rule [ a r:Extraction; r:gives {{(:a :b :c) list:last :c} => {:listl1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c) list:last :c}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#listl1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c) list:last :c}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(:a :b :c :d) list:member :b} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(:a :b :c :d) list:member :b} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(:a :b :c :d) list:member :b} => {:listm1 :result true}}]
   [ a r:Inference; r:gives {:listm1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(:a :b :c :d) list:member :b}]);
    r:rule [ a r:Extraction; r:gives {{(:a :b :c :d) list:member :b} => {:listm1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c :d) list:member :b}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#listm1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c :d) list:member :b}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(:a :b :c) list:rest (:b :c)} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(:a :b :c) list:rest (:b :c)} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(:a :b :c) list:rest (:b :c)} => {:listr1 :result true}}]
   [ a r:Inference; r:gives {:listr1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(:a :b :c) list:rest (:b :c)}]);
    r:rule [ a r:Extraction; r:gives {{(:a :b :c) list:rest (:b :c)} => {:listr1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c) list:rest (:b :c)}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#listr1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a :b :c) list:rest (:b :c)}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(true) log:conjunction true} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(true) log:conjunction true} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(true) log:conjunction true} => {:logc1 :result true}}]
   [ a r:Inference; r:gives {:logc1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(true) log:conjunction true}]);
    r:rule [ a r:Extraction; r:gives {{(true) log:conjunction true} => {:logc1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true) log:conjunction true}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logc1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true) log:conjunction true}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}} => {:logc2 :result true}}]
   [ a r:Inference; r:gives {:logc2 :result true}; r:evidence (
    [ a r:Fact; r:gives {(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}}]);
    r:rule [ a r:Extraction; r:gives {{(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}} => {:logc2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logc2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} => {:logc3 :result true}}]
   [ a r:Inference; r:gives {:logc3 :result true}; r:evidence (
    [ a r:Fact; r:gives {(true {:u :v :w} true true) log:conjunction {:u :v :w}}]);
    r:rule [ a r:Extraction; r:gives {{(true {:u :v :w} true true) log:conjunction {:u :v :w}} => {:logc3 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:u :v :w} true true) log:conjunction {:u :v :w}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logc3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(true {:u :v :w} true true) log:conjunction {:u :v :w}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:a log:notEqualTo :b} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{:a log:notEqualTo :b} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{:a log:notEqualTo :b} => {:logne1 :result true}}]
   [ a r:Inference; r:gives {:logne1 :result true}; r:evidence (
    [ a r:Fact; r:gives {:a log:notEqualTo :b}]);
    r:rule [ a r:Extraction; r:gives {{:a log:notEqualTo :b} => {:logne1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:a log:notEqualTo :b}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logne1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:a log:notEqualTo :b}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}} => {:logni1 :result true}}]
   [ a r:Inference; r:gives {:logni1 :result true}; r:evidence (
    [ a r:Fact; r:gives {{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}}]);
    r:rule [ a r:Extraction; r:gives {{{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}} => {:logni1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logni1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} => {:logu1 :result true}}]
   [ a r:Inference; r:gives {:logu1 :result true}; r:evidence (
    [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"}]);
    r:rule [ a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} => {:logu1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logu1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} => {:logu2 :result true}}]
   [ a r:Inference; r:gives {:logu2 :result true}; r:evidence (
    [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"}]);
    r:rule [ a r:Extraction; r:gives {{<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} => {:logu2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logu2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(1 1) math:difference 0} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(1 1) math:difference 0} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(1 1) math:difference 0} => {:mathd1 :result true}}]
   [ a r:Inference; r:gives {:mathd1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(1 1) math:difference 0}]);
    r:rule [ a r:Extraction; r:gives {{(1 1) math:difference 0} => {:mathd1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(1 1) math:difference 0}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#mathd1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(1 1) math:difference 0}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9} => {:mathd2 :result true}}]
   [ a r:Inference; r:gives {:mathd2 :result true}; r:evidence (
    [ a r:Fact; r:gives {("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9}]);
    r:rule [ a r:Extraction; r:gives {{("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9} => {:mathd2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#mathd2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{2 math:greaterThan 1} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{2 math:greaterThan 1} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{2 math:greaterThan 1} => {:mathg1 :result true}}]
   [ a r:Inference; r:gives {:mathg1 :result true}; r:evidence (
    [ a r:Fact; r:gives {2 math:greaterThan 1}]);
    r:rule [ a r:Extraction; r:gives {{2 math:greaterThan 1} => {:mathg1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {2 math:greaterThan 1}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#mathg1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {2 math:greaterThan 1}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"02" math:greaterThan "1"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"02" math:greaterThan "1"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"02" math:greaterThan "1"} => {:mathg2 :result true}}]
   [ a r:Inference; r:gives {:mathg2 :result true}; r:evidence (
    [ a r:Fact; r:gives {"02" math:greaterThan "1"}]);
    r:rule [ a r:Extraction; r:gives {{"02" math:greaterThan "1"} => {:mathg2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"02" math:greaterThan "1"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#mathg2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"02" math:greaterThan "1"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{7 math:notLessThan 5} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{7 math:notLessThan 5} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{7 math:notLessThan 5} => {:mathnl1 :result true}}]
   [ a r:Inference; r:gives {:mathnl1 :result true}; r:evidence (
    [ a r:Fact; r:gives {7 math:notLessThan 5}]);
    r:rule [ a r:Extraction; r:gives {{7 math:notLessThan 5} => {:mathnl1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {7 math:notLessThan 5}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#mathnl1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {7 math:notLessThan 5}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(1 1) math:sum 2} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(1 1) math:sum 2} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(1 1) math:sum 2} => {:maths1 :result true}}]
   [ a r:Inference; r:gives {:maths1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(1 1) math:sum 2}]);
    r:rule [ a r:Extraction; r:gives {{(1 1) math:sum 2} => {:maths1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(1 1) math:sum 2}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#maths1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(1 1) math:sum 2}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("1" "1") math:sum 2} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("1" "1") math:sum 2} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("1" "1") math:sum 2} => {:maths2 :result true}}]
   [ a r:Inference; r:gives {:maths2 :result true}; r:evidence (
    [ a r:Fact; r:gives {("1" "1") math:sum 2}]);
    r:rule [ a r:Extraction; r:gives {{("1" "1") math:sum 2} => {:maths2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("1" "1") math:sum 2}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#maths2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("1" "1") math:sum 2}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} => {:maths3 :result true}}]
   [ a r:Inference; r:gives {:maths3 :result true}; r:evidence (
    [ a r:Fact; r:gives {("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0}]);
    r:rule [ a r:Extraction; r:gives {{("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} => {:maths3 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#maths3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} => {:maths4 :result true}}]
   [ a r:Inference; r:gives {:maths4 :result true}; r:evidence (
    [ a r:Fact; r:gives {("P1D"^^xsd:duration) math:sum 86400.0}]);
    r:rule [ a r:Extraction; r:gives {{("P1D"^^xsd:duration) math:sum 86400.0} => {:maths4 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("P1D"^^xsd:duration) math:sum 86400.0}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#maths4"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("P1D"^^xsd:duration) math:sum 86400.0}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{("eul" "er") str:concatenation "euler"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{("eul" "er") str:concatenation "euler"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{("eul" "er") str:concatenation "euler"} => {:strc1 :result true}}]
   [ a r:Inference; r:gives {:strc1 :result true}; r:evidence (
    [ a r:Fact; r:gives {("eul" "er") str:concatenation "euler"}]);
    r:rule [ a r:Extraction; r:gives {{("eul" "er") str:concatenation "euler"} => {:strc1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("eul" "er") str:concatenation "euler"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#strc1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {("eul" "er") str:concatenation "euler"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"Tim" str:containsIgnoringCase "IM"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"Tim" str:containsIgnoringCase "IM"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"Tim" str:containsIgnoringCase "IM"} => {:strci1 :result true}}]
   [ a r:Inference; r:gives {:strci1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"Tim" str:containsIgnoringCase "IM"}]);
    r:rule [ a r:Extraction; r:gives {{"Tim" str:containsIgnoringCase "IM"} => {:strci1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"Tim" str:containsIgnoringCase "IM"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#strci1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"Tim" str:containsIgnoringCase "IM"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"abracadabra" str:matches "(a|b|r|c|d)+"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"abracadabra" str:matches "(a|b|r|c|d)+"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"abracadabra" str:matches "(a|b|r|c|d)+"} => {:strm1 :result true}}]
   [ a r:Inference; r:gives {:strm1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"abracadabra" str:matches "(a|b|r|c|d)+"}]);
    r:rule [ a r:Extraction; r:gives {{"abracadabra" str:matches "(a|b|r|c|d)+"} => {:strm1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"abracadabra" str:matches "(a|b|r|c|d)+"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#strm1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"abracadabra" str:matches "(a|b|r|c|d)+"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"euler" str:startsWith "eu"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"euler" str:startsWith "eu"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"euler" str:startsWith "eu"} => {:strs1 :result true}}]
   [ a r:Inference; r:gives {:strs1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"euler" str:startsWith "eu"}]);
    r:rule [ a r:Extraction; r:gives {{"euler" str:startsWith "eu"} => {:strs1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"euler" str:startsWith "eu"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#strs1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"euler" str:startsWith "eu"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"2006-12-14"^^xsd:date time:day "14"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"2006-12-14"^^xsd:date time:day "14"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:day "14"} => {:timed1 :result true}}]
   [ a r:Inference; r:gives {:timed1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"2006-12-14"^^xsd:date time:day "14"}]);
    r:rule [ a r:Extraction; r:gives {{"2006-12-14"^^xsd:date time:day "14"} => {:timed1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"2006-12-14"^^xsd:date time:day "14"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#timed1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"2006-12-14"^^xsd:date time:day "14"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"2006-12-14"^^xsd:date time:month "12"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"2006-12-14"^^xsd:date time:month "12"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:month "12"} => {:timem1 :result true}}]
   [ a r:Inference; r:gives {:timem1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"2006-12-14"^^xsd:date time:month "12"}]);
    r:rule [ a r:Extraction; r:gives {{"2006-12-14"^^xsd:date time:month "12"} => {:timem1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"2006-12-14"^^xsd:date time:month "12"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#timem1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"2006-12-14"^^xsd:date time:month "12"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} => {:timey1 :result true}}]
   [ a r:Inference; r:gives {:timey1 :result true}; r:evidence (
    [ a r:Fact; r:gives {"2006-12-14"^^xsd:date time:year "2006"}]);
    r:rule [ a r:Extraction; r:gives {{"2006-12-14"^^xsd:date time:year "2006"} => {:timey1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"2006-12-14"^^xsd:date time:year "2006"}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#timey1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {"2006-12-14"^^xsd:date time:year "2006"}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:gives {
  {({:a :b :c. :d :e :f} true) e:graphDifference {:a :b :c. :d :e :f}} a :PASS.
  {(true {:d :e :f}) e:graphDifference true} a :PASS.
  {({:a :b :c. :d :e :f} {:d :e :f}) e:graphDifference {:a :b :c}} a :PASS.
  {({:a :b :c} {:a :b :c. :u :v :w. :x :y :z}) e:graphDifference true} a :PASS.
  {(true) e:graphIntersection true} a :PASS.
  {(true {:d :e :f}) e:graphIntersection true} a :PASS.
  {({:a :b :c. :d :e :f. :g :h :i} true) e:graphIntersection true} a :PASS.
  {({:a :b :c. :d :e :f} {:d :e :f}) e:graphIntersection {:d :e :f}} a :PASS.
  {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6} a :PASS.
  {(8 5 6 7 9 4) e:max 9} a :PASS.
  {(8 5 6 7 9 4) e:min 4} a :PASS.
  {((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)) e:reverse ((9 :d) (8 :d) (7 :a) (6 :b) (5 :a) (4 :d))} a :PASS.
  {((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d))} a :PASS.
  {"http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler"} a :PASS.
  {"Hello World!" e:wwwFormEncode "Hello%20World%21"} a :PASS.
  {("2000/10/swap/" "http://www.w3.org/") fn:resolve-uri "http://www.w3.org/2000/10/swap/"} a :PASS.
  {("2006-12-14" 5 2) fn:substring "12"} a :PASS.
  {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-after "Head"} a :PASS.
  {("http://www.co-ode.org/ontologies/galen#Head" "#") fn:substring-before "http://www.co-ode.org/ontologies/galen"} a :PASS.
  {((:a :b :c) (:d :e)) list:append (:a :b :c :d :e)} a :PASS.
  {(:a :b :c) list:first :a} a :PASS.
  {:c list:in (:a :b :c)} a :PASS.
  {(:a :b :c) list:last :c} a :PASS.
  {(:a :b :c :d) list:member :b} a :PASS.
  {(:a :b :c) list:rest (:b :c)} a :PASS.
  {(true) log:conjunction true} a :PASS.
  {(true {:u :v :w} {:x :y :z. :j :k :l}) log:conjunction {:u :v :w. :x :y :z. :j :k :l}} a :PASS.
  {(true {:u :v :w} true true) log:conjunction {:u :v :w}} a :PASS.
  {:a log:notEqualTo :b} a :PASS.
  {{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}} a :PASS.
  {<http://eulersharp.sourceforge.net/2006/02swap/med#Fever> log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever"} a :PASS.
  {<http://eulersharp.sourceforge.net/2007/07test#betaBlocker> log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker"} a :PASS.
  {(1 1) math:difference 0} a :PASS.
  {("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1.2328848E9} a :PASS.
  {2 math:greaterThan 1} a :PASS.
  {"02" math:greaterThan "1"} a :PASS.
  {7 math:notLessThan 5} a :PASS.
  {(1 1) math:sum 2} a :PASS.
  {("1" "1") math:sum 2} a :PASS.
  {("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.0} a :PASS.
  {("P1D"^^xsd:duration) math:sum 86400.0} a :PASS.
  {("eul" "er") str:concatenation "euler"} a :PASS.
  {"Tim" str:containsIgnoringCase "IM"} a :PASS.
  {"abracadabra" str:matches "(a|b|r|c|d)+"} a :PASS.
  {"euler" str:startsWith "eu"} a :PASS.
  {"2006-12-14"^^xsd:date time:day "14"} a :PASS.
  {"2006-12-14"^^xsd:date time:month "12"} a :PASS.
  {"2006-12-14"^^xsd:date time:year "2006"} a :PASS.
 }].

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {{_:sk0 e:findall (_:sk1 {:s :p _:sk1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{_:sk0 e:findall (_:sk1 {:s :p _:sk1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{_:sk0 e:findall (_:sk1 {:s :p _:sk1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))} => {:ef1 :result true}}]
   [ a r:Inference; r:gives {:ef1 :result true}; r:evidence (
    [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1) e:findall (_:sk0 {:s :p _:sk0} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo ((<http://eulersharp.sourceforge.net/2007/07test/biP.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk0"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 e:findall (var:x1 {:s :p var:x1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))} => {:ef1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk0 e:findall (_:sk1 {:s :p _:sk1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#ef1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk0 e:findall (_:sk1 {:s :p _:sk1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{({:a :b :c. :d :e :f. :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c. :g :h :i}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c. :d :e :f. :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c. :g :h :i}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c. :d :e :f. :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c. :g :h :i}} => {:egd4 :result true}}]
   [ a r:Inference; r:gives {:egd4 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c. :d :e :f. :g :h :i} {_:sk0 :e :f}) e:graphDifference {:a :b :c. :g :h :i}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk0"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {({:a :b :c. :d :e :f. :g :h :i} {var:x0 :e :f}) e:graphDifference {:a :b :c. :g :h :i}} => {:egd4 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f. :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c. :g :h :i}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egd4"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f. :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c. :g :h :i}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. _:sk3 :e :f} {_:sk3 :e :f. :g :h :i}) e:graphIntersection {_:sk3 :e :f. :g :h :i}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. _:sk3 :e :f} {_:sk3 :e :f. :g :h :i}) e:graphIntersection {_:sk3 :e :f. :g :h :i}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. _:sk3 :e :f} {_:sk3 :e :f. :g :h :i}) e:graphIntersection {_:sk3 :e :f. :g :h :i}} => {:egi5 :result true}}]
   [ a r:Inference; r:gives {:egi5 :result true}; r:evidence (
    [ a r:Fact; r:gives {({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. :d :e :f} {:d :e :f. :g :h :i}) e:graphIntersection {:d :e :f. :g :h :i}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#d"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. var:x0 :e :f} {var:x0 :e :f. :g :h :i}) e:graphIntersection {var:x0 :e :f. :g :h :i}} => {:egi5 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. _:sk3 :e :f} {_:sk3 :e :f. :g :h :i}) e:graphIntersection {_:sk3 :e :f. :g :h :i}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#egi5"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. _:sk3 :e :f} {_:sk3 :e :f. :g :h :i}) e:graphIntersection {_:sk3 :e :f. :g :h :i}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:a :b :d. _:sk4 e:optional {:g :h :i}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{:a :b :d. _:sk4 e:optional {:g :h :i}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{:a :b :d. _:sk4 e:optional {:g :h :i}} => {:eo1 :result true}}]
   [ a r:Inference; r:gives {:eo1 :result true}; r:evidence (
    [ a r:Extraction; r:gives {:a :b :d}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]
    [ a r:Fact; r:gives {_:sk0 e:optional {:g :h :i}}]);
    r:rule [ a r:Extraction; r:gives {{:a :b :d. var:x0 e:optional {:g :h :i}} => {:eo1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:a :b :d. _:sk4 e:optional {:g :h :i}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#eo1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:a :b :d. _:sk4 e:optional {:g :h :i}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(:a _:sk5) log:equalTo (_:sk6 :b)} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(:a _:sk5) log:equalTo (_:sk6 :b)} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(:a _:sk5) log:equalTo (_:sk6 :b)} => {:loge1 :result true}}]
   [ a r:Inference; r:gives {:loge1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(:a :b) log:equalTo (:a :b)}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#b"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#a"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {(:a var:x0) log:equalTo (var:x1 :b)} => {:loge1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a _:sk5) log:equalTo (_:sk6 :b)}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#loge1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(:a _:sk5) log:equalTo (_:sk6 :b)}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. _:sk7 :d _:sk8}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. _:sk7 :d _:sk8}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. _:sk7 :d _:sk8}} => {:logi1 :result true}}]
   [ a r:Inference; r:gives {:logi1 :result true}; r:evidence (
    [ a r:Fact; r:gives {{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. :e :d :f}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#e"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#f"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. var:x0 :d var:x1}} => {:logi1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. _:sk7 :d _:sk8}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logi1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. _:sk7 :d _:sk8}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:ng1 :namedGraph _:sk9. _:sk9 log:includes {:k :j :l. _:sk10 :d _:sk11}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{:ng1 :namedGraph _:sk9. _:sk9 log:includes {:k :j :l. _:sk10 :d _:sk11}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{:ng1 :namedGraph _:sk9. _:sk9 log:includes {:k :j :l. _:sk10 :d _:sk11}} => {:logi2 :result true}}]
   [ a r:Inference; r:gives {:logi2 :result true}; r:evidence (
    [ a r:Extraction; r:gives {:ng1 :namedGraph {:b :a :c. :e :d :f. :h :g :i. :k :j :l}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]
    [ a r:Fact; r:gives {{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. :e :d :f}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:b :a :c. :e :d :f. :h :g :i. :k :j :l}];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#e"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#f"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {:ng1 :namedGraph var:x0. var:x0 log:includes {:k :j :l. var:x1 :d var:x2}} => {:logi2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:ng1 :namedGraph _:sk9. _:sk9 log:includes {:k :j :l. _:sk10 :d _:sk11}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logi2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:ng1 :namedGraph _:sk9. _:sk9 log:includes {:k :j :l. _:sk10 :d _:sk11}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk12. _:sk12 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk12. _:sk12 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk12. _:sk12 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} => {:logi3 :result true}}]
   [ a r:Inference; r:gives {:logi3 :result true}; r:evidence (
    [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics {_:sk0 e:marker e:rules. (med:Ann med:Fever) fl:mu 0.8. (med:Ann med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9. (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.0060. (med:Joe med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:SevereAsthma) fl:mu 0.0010. (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.0010. med:aspirinHighDose med:prescribedFor med:Fever. med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction. med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction. med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinHighDose med:excludedFor med:AllergyForAspirin. med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinLowDose med:excludedFor med:AllergyForAspirin. med:betaBlocker med:excludedFor med:SevereAsthma. med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease. {_:sk1 med:prescribedFor _:sk2. (_:sk3 _:sk2) fl:mu _:sk4. _:sk4 math:greaterThan 0.7. (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6} _:sk7). (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6. (_:sk3 _:sk6) fl:mu _:sk8. _:sk8 math:notGreaterThan 0.01} _:sk7)} => {_:sk3 med:isPrescribed _:sk1}. _:sk0 e:marker e:rules}}]
    [ a r:Fact; r:gives {{_:sk0 e:marker e:rules. (med:Ann med:Fever) fl:mu 0.8. (med:Ann med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9. (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.0060. (med:Joe med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:SevereAsthma) fl:mu 0.0010. (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.0010. med:aspirinHighDose med:prescribedFor med:Fever. med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction. med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction. med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinHighDose med:excludedFor med:AllergyForAspirin. med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinLowDose med:excludedFor med:AllergyForAspirin. med:betaBlocker med:excludedFor med:SevereAsthma. med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease. {_:sk1 med:prescribedFor _:sk2. (_:sk3 _:sk2) fl:mu _:sk4. _:sk4 math:greaterThan 0.7. (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6} _:sk7). (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6. (_:sk3 _:sk6) fl:mu _:sk8. _:sk8 math:notGreaterThan 0.01} _:sk7)} => {_:sk3 med:isPrescribed _:sk1}. _:sk0 e:marker e:rules} log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk0 e:marker e:rules. (med:Ann med:Fever) fl:mu 0.8. (med:Ann med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9. (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.0060. (med:Joe med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:SevereAsthma) fl:mu 0.0010. (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.0010. med:aspirinHighDose med:prescribedFor med:Fever. med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction. med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction. med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinHighDose med:excludedFor med:AllergyForAspirin. med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinLowDose med:excludedFor med:AllergyForAspirin. med:betaBlocker med:excludedFor med:SevereAsthma. med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease. {_:sk1 med:prescribedFor _:sk2. (_:sk3 _:sk2) fl:mu _:sk4. _:sk4 math:greaterThan 0.7. (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6} _:sk7). (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6. (_:sk3 _:sk6) fl:mu _:sk8. _:sk8 math:notGreaterThan 0.01} _:sk7)} => {_:sk3 med:isPrescribed _:sk1}. _:sk0 e:marker e:rules}];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics var:x0. var:x0 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} => {:logi3 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk12. _:sk12 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logi3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk12. _:sk12 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{:ng2 :namedGraph _:sk13. _:sk13 log:notIncludes {:e :d :f. :b :e :c}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{:ng2 :namedGraph _:sk13. _:sk13 log:notIncludes {:e :d :f. :b :e :c}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{:ng2 :namedGraph _:sk13. _:sk13 log:notIncludes {:e :d :f. :b :e :c}} => {:logni2 :result true}}]
   [ a r:Inference; r:gives {:logni2 :result true}; r:evidence (
    [ a r:Extraction; r:gives {:ng2 :namedGraph {:b :a :c. :e :d :f. :h :g :i}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]
    [ a r:Fact; r:gives {{:b :a :c. :e :d :f. :h :g :i} log:notIncludes {:e :d :f. :b :e :c}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:b :a :c. :e :d :f. :h :g :i}];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {:ng2 :namedGraph var:x0. var:x0 log:notIncludes {:e :d :f. :b :e :c}} => {:logni2 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:ng2 :namedGraph _:sk13. _:sk13 log:notIncludes {:e :d :f. :b :e :c}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logni2"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:ng2 :namedGraph _:sk13. _:sk13 log:notIncludes {:e :d :f. :b :e :c}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk14. _:sk14 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk14. _:sk14 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk14. _:sk14 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} => {:logni3 :result true}}]
   [ a r:Inference; r:gives {:logni3 :result true}; r:evidence (
    [ a r:Fact; r:gives {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics {_:sk0 e:marker e:rules. (med:Ann med:Fever) fl:mu 0.8. (med:Ann med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9. (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.0060. (med:Joe med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:SevereAsthma) fl:mu 0.0010. (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.0010. med:aspirinHighDose med:prescribedFor med:Fever. med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction. med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction. med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinHighDose med:excludedFor med:AllergyForAspirin. med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinLowDose med:excludedFor med:AllergyForAspirin. med:betaBlocker med:excludedFor med:SevereAsthma. med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease. {_:sk1 med:prescribedFor _:sk2. (_:sk3 _:sk2) fl:mu _:sk4. _:sk4 math:greaterThan 0.7. (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6} _:sk7). (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6. (_:sk3 _:sk6) fl:mu _:sk8. _:sk8 math:notGreaterThan 0.01} _:sk7)} => {_:sk3 med:isPrescribed _:sk1}. _:sk0 e:marker e:rules}}]
    [ a r:Fact; r:gives {{_:sk0 e:marker e:rules. (med:Ann med:Fever) fl:mu 0.8. (med:Ann med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9. (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.0060. (med:Joe med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:SevereAsthma) fl:mu 0.0010. (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.0010. med:aspirinHighDose med:prescribedFor med:Fever. med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction. med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction. med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinHighDose med:excludedFor med:AllergyForAspirin. med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinLowDose med:excludedFor med:AllergyForAspirin. med:betaBlocker med:excludedFor med:SevereAsthma. med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease. {_:sk1 med:prescribedFor _:sk2. (_:sk3 _:sk2) fl:mu _:sk4. _:sk4 math:greaterThan 0.7. (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6} _:sk7). (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6. (_:sk3 _:sk6) fl:mu _:sk8. _:sk8 math:notGreaterThan 0.01} _:sk7)} => {_:sk3 med:isPrescribed _:sk1}. _:sk0 e:marker e:rules} log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk0 e:marker e:rules. (med:Ann med:Fever) fl:mu 0.8. (med:Ann med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9. (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.0060. (med:Joe med:AllergyForAspirin) fl:mu 0.0010. (med:Joe med:SevereAsthma) fl:mu 0.0010. (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.0010. med:aspirinHighDose med:prescribedFor med:Fever. med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction. med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction. med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinHighDose med:excludedFor med:AllergyForAspirin. med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease. med:aspirinLowDose med:excludedFor med:AllergyForAspirin. med:betaBlocker med:excludedFor med:SevereAsthma. med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease. {_:sk1 med:prescribedFor _:sk2. (_:sk3 _:sk2) fl:mu _:sk4. _:sk4 math:greaterThan 0.7. (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6} _:sk7). (_:sk5 1) e:findall (_:sk6 {_:sk1 med:excludedFor _:sk6. (_:sk3 _:sk6) fl:mu _:sk8. _:sk8 math:notGreaterThan 0.01} _:sk7)} => {_:sk3 med:isPrescribed _:sk1}. _:sk0 e:marker e:rules}];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics var:x0. var:x0 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} => {:logni3 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk14. _:sk14 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#logni3"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk14. _:sk14 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:component [ a r:Inference; r:gives {{(2 _:sk15) math:exponentiation 8.0. (4.0 _:sk15) math:product 12.0} a :PASS}; r:evidence (
  [ a r:Inference; r:gives {{(2 _:sk15) math:exponentiation 8.0. (4.0 _:sk15) math:product 12.0} a :PASS}; r:evidence (
   [ a r:Fact; r:gives {{(2 _:sk15) math:exponentiation 8.0. (4.0 _:sk15) math:product 12.0} => {:mathe1 :result true}}]
   [ a r:Inference; r:gives {:mathe1 :result true}; r:evidence (
    [ a r:Fact; r:gives {(2 3.0) math:exponentiation 8.0}]
    [ a r:Fact; r:gives {(4.0 3.0) math:product 12.0}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo 3.0];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {(2 var:x0) math:exponentiation 8.0. (4.0 var:x0) math:product 12.0} => {:mathe1 :result true}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(2 _:sk15) math:exponentiation 8.0. (4.0 _:sk15) math:product 12.0}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#mathe1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo true];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 => {var:x1 :result var:x2}. var:x1 :result var:x2} => {var:x0 a :PASS}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biP.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {(2 _:sk15) math:exponentiation 8.0. (4.0 _:sk15) math:product 12.0}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2007/07test#PASS"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a var:x1} => {var:x0 a var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2007/07test/biQ.n3>]]];

 r:gives {
  {_:sk0 e:findall (_:sk1 {:s :p _:sk1} ({:s1 :p1 :o1} {:s2 :p2 :o2. :s3 :p3 :o3}))} a :PASS.
  {({:a :b :c. :d :e :f. :g :h :i} {_:sk2 :e :f}) e:graphDifference {:a :b :c. :g :h :i}} a :PASS.
  {({:a :b :c. :d :e :f. :g :h :i} {:g :h :i. _:sk3 :e :f} {_:sk3 :e :f. :g :h :i}) e:graphIntersection {_:sk3 :e :f. :g :h :i}} a :PASS.
  {:a :b :d. _:sk4 e:optional {:g :h :i}} a :PASS.
  {(:a _:sk5) log:equalTo (_:sk6 :b)} a :PASS.
  {{:b :a :c. :e :d :f. :h :g :i. :k :j :l} log:includes {:k :j :l. _:sk7 :d _:sk8}} a :PASS.
  {:ng1 :namedGraph _:sk9. _:sk9 log:includes {:k :j :l. _:sk10 :d _:sk11}} a :PASS.
  {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk12. _:sk12 log:includes {med:aspirinHighDose med:excludedFor med:AllergyForAspirin}} a :PASS.
  {:ng2 :namedGraph _:sk13. _:sk13 log:notIncludes {:e :d :f. :b :e :c}} a :PASS.
  {<http://eulersharp.sourceforge.net/2003/03swap/medic.n3> log:semantics _:sk14. _:sk14 log:notIncludes {med:aspirinLowDose med:excludedFor med:SevereAsthma}} a :PASS.
  {(2 _:sk15) math:exponentiation 8.0. (4.0 _:sk15) math:product 12.0} a :PASS.
 }].

#ENDS 8177 msec
#Trunk : 389/860 = 45.23255813953489 %
#Branch: 23/3059 = 0.7518796992481203 %

#lf..........
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2006/02swap/lf#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {{:s4 :p7 _:sk0. {_:sk1 :p1 :o1. :s2 :p2 :o2} :p8 {:s6 :p6 _:sk2}} :implies {:s6 :p6 _:sk2}}; r:evidence (
  [ a r:Inference; r:gives {{:s4 :p7 _:sk0. {_:sk1 :p1 :o1. :s2 :p2 :o2} :p8 {:s6 :p6 _:sk2}} :implies {:s6 :p6 _:sk2}}; r:evidence (
   [ a r:Extraction; r:gives {{{_:sk1 :p1 :o1. :s2 :p2 :o2} :p3 _:sk0. :s4 :p4 _:sk1} :p5 {:s6 :p6 _:sk2}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lf.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk1 :p1 :o1. :s2 :p2 :o2}];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk0"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/lf#s4"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo {:s6 :p6 _:sk2}];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {{var:x0 :p3 var:x1. var:x2 :p4 var:x3} :p5 var:x4} => {{var:x2 :p7 var:x5. var:x0 :p8 var:x4} :implies var:x4}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lf.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {:s4 :p7 _:sk0. {_:sk1 :p1 :o1. :s2 :p2 :o2} :p8 {:s6 :p6 _:sk2}}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo {:s6 :p6 _:sk2}];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 :implies var:x1} => {var:x0 :implies var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/lfF.n3>]]];

 r:gives {
  {:s4 :p7 _:sk0. {_:sk1 :p1 :o1. :s2 :p2 :o2} :p8 {:s6 :p6 _:sk2}} :implies {:s6 :p6 _:sk2}.
 }].

#ENDS 53 msec
#Trunk : 3/3 = 100.0 %
#Branch: 3/6 = 50.0 %

#exon........
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix nsp0: <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#>.
@prefix nsp3: <http://eulersharp.sourceforge.net/2004/04test/>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix nsp1: <http://eulersharp.sourceforge.net/2004/04test/exonQ.n3#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix nsp2: <http://www.w3.org/2000/10/swap/test/EricNeumann/>.
@prefix : <http://example.com/exon/#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix var: <http://localhost/var#>.
@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {<http://eulersharp.sourceforge.net/2004/04test/exonQ.n3> q:answer (nsp0:ATP1B4_e2)}; r:evidence (
  [ a r:Fact; r:gives {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics {_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules}}]
  [ a r:Extraction; r:gives {nsp0:gi13560662 a :Transcript}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3>]]
  [ a r:Fact; r:gives {{_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules} log:includes {nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2}}]
  [ a r:Fact; r:gives {{_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules} log:notIncludes {nsp0:gi13560662 :hasExon nsp0:ATP1B4_e2}}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e2"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics var:x0. var:x1 a :Transcript. var:x0 log:includes {var:x2 a :Transcript. var:x2 :hasExon var:x3}. var:x0 log:notIncludes {var:x1 :hasExon var:x3}} => {<http://eulersharp.sourceforge.net/2004/04test/exonQ.n3> q:answer (var:x3)}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/exonQ.n3>]]];

 r:component [ a r:Inference; r:gives {<http://eulersharp.sourceforge.net/2004/04test/exonQ.n3> q:answer (nsp0:ATP1B4_e3)}; r:evidence (
  [ a r:Fact; r:gives {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics {_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules}}]
  [ a r:Extraction; r:gives {nsp0:gi13560664 a :Transcript}; r:because [ a r:Parsing; r:source <http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3>]]
  [ a r:Fact; r:gives {{_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules} log:includes {nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3}}]
  [ a r:Fact; r:gives {{_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules} log:notIncludes {nsp0:gi13560664 :hasExon nsp0:ATP1B4_e3}}]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo {_:sk0 e:marker e:rules. nsp0:ATP1B4 a :Gene. nsp0:ATP1B4 :chr "chrX". nsp0:ATP1B4 :hasTxVariant _:sk1. _:sk1 :representedBy nsp0:gi13560662. nsp0:ATP1B4 :hasTxVariant _:sk2. _:sk2 :representedBy nsp0:gi13560664. nsp0:ATP1B4 :strand "+". nsp0:ATP1B4_e1 a :Exon. nsp0:ATP1B4_e1 :startsAt "23897840". nsp0:ATP1B4_e1 :stopsAt "23897903". nsp0:ATP1B4_e2 a :Exon. nsp0:ATP1B4_e2 :startsAt "23902084". nsp0:ATP1B4_e2 :stopsAt "23902334". nsp0:ATP1B4_e3 a :Exon. nsp0:ATP1B4_e3 :startsAt "23902084". nsp0:ATP1B4_e3 :stopsAt "23902346". nsp0:ATP1B4_e4 a :Exon. nsp0:ATP1B4_e4 :startsAt "23906218". nsp0:ATP1B4_e4 :stopsAt "23906347". nsp0:gi13560662 a :Transcript. nsp0:gi13560662 :hasCds _:sk3. _:sk3 :startsAt "23897840". _:sk3 :stopsAt "23915296". nsp0:gi13560662 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e3. nsp0:gi13560662 :hasExon nsp0:ATP1B4_e4. nsp0:gi13560662 :weThink {:life a :Great}. nsp0:gi13560664 a :Transcript. nsp0:gi13560664 :hasCds _:sk4. _:sk4 :startsAt "23897840". _:sk4 :stopsAt "23915296". nsp0:gi13560664 :hasExon nsp0:ATP1B4_e1. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e2. nsp0:gi13560664 :hasExon nsp0:ATP1B4_e4. _:sk0 e:marker e:rules}];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560664"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#gi13560662"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3#ATP1B4_e3"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3. {<http://www.w3.org/2000/10/swap/test/EricNeumann/exdata.n3> log:semantics var:x0. var:x1 a :Transcript. var:x0 log:includes {var:x2 a :Transcript. var:x2 :hasExon var:x3}. var:x0 log:notIncludes {var:x1 :hasExon var:x3}} => {<http://eulersharp.sourceforge.net/2004/04test/exonQ.n3> q:answer (var:x3)}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2004/04test/exonQ.n3>]]];

 r:gives {
  <http://eulersharp.sourceforge.net/2004/04test/exonQ.n3> q:answer (nsp0:ATP1B4_e2).
  <http://eulersharp.sourceforge.net/2004/04test/exonQ.n3> q:answer (nsp0:ATP1B4_e3).
 }].

#ENDS 932 msec
#Trunk : 8/156 = 5.128205128205128 %
#Branch: 1/51 = 1.9607843137254901 %

#shubert.....
#Processed by $Id: euler.pl 3211 2009-12-17 20:58:07Z josd $

@prefix str: <http://www.w3.org/2000/10/swap/string#>.
@prefix var: <http://localhost/var#>.
@prefix q: <http://www.w3.org/2004/ql#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix fn: <http://www.w3.org/2005/xpath-functions#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <http://eulersharp.sourceforge.net/2006/02swap/steamroller#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

[ a r:Proof, r:Conjunction;
 r:component [ a r:Inference; r:gives {{:fox_1 :likes :bird_1} :steamroller {:bird_1 :likes :grain_1}}; r:evidence (
  [ a r:Inference; r:gives {:fox_1 a :Animal}; r:evidence (
   [ a r:Extraction; r:gives {:fox_1 a :Fox}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#fox_1"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Fox} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
  [ a r:Inference; r:gives {:bird_1 a :Animal}; r:evidence (
   [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Bird} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
  [ a r:Inference; r:gives {:fox_1 :likes :bird_1}; r:evidence (
   [ a r:Inference; r:gives {:fox_1 a :Animal}; r:evidence (
    [ a r:Extraction; r:gives {:fox_1 a :Fox}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#fox_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Fox} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:bird_1 a :Animal}; r:evidence (
    [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Bird} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:bird_1 :smaller :fox_1}; r:evidence (
    [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]
    [ a r:Extraction; r:gives {:fox_1 a :Fox}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#fox_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :Bird. var:x1 a :Fox} => {var:x0 :smaller var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>) 1) e:findall (:fox_1 {:fox_1 :dislikes :bird_1} ())}]
   [ a r:Inference; r:gives {:grain_1 a :Plant}; r:evidence (
    [ a r:Extraction; r:gives {:grain_1 a :Grain}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Grain} => {var:x0 a :Plant}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:bird_1 :likes :grain_1}; r:evidence (
    [ a r:Inference; r:gives {:bird_1 a :Animal}; r:evidence (
     [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Bird} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
    [ a r:Inference; r:gives {:caterpillar_1 a :Animal}; r:evidence (
     [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Caterpillar} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
    [ a r:Inference; r:gives {:caterpillar_1 :smaller :bird_1}; r:evidence (
     [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]
     [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
     r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :Caterpillar. var:x1 a :Bird} => {var:x0 :smaller var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
    [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>) 1) e:findall (:bird_1 {:bird_1 :dislikes :caterpillar_1} ())}]
    [ a r:Inference; r:gives {(:caterpillar_food_of :caterpillar_1) a :Plant}; r:evidence (
     [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Caterpillar} => {(:caterpillar_food_of var:x0) a :Plant}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
    [ a r:Inference; r:gives {:caterpillar_1 :likes (:caterpillar_food_of :caterpillar_1)}; r:evidence (
     [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Caterpillar} => {var:x0 :likes (:caterpillar_food_of var:x0)}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
    [ a r:Inference; r:gives {:grain_1 a :Plant}; r:evidence (
     [ a r:Extraction; r:gives {:grain_1 a :Grain}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
     r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
     r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Grain} => {var:x0 a :Plant}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
    [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>) 1) e:findall (:bird_1 {:bird_1 :dislikes :grain_1} ())}]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>)];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:caterpillar_food_of :caterpillar_1)];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a :Animal. var:x1 a :Animal. var:x1 :smaller var:x0. (var:x2 1) e:findall (var:x0 {var:x0 :dislikes var:x1} ()). var:x3 a :Plant. var:x1 :likes var:x3. var:x4 a :Plant. (var:x2 1) e:findall (var:x0 {var:x0 :dislikes var:x4} ())} => {var:x0 :likes var:x4}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:grain_1 a :Plant}; r:evidence (
    [ a r:Extraction; r:gives {:grain_1 a :Grain}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Grain} => {var:x0 a :Plant}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>) 1) e:findall (:fox_1 {:fox_1 :dislikes :grain_1} ())}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#fox_1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a :Animal. var:x1 a :Animal. var:x1 :smaller var:x0. (var:x2 1) e:findall (var:x0 {var:x0 :dislikes var:x1} ()). var:x3 a :Plant. var:x1 :likes var:x3. var:x4 a :Plant. (var:x2 1) e:findall (var:x0 {var:x0 :dislikes var:x4} ())} => {var:x0 :likes var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
  [ a r:Extraction; r:gives {:grain_1 a :Grain}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]
  [ a r:Inference; r:gives {:bird_1 :likes :grain_1}; r:evidence (
   [ a r:Inference; r:gives {:bird_1 a :Animal}; r:evidence (
    [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Bird} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:caterpillar_1 a :Animal}; r:evidence (
    [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Caterpillar} => {var:x0 a :Animal}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:caterpillar_1 :smaller :bird_1}; r:evidence (
    [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]
    [ a r:Extraction; r:gives {:bird_1 a :Bird}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
    r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1. {var:x0 a :Caterpillar. var:x1 a :Bird} => {var:x0 :smaller var:x1}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>) 1) e:findall (:bird_1 {:bird_1 :dislikes :caterpillar_1} ())}]
   [ a r:Inference; r:gives {(:caterpillar_food_of :caterpillar_1) a :Plant}; r:evidence (
    [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Caterpillar} => {(:caterpillar_food_of var:x0) a :Plant}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:caterpillar_1 :likes (:caterpillar_food_of :caterpillar_1)}; r:evidence (
    [ a r:Extraction; r:gives {:caterpillar_1 a :Caterpillar}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Caterpillar} => {var:x0 :likes (:caterpillar_food_of var:x0)}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Inference; r:gives {:grain_1 a :Plant}; r:evidence (
    [ a r:Extraction; r:gives {:grain_1 a :Grain}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]);
    r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
    r:rule [ a r:Extraction; r:gives {@forAll var:x0. {var:x0 a :Grain} => {var:x0 a :Plant}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]
   [ a r:Fact; r:gives {((<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>) 1) e:findall (:bird_1 {:bird_1 :dislikes :grain_1} ())}]);
   r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#caterpillar_1"]];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo (<http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x3"]; r:boundTo (:caterpillar_food_of :caterpillar_1)];
   r:binding [ r:variable [ n3:uri "http://localhost/var#x4"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
   r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2, var:x3, var:x4. {var:x0 a :Animal. var:x1 a :Animal. var:x1 :smaller var:x0. (var:x2 1) e:findall (var:x0 {var:x0 :dislikes var:x1} ()). var:x3 a :Plant. var:x1 :likes var:x3. var:x4 a :Plant. (var:x2 1) e:findall (var:x0 {var:x0 :dislikes var:x4} ())} => {var:x0 :likes var:x4}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamroller.n3>]]]);
  r:binding [ r:variable [ n3:uri "http://localhost/var#x0"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#fox_1"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x1"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#bird_1"]];
  r:binding [ r:variable [ n3:uri "http://localhost/var#x2"]; r:boundTo [ n3:uri "http://eulersharp.sourceforge.net/2006/02swap/steamroller#grain_1"]];
  r:rule [ a r:Extraction; r:gives {@forAll var:x0, var:x1, var:x2. {var:x0 a :Animal. var:x1 a :Animal. var:x0 :likes var:x1. var:x2 a :Grain. var:x1 :likes var:x2} => {{var:x0 :likes var:x1} :steamroller {var:x1 :likes var:x2}}}; r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/steamrollerF.n3>]]];

 r:gives {
  {:fox_1 :likes :bird_1} :steamroller {:bird_1 :likes :grain_1}.
 }].

#ENDS 1318 msec
#Trunk : 28/148 = 18.91891891891892 %
#Branch: 1/44 = 2.272727272727273 %

